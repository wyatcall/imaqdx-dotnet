<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NationalInstruments.Vision.Common</name>
    </assembly>
    <members>
        <member name="T:NationalInstruments.Vision.VisionException">
            <summary>
            Summary description for VisionException.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.VisionException.#ctor(NationalInstruments.Vision.ErrorCode)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.VisionException" crefType="Unqualified"/> class.
            </summary>
            <param name="errorCode">
            The Vision error code that this VisionException represents.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.VisionException" crefType="Unqualified"/> class.</summary>
        </member>
        <member name="M:NationalInstruments.Vision.VisionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.VisionException" crefType="Unqualified"/> class.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception. </param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.VisionException" crefType="Unqualified"/> class.
            </summary>
            <param name="message">
            The error message that explains the reason for the exception.
            </param>
            <param name="innerException">
            The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionException.Equals(NationalInstruments.Vision.VisionException)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance.
            </summary>
            <param name="other">
            A VisionException instance to compare to this instance.</param>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionException.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionException.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionException.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Sets the SerializationInfo with information about the exception. 
            </summary>
            <param name="info">
            The SerializationInfo that holds the serialized object data about the exception being thrown. </param>
            <param name="context">
            The StreamingContext that contains contextual information about the source or destination. </param>
        </member>
        <member name="P:NationalInstruments.Vision.VisionException.VisionErrorText">
            <summary>
            Gets or sets the error message returned from NI Vision.
            </summary>
            <value>
            The default value is <see langword="null"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.VisionException.VisionErrorCode">
            <summary>
            Gets or sets the error code returned from NI Vision.
            </summary>
            <value>
            The default value is Success.
            </value>
        </member>
        <member name="M:NationalInstruments.Vision.Internal.Utilities.ConvertCollectionToIntPtr``2(System.Collections.ObjectModel.Collection{``0})">
            <summary>
            Converts the collection to an IntPtr suitable to be passed to the DLL.
            NOTE: you must FreeCoTaskMem on the result after you're done with it!
            </summary>
            <typeparam name="E">external type</typeparam>
            <typeparam name="I">internal type</typeparam>
            <param name="coll">collection to convert</param>
            <returns>IntPtr that MUST be FreeCoTaskMem()'d after done!</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Internal.Utilities.ConvertCollectionToIntPtr``1(System.Collections.ObjectModel.Collection{``0})">
            <summary>
            Converts the collection to an IntPtr suitable to be passed to the DLL.
            NOTE: you must FreeCoTaskMem on the result after you're done with it!
            </summary>
            <typeparam name="T">internal type</typeparam>
            <param name="coll">collection to convert</param>
            <returns>IntPtr that MUST be FreeCoTaskMem()'d after done!</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Internal.Utilities.ConvertArrayToIntPtr``1(``0[])">
            <summary>
            Converts an array to an IntPtr suitable to be passed to the DLL.
            NOTE: you must FreeCoTaskMem on the result after you're done with it!
            </summary>
            <typeparam name="I">internal type</typeparam>
            <param name="array">array to convert</param>
            <returns>IntPtr that MUST be FreeCoTaskMem()'d after done!</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Internal.Utilities.Convert2DArrayToIntPtr``1(``0[0:,0:])">
            <summary>
            Converts an array to an IntPtr suitable to be passed to the DLL.
            NOTE: you must FreeCoTaskMem on the result after you're done with it!
            </summary>
            <typeparam name="I">internal type</typeparam>
            <param name="array">array to convert</param>
            <returns>IntPtr that MUST be FreeCoTaskMem()'d after done!</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Internal.Utilities.ConvertIntPtrToCollection``2(System.IntPtr,System.UInt32,System.Boolean)">
            <summary>
            This method converts an array of items (like a report) that we get from CVI
            to its corresponding external type, and disposes the array.
            </summary>
            <param name="ptr">The array that we get back from CVI.</param>
            <param name="count">The number of elements in the array.</param>
            <param name="dispose">Whether to dispose the pointer after done</param>
            <returns>The collection to return to the user.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Internal.Utilities.ConvertIntPtrToStructure``2(System.IntPtr,System.Boolean)">
            <summary>
            This method converts a single item we get from CVI to its corresponding
            external type, and disposes it.
            </summary>
            <param name="ptr">The item that we get back from CVI.</param>
            <returns>The item to return to the user.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Internal.Utilities.ConvertRoiToPoints(NationalInstruments.Vision.Roi)">
            <summary>
            This method converts the Roi to a collection of points.
            Requires that the Roi is not null and not disposed.
            </summary>
            <param name="roi">The Roi to convert</param>
            <returns>The points in the Roi</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Internal.Utilities.ConvertRoiToRectangle(NationalInstruments.Vision.Roi)">
            <summary>
            This method converts the Roi to a RectangleContour or RectangleContour.None.
            Requires that the Roi is not disposed (checks if it's a rectangle or not)
            </summary>
            <param name="roi">The Roi to convert</param>
            <returns>The RectangleContour in the Roi</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Internal.Utilities.ConvertBytesToString(System.Byte[])">
            <summary>
            Converts a null-terminated byte[] returned from the Vision DLL to a string.  Uses the default system encoding.
            </summary>
            <param name="bytes">The array to convert.</param>
            <returns>The string.</returns>
        </member>
        <member name="T:NationalInstruments.Vision.Internal.IHasExternalVersionOut`1">
            <summary>
            This interface indicates that the type is an internal type (used to pass to the Vision DLL)
            that has a corresponding external type (that we will return to the user), and we know how to
            convert from this to the external version.
            </summary>
            <typeparam name="T">The corresponding external type</typeparam>
        </member>
        <member name="T:NationalInstruments.Vision.ErrorCode">
            <summary>The array sizes are not compatible.</summary>
            <summary>
            Represents an error code returned by NI Vision.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Success">
            <summary>No error.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.SystemError">
            <summary>System error.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OutOfMemory">
            <summary>Not enough memory for requested operation.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.MemoryError">
            <summary>Memory error.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Unregistered">
            <summary>Unlicensed copy of NI Vision.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NeedFullVersion">
            <summary>The function requires an NI Vision 5.0 Advanced license.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Uninit">
            <summary>NI Vision did not initialize properly.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ImageTooSmall">
            <summary>The image is not large enough for the operation.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeCodabar">
            <summary>The decoded barcode information did not pass the checksum test.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeCode39">
            <summary>The barcode is not a valid Code 3 of 9 barcode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeCode93">
            <summary>The barcode is not a valid Code93 barcode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeCode128">
            <summary>The barcode is not a valid Code128 barcode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeEan8">
            <summary>The barcode is not a valid EAN8 barcode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeEan13">
            <summary>The barcode is not a valid EAN13 barcode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeI25">
            <summary>The barcode is not a valid Interleaved 2 of 5 barcode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeMsi">
            <summary>The barcode is not a valid MSI barcode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeUpca">
            <summary>The barcode is not a valid UPCA barcode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeCode93Shift">
            <summary>The Code93 barcode contains invalid shift encoding.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeType">
            <summary>The barcode type is invalid.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeInvalid">
            <summary>The image does not represent a valid linear barcode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeCode128Fnc">
            <summary>The FNC value in the Code128 barcode is not located before the first data value.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeCode128Set">
            <summary>The starting code set in the Code128 barcode is not valid.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackResourceOutOfMemory">
            <summary>Not enough reserved memory in the timed environment for the requested operation.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackNotSupported">
            <summary>The function is not supported when a time limit is active.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DirectxDllNotFound">
            <summary>Quartz.dll not found. Install DirectX 8.1 or later.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DirectxInvalidFilterQuality">
            <summary>The filter quality you provided is invalid. Valid quality values range from -1 to 1000.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidButtonLabel">
            <summary>Invalid button label.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ThreadInitializing">
            <summary>Could not execute the function in the separate thread because the thread has not completed initialization.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ThreadCouldNotInitialize">
            <summary>Could not execute the function in the separate thread because the thread could not initialize.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.MaskNotTemplateSize">
            <summary>The mask must be the same size as the template.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NotRectOrRotatedRect">
            <summary>The ROI must only have either a single Rectangle contour or a single Rotated Rectangle contour.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackUnboundedInterface">
            <summary>During timed execution, you must use the preallocated version of this operation.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackResourceConflict3">
            <summary>An image being modified by one process cannot be requested by another process while a time limit is active.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackResourceConflict2">
            <summary>An image with pattern matching, calibration, or overlay information cannot be manipulated while a time limit is active.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackResourceConflict1">
            <summary>An image created before a time limit is started cannot be resized while a time limit is active.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidContrastThreshold">
            <summary>Invalid contrast threshold. The threshold value must be greater than 0.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidCalibrationRoiMode">
            <summary>NI Vision does not support the calibration ROI mode you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidCalibrationMode">
            <summary>NI Vision does not support the calibration mode you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DrawtextColorMustBeGrayscale">
            <summary>Set the foreground and background text colors to grayscale to draw on a U8 image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.SaturationThresholdOutOfRange">
            <summary>The value of the saturation threshold must be from 0 to 255.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NotImage">
            <summary>Not an image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CustomdataInvalidKey">
            <summary>They custom data key you supplied is invalid. The only valid character values are decimal 32-126 and 161-255. There must also be no repeated, leading, or trailing spaces.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidStepSize">
            <summary>Step size must be greater than zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.MatrixSize">
            <summary>Invalid matrix size in the structuring element.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInsfPoints">
            <summary>Insufficient number of calibration feature points.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationImageCorrected">
            <summary>The operation is invalid in a corrected image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInvalidRoi">
            <summary>The ROI contains an invalid contour type or is not contained in the ROI learned for calibration.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationImageUncalibrated">
            <summary>The source/input image has not been calibrated.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.IncompMatrixSize">
            <summary>The number of pixel and real-world coordinates must be equal.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationFailedToFindGrid">
            <summary>Unable to automatically detect grid because the image is too distorted.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInfoVersion">
            <summary>Invalid calibration information version.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInvalidScalingFactor">
            <summary>Invalid calibration scaling factor.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationErrormap">
            <summary>The calibration error map cannot be computed.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInfo1">
            <summary>Invalid calibration template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInfo2">
            <summary>Invalid calibration template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInfo3">
            <summary>Invalid calibration template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInfo4">
            <summary>Invalid calibration template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInfo5">
            <summary>Invalid calibration template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInfo6">
            <summary>Invalid calibration template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInfoMicroPlane">
            <summary>Invalid calibration template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInfoPerspectiveProjection">
            <summary>Invalid calibration template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationInfoSimpleTransform">
            <summary>Invalid calibration template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ReservedMustBeNull">
            <summary>You must pass NULL for the reserved parameter.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidParticleParameterValue">
            <summary>You entered an invalid selection in the particle parameter.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NotAnObject">
            <summary>Not an object.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CalibrationDuplicateReferencePoint">
            <summary>The reference points passed are inconsistent. At least two similar pixel coordinates correspond to different real-world coordinates.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackResourceCannotUnlock">
            <summary>A resource conflict occurred in the timed environment. Two processes cannot manage the same resource and be time bounded.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackResourceLocked">
            <summary>A resource conflict occurred in the timed environment. Two processes cannot access the same resource and be time bounded.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackResourceNonEmptyInitialize">
            <summary>Multiple timed environments are not supported.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackResourceUninitializedEnable">
            <summary>A time limit cannot be started until the timed environment is initialized.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackResourceEnabled">
            <summary>Multiple timed environments are not supported.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackResourceReinitialize">
            <summary>The timed environment is already initialized.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackResize">
            <summary>The results of the operation exceeded the size limits on the output data arrays.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackStopTimer">
            <summary>No time limit is available to stop.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackStartTimer">
            <summary>A time limit could not be set.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackInitTimer">
            <summary>The timed environment could not be initialized.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackDeleteTimer">
            <summary>No initialized timed environment is available to close.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RollbackTimeout">
            <summary>The time limit has expired.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.PaletteNotSupported">
            <summary>Only 8-bit images support the use of palettes. Either do not use a palette, or convert your image to an 8-bit image before using a palette.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BadPassword">
            <summary>Incorrect password.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidImageType">
            <summary>Invalid image type.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMetafileHandle">
            <summary>Invalid metafile handle.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.IncompType">
            <summary>Incompatible image type.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CoordSysFirstAxis">
            <summary>Unable to fit a line for the primary axis.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CoordSysSecondAxis">
            <summary>Unable to fit a line for the secondary axis.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.IncompSize">
            <summary>Incompatible image size.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.MaskOutsideImage">
            <summary>When the mask's offset was applied, the mask was entirely outside of the image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidBorder">
            <summary>Invalid image border.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidScanDirection">
            <summary>Invalid scan direction.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidFunction">
            <summary>Unsupported function.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidColorMode">
            <summary>NI Vision does not support the color mode you specified.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidAction">
            <summary>The function does not support the requested action.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ImagesNotDiff">
            <summary>The source image and destination image must be different.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidPointsymbol">
            <summary>Invalid point symbol.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CantResizeExternal">
            <summary>Cannot resize an image in an acquisition buffer.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ExternalNotSupported">
            <summary>This operation is not supported for images in an acquisition buffer.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ExternalAlignment">
            <summary>The external buffer must be aligned on a 4-byte boundary. The line width and border pixels must be 4-byte aligned, as well.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidTolerance">
            <summary>The tolerance parameter must be greater than or equal to 0.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidWindowSize">
            <summary>The size of each dimension of the window must be greater than 2 and less than or equal to the size of the image in the corresponding dimension.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Jpeg2000LosslessWithFloatingPoint">
            <summary>Lossless compression cannot be used with the floating point wavelet transform mode. Either set the wavelet transform mode to integer, or use lossy compression.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMaxIterations">
            <summary>Invalid maximum number of iterations. Maximum number of iterations must be greater than zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidRotationMode">
            <summary>Invalid rotation mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSearchVectorWidth">
            <summary>Invalid search vector width. The width must be an odd number greater than zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMatrixMirrorMode">
            <summary>Invalid matrix mirror mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidAspectRatio">
            <summary>Invalid aspect ratio. Valid aspect ratios must be greater than or equal to zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidCellFillType">
            <summary>Invalid cell fill type.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidBorderIntegrity">
            <summary>Invalid border integrity. Valid values range from 0 to 100.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidDemodulationMode">
            <summary>Invalid demodulation mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidCellFilterMode">
            <summary>Invalid cell filter mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidEccType">
            <summary>Invalid ECC type.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMatrixPolarity">
            <summary>Invalid matrix polarity.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidCellSampleSize">
            <summary>Invalid cell sample size.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidLinearAverageMode">
            <summary>Invalid linear average mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Invalid2dBarcodeContrastForRoi">
            <summary>When using a region of interest that is not a rectangle, you must specify the contrast mode of the barcode as either black on white or white on black.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Invalid2dBarcodeSubtype">
            <summary>Invalid 2-D barcode Data Matrix subtype.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Invalid2dBarcodeShape">
            <summary>Invalid 2-D barcode shape.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Invalid2dBarcodeCellShape">
            <summary>Invalid 2-D barcode cell shape.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Invalid2dBarcodeContrast">
            <summary>Invalid 2-D barcode contrast.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Invalid2dBarcodeType">
            <summary>Invalid 2-D barcode type.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Driver">
            <summary>Cannot access NI-IMAQ driver.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.IoError">
            <summary>I/O error.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FindCoordsysMoreThanOneEdge">
            <summary>When searching for a coordinate system, the number of lines to fit must be 1.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Timeout">
            <summary>Trigger timeout.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSkeletonmode">
            <summary>The Skeleton mode you specified is invalid.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplatedescriptorRotationSearchstrategy">
            <summary>The template descriptor does not contain data required for the requested search strategy in rotation-invariant matching.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidProcessTypeForEdgeDetection">
            <summary>Invalid process type for edge detection.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidAngleRangeForStraightEdge">
            <summary>Angle range value should be equal to or greater than zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMinCoverageForStraightEdge">
            <summary>Minimum coverage value should be greater than zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidAngleTolForStraightEdge">
            <summary>The angle tolerance should be equal to or greater than 0.001.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSearchModeForStraightEdge">
            <summary>Invalid search mode for detecting straight edges</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidKernelSizeForEdgeDetection">
            <summary>Invalid kernel size for edge detection. The minimum kernel size is 3, the maximum kernel size is 1073741823 and the kernel size must be odd.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidGradingMode">
            <summary>Invalid grading mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidThresholdPercentage">
            <summary>Invalid threshold percentage. Valid values range from 0 to 100.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidEdgePolaritySearchMode">
            <summary>Invalid edge polarity search mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OpeningNewerAimGradingData">
            <summary>The AIM grading data attached to the image you tried to open was created with a newer version of NI Vision. Upgrade to the latest version of NI Vision to read this file.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NoVideoDriver">
            <summary>No video driver is installed.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RpcExecuteIvb">
            <summary>Unable to establish network connection with remote system.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidVideoBlit">
            <summary>RT Video Out does not support displaying the supplied image type at the selected color depth.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidVideoMode">
            <summary>Invalid video mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RpcExecute">
            <summary>Unable to display remote image on network connection.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RpcBind">
            <summary>Unable to establish network connection.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidFrameNumber">
            <summary>Invalid frame number.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Directx">
            <summary>An internal DirectX error has occurred. Try upgrading to the latest version of DirectX.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DirectxNoFilter">
            <summary>An appropriate DirectX filter to process this file could not be found. Install the filter that was used to create this AVI. Upgrading to the latest version of DirectX may correct this error. NI Vision requires DirectX 8.1 or higher.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DirectxIncompatibleCompressionFilter">
            <summary>Incompatible compression filter.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DirectxUnknownCompressionFilter">
            <summary>Unknown compression filter.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidAviSession">
            <summary>Invalid AVI session.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DirectxCertificationFailure">
            <summary>A software key is restricting the use of this compression filter.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.AviDataExceedsBufferSize">
            <summary>The data for this frame exceeds the data buffer size specified when creating the AVI file.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidLinegaugemethod">
            <summary>Invalid line gauge method.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TooManyAviSessions">
            <summary>There are too many AVI sessions open. You must close a session before you can open another one.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileFileHeader">
            <summary>Invalid file header.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileFileType">
            <summary>Invalid file type.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileColorTable">
            <summary>Invalid color table.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileArgerr">
            <summary>Invalid parameter.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileOpen">
            <summary>File is already open for writing.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileNotFound">
            <summary>File not found.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileTooManyOpen">
            <summary>Too many files open.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileIoErr">
            <summary>File I/O error.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FilePermission">
            <summary>File access denied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileInvalidType">
            <summary>NI Vision does not support the file type you specified.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileGetInfo">
            <summary>Could not read Vision info from file.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileRead">
            <summary>Unable to read data.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileWrite">
            <summary>Unable to write data.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileEof">
            <summary>Premature end of file.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileFormat">
            <summary>Invalid file format.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileOperation">
            <summary>Invalid file operation.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileInvalidDataType">
            <summary>NI Vision does not support the file data type you specified.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileNoSpace">
            <summary>Disk full.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidFramesPerSecond">
            <summary>The frames per second in an AVI must be greater than zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InsufficientBufferSize">
            <summary>The buffer that was passed in is not big enough to hold all of the data.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ComInitialize">
            <summary>Error initializing COM.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidParticleInfo">
            <summary>The image has invalid particle information. Call imaqCountParticles on the image to create particle information.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidParticleNumber">
            <summary>Invalid particle number.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.AviVersion">
            <summary>The AVI file was created in a newer version of NI Vision. Upgrade to the latest version of NI Vision to read this AVI file.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NumberOfPaletteColors">
            <summary>The color palette must have exactly 0 or 256 entries.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.AviTimeout">
            <summary>DirectX has timed out reading or writing the AVI file. When closing an AVI file, try adding an additional delay. When reading an AVI file, try reducing CPU and disk load.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.UnsupportedJpeg2000ColorspaceMethod">
            <summary>NI Vision does not support reading JPEG2000 files with this colorspace method.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Jpeg2000UnsupportedMultipleLayers">
            <summary>NI Vision does not support reading JPEG2000 files with more than one layer.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DirectxEnumerateFilters">
            <summary>DirectX is unable to enumerate the compression filters. This is caused by a third-party compression filter that is either improperly installed or is preventing itself from being enumerated. Remove any recently installed compression filters and try again.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidOffset">
            <summary>The offset you specified must be size 2.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CreateWindow">
            <summary>Unable to create window.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.WindowId">
            <summary>Invalid window ID.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ArraySizeMismatch">
            <summary>The array sizes are not compatible.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidQuality">
            <summary>The quality you provided is invalid. Valid quality values range from -1 to 1000.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMaxWaveletTransformLevel">
            <summary>Invalid maximum wavelet transform level. Valid values range from 0 to 255.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidQuantizationStepSize">
            <summary>The quantization step size must be greater than or equal to 0.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidWaveletTransformMode">
            <summary>Invalid wavelet transform mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NumberClass">
            <summary>Invalid number of classes.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Particle">
            <summary>Invalid particle.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BadMeasure">
            <summary>Invalid measure number.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.PropNodeWriteNotSupported">
            <summary>The Image Display control does not support writing this property node.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.UnsupportedColorMode">
            <summary>This function does not currently support the color mode you specified.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodePharmacode">
            <summary>The barcode is not a valid Pharmacode symbol</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BadIndex">
            <summary>Invalid handle table index.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidCompressionRatio">
            <summary>The compression ratio must be greater than or equal to 1.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TooManyContours">
            <summary>The ROI contains too many contours.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Protection">
            <summary>Protection error.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Internal">
            <summary>Internal error.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidCustomSample">
            <summary>The size of the feature vector in the custom sample must match the size of those you have already added.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidClassifierSession">
            <summary>Not a valid classifier session.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidKnnMethod">
            <summary>You requested an invalid Nearest Neighbor classifier method.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.KTooLow">
            <summary>The k parameter must be greater than two.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.KTooHigh">
            <summary>The k parameter must be <entity value="le"/> the number of samples in each class.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidOperationOnCompactSessionAttempted">
            <summary>This classifier session is compact. Only the Classify and Dispose functions may be called on a compact classifier session.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ClassifierSessionNotTrained">
            <summary>This classifier session is not trained. You may only call this function on a trained classifier session.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ClassifierInvalidSessionType">
            <summary>This classifier function cannot be called on this type of classifier session.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidDistanceMetric">
            <summary>You requested an invalid distance metric.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OpeningNewerClassifierSession">
            <summary>The classifier session you tried to open was created with a newer version of NI Vision. Upgrade to the latest version of NI Vision to read this file.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NoSamples">
            <summary>This operation cannot be performed because you have not added any samples.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidClassifierType">
            <summary>You requested an invalid classifier type.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidParticleOptions">
            <summary>The sum of Scale Dependence and Symmetry Dependence must be less than 1000.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NoParticle">
            <summary>The image yielded no particles.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidLimits">
            <summary>The limits you supplied are not valid.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BadSampleIndex">
            <summary>The Sample Index fell outside the range of Samples.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DescriptionTooLong">
            <summary>The description must be <entity value="le"/> 255 characters.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ClassifierInvalidEngineType">
            <summary>The engine for this classifier session does not support this operation.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidParticleType">
            <summary>You requested an invalid particle type.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CannotCompactUntrained">
            <summary>You may only save a session in compact form if it is trained.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidKernelSize">
            <summary>The Kernel size must be smaller than the image size.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.IncompatibleClassifierTypes">
            <summary>The session you read from file must be the same type as the session you passed in.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidUseOfCompactSessionFile">
            <summary>You can not use a compact classification file with read options other than Read All.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RoiHasOpenContours">
            <summary>The ROI you passed in may only contain closed contours.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NoLabel">
            <summary>You must pass in a label.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NoDestImage">
            <summary>You must provide a destination image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidRegistrationMethod">
            <summary>You provided an invalid registration method.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OpeningNewerInspectionTemplate">
            <summary>The golden template you tried to open was created with a newer version of NI Vision. Upgrade to the latest version of NI Vision to read this file.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidInspectionTemplate">
            <summary>Invalid golden template.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidEdgeThickness">
            <summary>Edge Thickness to Ignore must be greater than zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidScale">
            <summary>Scale must be greater than zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidAlignment">
            <summary>The supplied scale is invalid for your template.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DeprecatedFunction">
            <summary>This backwards-compatibility function can not be used with this session. Use newer, supported functions instead.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidNormalizationMethod">
            <summary>You must provide a valid normalization method.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidNiblackDeviationFactor">
            <summary>The deviation factor for Niblack local threshold must be between 0 and 1.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BoardNotFound">
            <summary>Board not found.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BoardNotOpen">
            <summary>Board not opened.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DllNotFound">
            <summary>DLL not found.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DllFunctionNotFound">
            <summary>DLL function not found.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TrigTimeout">
            <summary>Trigger timeout.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Invalid2dBarcodeSearchMode">
            <summary>NI Vision does not support the search mode you provided.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Unsupported2dBarcodeSearchMode">
            <summary>NI Vision does not support the search mode you provided for the type of 2D barcode for which you are searching.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.MatchfactorObsolete">
            <summary>matchFactor has been obsoleted. Instead, set the initialMatchListLength and matchListReductionFactor in the MatchPatternAdvancedOptions structure.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DataVersion">
            <summary>The data was stored with a newer version of NI Vision. Upgrade to the latest version of NI Vision to read this data.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CustomdataInvalidSize">
            <summary>The size you specified is out of the valid range.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CustomdataKeyNotFound">
            <summary>The key you specified cannot be found in the image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ClassifierClassifyImageWithCustomSession">
            <summary>Custom classifier sessions only classify feature vectors. They do not support classifying images.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidBitDepth">
            <summary>NI Vision does not support the bit depth you supplied for the image you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BadRoi">
            <summary>Invalid ROI.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BadRoiBox">
            <summary>Invalid ROI global rectangle.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.LabVersion">
            <summary>The version of LabVIEW or BridgeVIEW you are running does not support this operation.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidRange">
            <summary>The range you supplied is invalid.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidScalingMethod">
            <summary>NI Vision does not support the scaling method you provided.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidCalibrationUnit">
            <summary>NI Vision does not support the calibration unit you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidAxisOrientation">
            <summary>NI Vision does not support the axis orientation you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ValueNotInEnum">
            <summary>Value not in enumeration.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.WrongRegionType">
            <summary>You selected a region that is not of the right type.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NotEnoughRegions">
            <summary>You specified a viewer that does not contain enough regions.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TooManyParticles">
            <summary>The image has too many particles for this process.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.AviUnopenedSession">
            <summary>The AVI session has not been opened.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.AviReadSessionRequired">
            <summary>The AVI session is a write session, but this operation requires a read session.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.AviWriteSessionRequired">
            <summary>The AVI session is a read session, but this operation requires a write session.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.AviSessionAlreadyOpen">
            <summary>This AVI session is already open. You must close it before calling the Create or Open functions.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DataCorrupted">
            <summary>The data is corrupted and cannot be read.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidCompressionType">
            <summary>Invalid compression type.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidTypeOfFlatten">
            <summary>Invalid type of flatten.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidLength">
            <summary>The length of the edge detection line must be greater than zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMatrixSizeRange">
            <summary>The maximum Data Matrix barcode size must be equal to or greater than the minimum Data Matrix barcode size.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RequiresWin2000OrNewer">
            <summary>The function requires the operating system to be Microsoft Windows 2000 or newer.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.SmoothContoursMustBeSame">
            <summary>You must specify the same value for the smooth contours advanced match option for all templates you want to match.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.EnableCalibrationSupportMustBeSame">
            <summary>You must specify the same value for the enable calibration support advanced match option for all templates you want to match.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.GradingInformationNotFound">
            <summary>The source image does not contain grading information. You must prepare the source image for grading when reading the Data Matrix, and you cannot change the contents of the source image between reading and grading the Data Matrix.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OpeningNewerMultipleGeometricTemplate">
            <summary>The multiple geometric matching template you tried to open was created with a newer version of NI Vision. Upgrade to the latest version of NI Vision to read this file.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OpeningNewerGeometricMatchingTemplate">
            <summary>The geometric matching template you tried to open was created with a newer version of NI Vision. Upgrade to the latest version of NI Vision to read this file.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.EdgeFilterSizeMustBeSame">
            <summary>You must specify the same edge filter size for all the templates you want to match.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CurveExtractionModeMustBeSame">
            <summary>You must specify the same curve extraction mode for all the templates you want to match.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidGeometricFeatureType">
            <summary>The geometric feature type specified is invalid.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateNotLearned">
            <summary>You supplied a template that was not learned.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMultipleGeometricTemplate">
            <summary>Invalid multiple geometric template.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NoTemplateToLearn">
            <summary>Need at least one template to learn.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidNumberOfLabels">
            <summary>You supplied an invalid number of labels.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.LabelTooLong">
            <summary>Labels must be <entity value="le"/> 255 characters.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidNumberOfMatchOptions">
            <summary>You supplied an invalid number of match options.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.LabelNotFound">
            <summary>Cannot find a label that matches the one you specified.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DuplicateLabel">
            <summary>Duplicate labels are not allowed.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TooManyZones">
            <summary>The number of zones found exceeded the capacity of the algorithm.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidHatchStyle">
            <summary>The hatch style for the window background is invalid.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidFillStyle">
            <summary>The fill style for the window background is invalid.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.HardwareDoesntSupportNontearing">
            <summary>Your hardware is not supported by DirectX and cannot be put into NonTearing mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DirectxNotFound">
            <summary>DirectX is required for this feature. Please install the latest version..</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidShapeDescriptor">
            <summary>The passed shape descriptor is invalid.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMaxMatchOverlap">
            <summary>Invalid max match overlap. Values must be between -1 and 100.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMinMatchSeparationScale">
            <summary>Invalid minimum match separation scale. Values must be greater than or equal to -1.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMinMatchSeparationAngle">
            <summary>Invalid minimum match separation angle. Values must be between -1 and 360.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMinMatchSeparationDistance">
            <summary>Invalid minimum match separation distance. Values must be greater than or equal to -1.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMaximumFeaturesLearned">
            <summary>Invalid maximum number of features learn. Values must be integers greater than zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMaximumPixelDistanceFromLine">
            <summary>Invalid maximum pixel distance from line. Values must be positive real numbers.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidGeometricMatchingTemplate">
            <summary>Invalid geometric matching template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NotEnoughTemplateFeatures1">
            <summary>The template does not contain enough features for geometric matching.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NotEnoughTemplateFeatures">
            <summary>The template does not contain enough features for geometric matching.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMatchConstraintType">
            <summary>You specified an invalid value for the match constraint value of the range settings.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidOcclusionRange">
            <summary>Invalid occlusion range. Valid values for the bounds range from 0 to 100 and the upper bound must be greater than or equal to the lower bound.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidScaleRange">
            <summary>Invalid scale range. Values for the lower bound must be a positive real numbers and the upper bound must be greater than or equal to the lower bound.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMatchGeometricPatternSetupData">
            <summary>Invalid match geometric pattern setup data.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidLearnGeometricPatternSetupData">
            <summary>Invalid learn geometric pattern setup data.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidCurveExtractionMode">
            <summary>You must specify the same curve extraction mode for all the templates you want to match.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TooManyOcclusionRanges">
            <summary>You can specify only one occlusion range.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TooManyScaleRanges">
            <summary>You can specify only one scale range.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidNumberOfFeaturesRange">
            <summary>The minimum number of features must be less than or equal to the maximum number of features.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidEdgeFilterSize">
            <summary>Invalid edge filter size.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMinimumFeatureStrength">
            <summary>Invalid minimum strength for features. Values must be positive real numbers.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMinimumFeatureAspectRatio">
            <summary>Invalid aspect ratio for rectangular features. Values must be positive real numbers in the range 0.01 to 1.0.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMinimumFeatureLength">
            <summary>Invalid minimum length for linear features. Values must be integers greater than 0.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMinimumFeatureRadius">
            <summary>Invalid minimum radius for circular features. Values must be integers greater than 0.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMinimumRectangleDimension">
            <summary>Invalid minimum rectangle dimension. Values must be integers greater than 0.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidInitialMatchListLength">
            <summary>Invalid initial match list length. Values must be integers greater than 5.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSubpixelTolerance">
            <summary>Invalid subpixel tolerance. Values must be positive real numbers.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSubpixelIterations">
            <summary>Invalid number of subpixel iterations. Values must be integers greater 10.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMaximumFeaturesPerMatch">
            <summary>Invalid maximum number of features used per match. Values must be integers greater than or equal to zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMinimumFeaturesToMatch">
            <summary>Invalid minimum number of features used for matching. Values must be integers greater than zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMaximumEndPointGap">
            <summary>Invalid maximum end point gap. Valid values range from 0 to 32767.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidColumnStep">
            <summary>Invalid column step. Valid range is 1 to 255.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidRowStep">
            <summary>Invalid row step. Valid range is 1 to 255.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMinimumCurveLength">
            <summary>Invalid minimum length. Valid values must be greater than or equal to zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidEdgeThreshold">
            <summary>Invalid edge threshold. Valid values range from 1 to 360.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InfoNotFound">
            <summary>You must provide information about the subimage within the browser.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidAcceptanceLevel">
            <summary>The acceptance level is outside the valid range of 0 to 1000.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrNotAValidSession">
            <summary>Not a valid OCR session.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidCharacterSize">
            <summary>Invalid character size. Character size must be <entity value="ge"/> 1.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidThresholdMode">
            <summary>Invalid threshold mode value.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidSubstitutionCharacter">
            <summary>Invalid substitution character. Valid substitution characters are ASCII values that range from 1 to 254.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidNumberOfBlocks">
            <summary>Invalid number of blocks. Number of blocks must be <entity value="ge"/> 4 and <entity value="le"/>50.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidReadStrategy">
            <summary>Invalid read strategy.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidCharacterIndex">
            <summary>Invalid character index.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidNumberOfValidCharacterPositions">
            <summary>Invalid number of character positions. Valid values range from 0 to 255.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidLowThresholdValue">
            <summary>Invalid high threshold value. Valid threshold values range from 0 to 255.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidHighThresholdValue">
            <summary>Invalid high threshold value. Valid threshold values range from 0 to 255.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidThresholdRange">
            <summary>The low threshold must be less than the high threshold.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidLowerThresholdLimit">
            <summary>Invalid lower threshold limit. Valid lower threshold limits range from 0 to 255.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidUpperThresholdLimit">
            <summary>Invalid upper threshold limit. Valid upper threshold limits range from 0 to 255.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidThresholdLimits">
            <summary>The lower threshold limit must be less than the upper threshold limit.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidMinCharSpacing">
            <summary>Invalid minimum character spacing value. Character spacing must be &gt;= 0 pixels.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidMaxHorizElementSpacing">
            <summary>Invalid maximum horizontal element spacing value. Maximum horizontal element spacing must be &gt;= 0.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidMaxVertElementSpacing">
            <summary>Invalid maximum vertical element spacing value. Maximum vertical element spacing must be &gt;= 0.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidMinBoundingRectWidth">
            <summary>Invalid minimum bounding rectangle width. Minimum bounding rectangle width must be &gt;= 1.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidAspectRatio">
            <summary>Invalid aspect ratio value. The aspect ratio must be zero or &gt;= 100.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidCharacterSetFile">
            <summary>Invalid or corrupt character set file.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrCharacterValueCannotBeEmptystring">
            <summary>The character value must not be an empty string.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrCharacterValueTooLong">
            <summary>Character values must be <entity value="le"/>255 characters.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidNumberOfErosions">
            <summary>Invalid number of erosions. The number of erosions must be &gt;= 0.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrCharacterSetDescriptionTooLong">
            <summary>The character set description must be <entity value="le"/>255 characters.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidCharacterSetFileVersion">
            <summary>The character set file was created by a newer version of NI Vision. Upgrade to the latest version of NI Vision to read the character set file.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrIntegerValueForStringAttribute">
            <summary>You must specify characters for a string. A string cannot contain integers.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrGetOnlyAttribute">
            <summary>This attribute is read-only.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrIntegerValueForBooleanAttribute">
            <summary>This attribute requires a Boolean value.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidAttribute">
            <summary>Invalid attribute.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrStringValueForIntegerAttribute">
            <summary>This attribute requires integer values.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrStringValueForBooleanAttribute">
            <summary>String values are invalid for this attribute. Enter a boolean value.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrBooleanValueForIntegerAttribute">
            <summary>Boolean values are not valid for this attribute. Enter an integer value.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrMustBeSingleCharacter">
            <summary>Requires a single-character string.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidPredefinedCharacter">
            <summary>Invalid predefined character value.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrUnlicensed">
            <summary>This copy of NI OCR is unlicensed.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrBooleanValueForStringAttribute">
            <summary>String values are not valid for this attribute. Enter a Boolean value.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidNumberOfCharacters">
            <summary>The number of characters in the character value must match the number of objects in the image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidObjectIndex">
            <summary>Invalid object index.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidReadOption">
            <summary>Invalid read option.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidCharacterSizeRange">
            <summary>The minimum character size must be less than the maximum character size.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidBoundingRectWidthRange">
            <summary>The minimum character bounding rectangle width must be less than the maximum character bounding rectangle width.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidBoundingRectHeightRange">
            <summary>The minimum character bounding rectangle height must be less than the maximum character bounding rectangle height.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidSpacingRange">
            <summary>The maximum horizontal element spacing value must not exceed the minimum character spacing value.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidReadResolution">
            <summary>Invalid read resolution.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidMinBoundingRectHeight">
            <summary>Invalid minimum bounding rectangle height. The minimum bounding rectangle height must be &gt;= 1.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrNotAValidCharacterSet">
            <summary>Not a valid character set.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrRenameRefchar">
            <summary>A trained OCR character cannot be renamed while it is a reference character.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidCharacterValue">
            <summary>A character cannot have an ASCII value of 255.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NiocrInvalidNumberOfObjectsToVerify">
            <summary>The number of objects found does not match the number of expected characters or patterns to verify.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.MaxCharLengthPerLine">
            <summary>NI Vision does not support less than one icon per line.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSubpixelDivisions">
            <summary>Invalid subpixel divisions.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidDetectionMode">
            <summary>Invalid detection mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidContrast">
            <summary>Invalid contrast value. Valid contrast values range from 0 to 255.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CoordsysNotFound">
            <summary>The supplied ContourID did not correlate to a contour inside the ROI.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidTextorientation">
            <summary>NI Vision does not support the text orientation value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidInterpolationmethodForUnwrap">
            <summary>UnwrapImage does not support the interpolation method value you supplied. Valid interpolation methods are zero order and bilinear.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ExtrainfoVersion">
            <summary>The image was created in a newer version of NI Vision. Upgrade to the latest version of NI Vision to use this image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMaxpoints">
            <summary>The function does not support the maximum number of points that you specified.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMatchfactor">
            <summary>The function does not support the matchFactor that you specified.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.MulticoreOperation">
            <summary>The operation you have given Multicore Options is invalid. Please see the available enumeration values for Multicore Operation.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.MulticoreInvalidArgument">
            <summary>You have given Multicore Options an invalid argument.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ComplexImageRequired">
            <summary>A complex image is required.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorImageRequired">
            <summary>The input image must be a color image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorSpectrumMask">
            <summary>The color mask removes too much color information.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateImageTooSmall">
            <summary>The color template image is too small.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateImageTooLarge">
            <summary>The color template image is too large.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateImageHueContrastTooLow">
            <summary>The contrast in the hue plane of the image is too low for learning shape features.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateImageLuminanceContrastTooLow">
            <summary>The contrast in the luminance plane of the image is too low to learn shape features.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorLearnSetupData">
            <summary>Invalid color learn setup data.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorLearnSetupDataShape">
            <summary>Invalid color learn setup data.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorMatchSetupData">
            <summary>Invalid color match setup data.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorMatchSetupDataShape">
            <summary>Invalid color match setup data.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorRotationRequiresShapeFeature">
            <summary>Rotation-invariant color pattern matching requires a feature mode including shape.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptor">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptor1">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptor2">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptor3">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptor4">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptor5">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptor6">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorShift">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorNoshift">
            <summary>The color template image does not contain data required for shift-invariant color matching.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorShift1">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorShift2">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorRotation">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorNorotation">
            <summary>The color template image does not contain data required for rotation-invariant color matching.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorRotation1">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorRotation2">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorRotation3">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorRotation4">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorRotation5">
            <summary>Invalid color template image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorNoshape">
            <summary>The color template image does not contain data required for color matching in shape feature mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ColorTemplateDescriptorNospectrum">
            <summary>The color template image does not contain data required for color matching in color feature mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.IgnoreColorSpectrumSet">
            <summary>The ignore color spectra array is invalid.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSubsamplingRatio">
            <summary>Invalid subsampling ratio.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidWidth">
            <summary>Invalid pixel width.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSteepness">
            <summary>Invalid steepness.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ComplexPlane">
            <summary>Invalid complex plane.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidColorIgnoreMode">
            <summary>Invalid color ignore mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMinMatchScore">
            <summary>Invalid minimum match score. Acceptable values range from 0 to 1000.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidNumMatchesRequested">
            <summary>Invalid number of matches requested. You must request a minimum of one match.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidColorWeight">
            <summary>Invalid color weight. Acceptable values range from 0 to 1000.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSearchStrategy">
            <summary>Invalid search strategy.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidFeatureMode">
            <summary>Invalid feature mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidRect">
            <summary>NI Vision does not support rectangles with negative widths or negative heights.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidVisionInfo">
            <summary>NI Vision does not support the vision information type you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSkeletonmethod">
            <summary>NI Vision does not support the SkeletonMethod value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Invalid3dplane">
            <summary>NI Vision does not support the 3DPlane value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Invalid3ddirection">
            <summary>NI Vision does not support the 3DDirection value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidInterpolationmethodForRotate">
            <summary>imaqRotate does not support the InterpolationMethod value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidFlipaxis">
            <summary>NI Vision does not support the axis of symmetry you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FileFilenameNull">
            <summary>You must pass a valid file name. Do not pass in NULL.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSizetype">
            <summary>NI Vision does not support the SizeType value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.UnknownAlgorithm">
            <summary>You specified the dispatch status of an unknown algorithm.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DispatchStatusConflict">
            <summary>You are attempting to set the same algorithm to dispatch and to not dispatch. Remove one of the conflicting settings.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidConversionstyle">
            <summary>NI Vision does not support the Conversion Method value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidVerticalTextAlignment">
            <summary>NI Vision does not support the VerticalTextAlignment value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidComparefunction">
            <summary>NI Vision does not support the CompareFunction value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidBordermethod">
            <summary>NI Vision does not support the BorderMethod value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidBorderSize">
            <summary>Invalid border size. Acceptable values range from 0 to 50.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidOutlinemethod">
            <summary>NI Vision does not support the OutlineMethod value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidInterpolationmethod">
            <summary>NI Vision does not support the InterpolationMethod value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidScalingmode">
            <summary>NI Vision does not support the ScalingMode value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidDrawmodeForLine">
            <summary>imaqDrawLineOnImage does not support the DrawMode value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidDrawmode">
            <summary>NI Vision does not support the DrawMode value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidShapemode">
            <summary>NI Vision does not support the ShapeMode value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidFontcolor">
            <summary>NI Vision does not support the FontColor value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidTextalignment">
            <summary>NI Vision does not support the TextAlignment value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMorphologymethod">
            <summary>NI Vision does not support the MorphologyMethod value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateEmpty">
            <summary>The template image is empty.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSubpixType">
            <summary>NI Vision does not support the interpolation type you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InsfPoints">
            <summary>You supplied an insufficient number of points to perform this operation.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.UndefPoint">
            <summary>You specified a point that lies outside the image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidKernelCode">
            <summary>Invalid kernel code.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.WriteFileNotSupported">
            <summary>Writing files is not supported on this device.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.LcdCalibrate">
            <summary>The input image does not seem to be a valid LCD or LED calibration image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidColorSpectrum">
            <summary>The color spectrum array you provided does not contain enough elements or contains an element set to not-a-number (NaN).</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidPaletteType">
            <summary>NI Vision does not support the PaletteType value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidWindowThreadPolicy">
            <summary>NI Vision does not support the WindowThreadPolicy value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidColorsensitivity">
            <summary>NI Vision does not support the ColorSensitivity value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.PrecisionNotGtrThan0">
            <summary>The precision parameter must be greater than 0.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidTool">
            <summary>NI Vision does not support the Tool value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidReferencemode">
            <summary>NI Vision does not support the ReferenceMode value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMathtransformmethod">
            <summary>NI Vision does not support the MathTransformMethod value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidNumOfClasses">
            <summary>Invalid number of classes for auto threshold. Acceptable values range from 2 to 256.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidThresholdmethod">
            <summary>NI Vision does not support the threshold method value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RoiNot2Lines">
            <summary>The ROI you passed into imaqGetMeterArc must consist of two lines.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMeterarcmode">
            <summary>NI Vision does not support the MeterArcMode value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidComplexplane">
            <summary>NI Vision does not support the ComplexPlane value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ComplexplaneNotRealOrImaginary">
            <summary>You can perform this operation on a real or an imaginary ComplexPlane only.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidParticleinfomode">
            <summary>NI Vision does not support the ParticleInfoMode value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidBarcodetype">
            <summary>NI Vision does not support the BarcodeType value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidInterpolationmethodInterpolatepoints">
            <summary>imaqInterpolatePoints does not support the InterpolationMethod value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ContourIndexOutOfRange">
            <summary>The contour index you supplied is larger than the number of contours in the ROI.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ContouridNotFound">
            <summary>The supplied ContourID did not correlate to a contour inside the ROI.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.PointsAreCollinear">
            <summary>Do not supply collinear points for this operation.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ShapematchBadimagedata">
            <summary>Shape Match requires the image to contain only pixel values of 0 or 1.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ShapematchBadtemplate">
            <summary>The template you supplied for ShapeMatch contains no shape information.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidLine">
            <summary>The line you provided contains two identical points, or one of the coordinate locations for the line is not a number (NaN).</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidConcentricRakeDirection">
            <summary>Invalid concentric rake direction.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidSpokeDirection">
            <summary>Invalid spoke direction.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidEdgeProcess">
            <summary>Invalid edge process.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidRakeDirection">
            <summary>Invalid rake direction.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.CantDrawIntoViewer">
            <summary>Unable to draw to viewer. You must have the latest version of the control.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ImageSmallerThanBorder">
            <summary>Your image must be larger than its border size for this operation.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RoiNotRect">
            <summary>The ROI must only have a single Rectangle contour.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RoiNotPolygon">
            <summary>ROI is not a polygon.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.LcdNotNumeric">
            <summary>LCD image is not a number.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeChecksum">
            <summary>The decoded barcode information did not pass the checksum test.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.LinesParallel">
            <summary>You specified parallel lines for the meter ROI.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidBrowserImage">
            <summary>Invalid browser image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DivByZero">
            <summary>Cannot divide by zero.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.NullPointer">
            <summary>Null pointer.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.LinearCoeff">
            <summary>The linear equations are not independent.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ComplexRoot">
            <summary>The roots of the equation are complex.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.Barcode">
            <summary>The barcode does not match the type you specified.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.LcdNoSegments">
            <summary>No lit segment.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.LcdBadMatch">
            <summary>The LCD does not form a known digit.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.GipRange">
            <summary>An internal error occurred while attempting to access an invalid coordinate on an image.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.HeapTrashed">
            <summary>An internal memory error occurred.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BadFilterWidth">
            <summary>The filter width must be odd for the Canny operator.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidEdgeDir">
            <summary>You supplied an invalid edge direction in the Canny operator.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.EvenWindowSize">
            <summary>The window size must be odd for the Canny operator.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidLearnMode">
            <summary>Invalid learn mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.LearnSetupData">
            <summary>Invalid learn setup data.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidMatchMode">
            <summary>Invalid match mode.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.MatchSetupData">
            <summary>Invalid match setup data.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.RotationAngleRangeTooLarge">
            <summary>At least one range in the array of rotation angle ranges exceeds 360 degrees.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TooManyRotationAngleRanges">
            <summary>The array of rotation angle ranges contains too many ranges.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateDescriptor">
            <summary>Invalid template descriptor.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateDescriptor1">
            <summary>Invalid template descriptor.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateDescriptor2">
            <summary>Invalid template descriptor.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateDescriptor3">
            <summary>Invalid template descriptor.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateDescriptor4">
            <summary>The template descriptor was created with a newer version of NI Vision. Upgrade to the latest version of NI Vision to use this template.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateDescriptorRotation">
            <summary>Invalid template descriptor.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateDescriptorNorotation">
            <summary>The template descriptor does not contain data required for rotation-invariant matching.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateDescriptorRotation1">
            <summary>Invalid template descriptor.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateDescriptorShift">
            <summary>Invalid template descriptor.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateDescriptorNoshift">
            <summary>The template descriptor does not contain data required for shift-invariant matching.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateDescriptorShift1">
            <summary>Invalid template descriptor.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateImageContrastTooLow">
            <summary>The template image does not contain enough contrast.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateImageTooSmall">
            <summary>The template image is too small.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.TemplateImageTooLarge">
            <summary>The template image is too large.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrTemplateWrongSize">
            <summary>The size of the template string must match the size of the string you are trying to correct.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrBadTextTemplate">
            <summary>The supplied text template contains nonstandard characters that cannot be generated by OCR.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrCannotMatchTextTemplate">
            <summary>At least one character in the text template was of a lexical class that did not match the supplied character reports.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrLibInit">
            <summary>The OCR library cannot be initialized correctly.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrLoadLibrary">
            <summary>There was a failure when loading one of the internal OCR engine or LabView libraries.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidParameter">
            <summary>One of the parameters supplied to the OCR function that generated this error is invalid.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrPreprocessingFailed">
            <summary>The OCR engine failed during the preprocessing stage.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrRecognitionFailed">
            <summary>The OCR engine failed during the recognition stage.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrBadUserDictionary">
            <summary>The provided filename is not valid user dictionary filename.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidAutoorientmode">
            <summary>NI Vision does not support the AutoOrientMode value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidLanguage">
            <summary>NI Vision does not support the Language value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidCharacterset">
            <summary>NI Vision does not support the CharacterSet value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrIniFileNotFound">
            <summary>The system could not locate the initialization file required for OCR initialization.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidCharactertype">
            <summary>NI Vision does not support the CharacterType value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidRecognitionmode">
            <summary>NI Vision does not support the RecognitionMode value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidAutocorrectionmode">
            <summary>NI Vision does not support the AutoCorrectionMode value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidOutputdelimiter">
            <summary>NI Vision does not support the OutputDelimiter value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrBinDirNotFound">
            <summary>The system could not locate the OCR binary directory required for OCR initialization.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrWtsDirNotFound">
            <summary>The system could not locate the OCR weights directory required for OCR initialization.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrAddWordFailed">
            <summary>The supplied word could not be added to the user dictionary.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidCharacterpreference">
            <summary>NI Vision does not support the CharacterPreference value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidCorrectionmode">
            <summary>NI Vision does not support the CorrectionMethod value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidCorrectionlevel">
            <summary>NI Vision does not support the CorrectionLevel value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidMaxpointsize">
            <summary>NI Vision does not support the maximum point size you supplied. Valid values range from 4 to 72.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidTolerance">
            <summary>NI Vision does not support the tolerance value you supplied. Valid values are non-negative.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrInvalidContrastmode">
            <summary>NI Vision does not support the ContrastMode value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrSkewDetectFailed">
            <summary>The OCR attempted to detected the text skew and failed.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrOrientDetectFailed">
            <summary>The OCR attempted to detected the text orientation and failed.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FontFileFormat">
            <summary>Invalid font file format.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.FontFileNotFound">
            <summary>Font file not found.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrCorrectionFailed">
            <summary>The OCR engine failed during the correction stage.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.InvalidRoundingMode">
            <summary>NI Vision does not support the RoundingMode value you supplied.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.DuplicateTransformType">
            <summary>Found a duplicate transform type in the properties array. Each properties array may only contain one behavior for each transform type.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OverlayGroupNotFound">
            <summary>Overlay Group Not Found.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.BarcodeRsslimited">
            <summary>The barcode is not a valid RSS Limited symbol</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.QrDetectionVersion">
            <summary>Couldn't determine the correct version of the QR code.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.QrInvalidRead">
            <summary>Invalid read of the QR code.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.QrInvalidBarcode">
            <summary>The barcode that was read contains invalid parameters.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.QrDetectionMode">
            <summary>The data stream that was demodulated could not be read because the mode was not detected.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.QrDetectionModeltype">
            <summary>Couldn't determine the correct model of the QR code.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrNoTextFound">
            <summary>The OCR engine could not find any text in the supplied region.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrCharReportCorrupted">
            <summary>One of the character reports is no longer usable by the system.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.ImaqQrDimensionInvalid">
            <summary>Invalid Dimensions.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.ErrorCode.OcrRegionTooSmall">
            <summary>The OCR region provided was too small to have contained any characters.</summary>
        </member>
        <member name="T:NationalInstruments.Vision.ContourType">
            <summary>
            Specifies the type of a contour.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ContourType.Point">
            <summary>
            The contour represents a point.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ContourType.Line">
            <summary>
            The contour represents a line.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ContourType.Rectangle">
            <summary>
            The contour represents a rectangle.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ContourType.RotatedRectangle">
            <summary>
            The contour represents a rotated rectangle.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ContourType.Oval">
            <summary>
            The contour represents an oval.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ContourType.Annulus">
            <summary>
            The contour represents an annulus. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ContourType.Polygon">
            <summary>
            The contour represents a polygon.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ContourType.FreehandRegion">
            <summary>
            The contour represents a freehand region.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ContourType.FreehandLine">
            <summary>
            The contour represents a freehand line.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ContourType.Polyline">
            <summary>
            The contour represents a polyline.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.Shape">
            <summary>
            An abstract class that represents a shape, such as a point, line, rectangle, or annulus.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Shape.Move(System.Double,System.Double)">
            <summary>
            Moves the shape horizontally or vertically.
            </summary>
            <param name="dx">
            Distance in pixels to move on the x-axis.
            </param>
            <param name="dy">
            Distance in pixels to move on the y-axis.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Shape.Clone">
            <summary>
            Creates a copy of the source shape.
            </summary>
            <returns>
            A new shape with the same properties as the source shape.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Shape.ConvertToRoi">
            <summary>
            Returns an Roi that contains this shape.</summary>
            <returns>
            An Roi that contains this shape.</returns>
        </member>
        <member name="T:NationalInstruments.Vision.Contour">
            <summary>
            Represents contour data and properties that you can configure on a per contour basis.  
            </summary>
            <remarks>
            Contours are contained in an <see cref="T:NationalInstruments.Vision.Roi" crefType="Unqualified"/>.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Contour.#ctor(NationalInstruments.Vision.Shape)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Contour" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.Contour.Shape" crefType="Unqualified"/>.
            </summary>
            <param name="shape">
            The shape that this contour contains.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Contour.CopyTo(NationalInstruments.Vision.Roi)">
            <summary>
            Copies this contour to another <see cref="T:NationalInstruments.Vision.Roi" crefType="Unqualified"/>.
            </summary>
            <param name="destination">
            The <see cref="T:NationalInstruments.Vision.Roi" crefType="Unqualified"/> to add a copy of this contour to.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Contour.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Contour.Equals(NationalInstruments.Vision.Contour)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A Contour instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Contour.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Contour.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.Contour.Color">
            <summary>
            Gets or sets the color of this contour.
            </summary>
            <value>
            If this contour is contained in an <see cref="T:NationalInstruments.Vision.Roi" crefType="Unqualified"/>, the default value is the same as the <see cref="P:NationalInstruments.Vision.Roi.Color" crefType="Unqualified"/> property.  If not, the default value is <see cref="F:NationalInstruments.Vision.Rgb32Value.GreenColor" crefType="PartiallyQualified"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Contour.IsExternal">
            <summary>
            Gets or sets whether the contour is external or internal.
            </summary>
            <value>
            The default is <see langword="true"/>, meaning the contour is external.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Contour.Shape">
            <summary>
            Gets or sets the shape that this contour contains.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Contour.Type">
            <summary>
            Gets the type of shape that this contour contains.
            </summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.Roi">
            <summary>
            Represents a region of interest, typically used to indicate what parts of the image to process.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Roi" crefType="Unqualified"/> class. 
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.#ctor(NationalInstruments.Vision.Shape)">
            <summary>
            Creates a new <see cref="T:NationalInstruments.Vision.Roi" crefType="Unqualified"/> containing one shape.
            </summary>
            <param name="shape">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.#ctor(System.Collections.Generic.IList{NationalInstruments.Vision.Shape})">
            <summary>
            Creates a new <see cref="T:NationalInstruments.Vision.Roi" crefType="Unqualified"/> containing some shapes.
            </summary>
            <param name="shapes">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.#ctor(NationalInstruments.Vision.Roi)">
            <summary>
            Creates a new ROI that is a copy of an existing one.
            </summary>
            <param name="existing">The ROI to copy.</param>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.GetBoundingRectangle">
            <summary>
            Returns the bounding rectangle for the region of interest (ROI). The bounding rectangle is the smallest rectangle that contains all of the contours that comprise the ROI. 
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.GetEnumerator">
            <summary>
            Returns an enumerator of the Contours in this Roi.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator for the Contours in this Roi.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.Add(NationalInstruments.Vision.Shape)">
            <summary>
            Adds the shape to this Roi.
            </summary>
            <param name="item">
            The shape to add to this Roi.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.Clear">
            <summary>
            Removes all contours from this Roi.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.GetContour(System.Int32)">
            <summary>
            Returns the contour for the region of interest (ROI).  
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.RemoveAt(System.Int32)">
            <summary>
            Removes the contour at the given index.</summary>
            <param name="index">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.InsertItem(System.Int32,NationalInstruments.Vision.Shape)">
            <summary>
            </summary>
            <param name="index">
            </param>
            <param name="item">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.RemoveItem(System.Int32)">
            <summary>
            </summary>
            <param name="index">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.SetItem(System.Int32,NationalInstruments.Vision.Contour)">
            <summary>
            </summary>
            <param name="index">
            </param>
            <param name="item">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.RemoveContourFromVisionRoi(NationalInstruments.Vision.Contour)">
            <summary>
            </summary>
            <param name="item">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.OnSetColor(NationalInstruments.Vision.Rgb32Value)">
            <summary>
            </summary>
            <param name="color">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.Equals(NationalInstruments.Vision.Roi)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance.
            </summary>
            <param name="other">
            An Roi instance to compare to this instance.</param>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.Dispose">
            <summary>
            Releases the resources used by Roi.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.Roi.Dispose(System.Boolean)">
            <summary>
            </summary>
            <param name="disposing">
            </param>
        </member>
        <member name="P:NationalInstruments.Vision.Roi.Color">
            <summary>
            Gets or sets the color of a region of interest (ROI). This is the default color of Contours added to this Roi.
            </summary>
            <value>
            The color of an ROI. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Roi.Count">
            <summary>
            Gets the number of Contours this Roi contains.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Roi.Item(System.Int32)">
            <summary>
            </summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.RectangleContour">
            <summary>
            Defines the height, width, and coordinate values of a rectangle.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.RectangleContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.RectangleContour" crefType="Unqualified"/> class. 
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.RectangleContour.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.RectangleContour" crefType="Unqualified"/> class with the specified dimensions. 
            </summary>
            <param name="left">
            The left coordinate of the rectangle.
            </param>
            <param name="top">
            The top coordinate of the rectangle.
            </param>
            <param name="width">
            The width of the rectangle.
            </param>
            <param name="height">
            The height of the rectangle.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.RectangleContour.Clone">
            <summary>
            Copies all of the properties from the source rectangle into the destination rectangle.
            </summary>
            <returns>
            A new rectangle with the same properties as the source rectangle.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.RectangleContour.Move(System.Double,System.Double)">
            <summary>
            </summary>
            <param name="dx">
            Distance in pixels to move on the x-axis.</param>
            <param name="dy">
            Distance in pixels to move on the y-axis.</param>
        </member>
        <member name="M:NationalInstruments.Vision.RectangleContour.Initialize(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the properties of the rectangle.
            </summary>
            <param name="left">
            The left coordinate of the rectangle.
            </param>
            <param name="top">
            The top coordinate of the rectangle.
            </param>
            <param name="width">
            The width of the rectangle.
            </param>
            <param name="height">
            The height of the rectangle.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.RectangleContour.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.RectangleContour.Equals(NationalInstruments.Vision.RectangleContour)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A RectangleContour instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.RectangleContour.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.RectangleContour.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.RectangleContour.None">
            <summary>
            Gets a rectangle that includes the whole image.</summary>
            <value>
            A rectangle that includes the whole image.
            </value>
            <remarks>
             If a method takes in a <see cref="T:NationalInstruments.Vision.RectangleContour" crefType="Unqualified"/>, you can pass <see cref="P:NationalInstruments.Vision.RectangleContour.None" crefType="Unqualified"/> to make the method process the whole image.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.RectangleContour.Width">
            <summary>
            Gets or sets the width of the rectangle.
            </summary>
            <value>
            The width of the rectangle.
            The default value is 2147483647.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.RectangleContour.Height">
            <summary>
            Gets or sets the height of the rectangle.
            </summary>
            <value>
            The height of the rectangle.
            The default value is 2147483647.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.RectangleContour.Left">
            <summary>
            Gets or sets the left coordinate of the rectangle.
            </summary>
            <value>
            The left coordinate of the rectangle.
            The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.RectangleContour.Top">
            <summary>
            Gets or sets the top coordinate of the rectangle.
            </summary>
            <value>
            The top coordinate of the rectangle.
            The default value is 0.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.LineContour">
            <summary>
            Defines the end point and start point of a line.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.LineContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.LineContour" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.LineContour.#ctor(NationalInstruments.Vision.PointContour,NationalInstruments.Vision.PointContour)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.LineContour" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.LineContour.Start" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.LineContour.End" crefType="Unqualified"/>.
            </summary>
            <param name="start">
            Starting point of the line segment.
            </param>
            <param name="end">
            Ending point of the line segment.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.LineContour.Clone">
            <summary>
            Copies all of the properties from the source line segment into the destination line segment.
            </summary>
            <returns>
            A new line segment with the same properties as the source line segment.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.LineContour.Move(System.Double,System.Double)">
            <summary>
            Moves the contour horizontally or vertically.</summary>
            <param name="dx">
            Distance in pixels to move on the x-axis.
            </param>
            <param name="dy">
            Distance in pixels to move on the y-axis.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.LineContour.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.LineContour.Equals(NationalInstruments.Vision.LineContour)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A LineContour instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.LineContour.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.LineContour.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.LineContour.Start">
            <summary>
            Starting point of the line segment.
            </summary>
            <value>
            Starting point of the line segment.
            The default value is (0,0).
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.LineContour.End">
            <summary>
            Ending point of the line segment.
            </summary>
            <value>
            Ending point of the line segment.
            The default value is (0,0).
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.PointContour">
            <summary>
            Defines the x and y-coordinates of a point.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.PointContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PointContour" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.PointContour.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PointContour" crefType="Unqualified"/> class.
            </summary>
            <param name="x">
            X-coordinate of the point.
            </param>
            <param name="y">
            Y-coordinate of the point.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PointContour.#ctor(System.Drawing.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PointContour" crefType="Unqualified"/> class.
            </summary>
            <param name="point">
            The point to copy the x and y coordinate from.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PointContour.Clone">
            <summary>
            Copies the source point into the destination point.
            </summary>
            <returns>
            A new point with the same properties as the source point.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PointContour.Move(System.Double,System.Double)">
            <summary>
            Moves the point horizontally or vertically.
            </summary>
            <param name="dx">
            Distance in pixels to move on the x-axis.
            </param>
            <param name="dy">
            Distance in pixels to move on the y-axis.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PointContour.Initialize(System.Double,System.Double)">
            <summary>
            Sets the X- and Y- coordinate of the point.
            </summary>
            <param name="x">
            The X-coordinate of the point.
            </param>
            <param name="y">
            The Y-coordinate of the point.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PointContour.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PointContour.Equals(NationalInstruments.Vision.PointContour)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A PointContour instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PointContour.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PointContour.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.PointContour.X">
            <summary>
            X-coordinate of the point.
            </summary>
            <value>
            X-coordinate of the point.
            The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PointContour.Y">
            <summary>
            Y-coordinate of the point.
            </summary>
            <value>
            Y-coordinate of the point.
            The default value is 0.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.RotatedRectangleContour">
            <summary>
            Defines the center point, width, height, and angle of a rotated rectangle.
            </summary>
            <remarks>
            The width and height parameters set the axes that are horizontal and vertical, respectively, when the rectangle is not rotated (Angle = 0).
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.RotatedRectangleContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.RotatedRectangleContour" crefType="Unqualified"/> class. 
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.RotatedRectangleContour.#ctor(NationalInstruments.Vision.PointContour,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.RotatedRectangleContour" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.RotatedRectangleContour.Center" crefType="Unqualified"/>,
            <see cref="P:NationalInstruments.Vision.RotatedRectangleContour.Width" crefType="Unqualified"/>, <see cref="P:NationalInstruments.Vision.RotatedRectangleContour.Height" crefType="Unqualified"/>, and <see cref="P:NationalInstruments.Vision.RotatedRectangleContour.Angle" crefType="Unqualified"/>. 
            </summary>
            <param name="center">
            The center point of the rectangle.
            </param>
            <param name="width">
            Length of the rectangle axis that is horizontal when <see cref="P:NationalInstruments.Vision.RotatedRectangleContour.Angle" crefType="Unqualified"/> equals 0. 
            </param>
            <param name="height">
            Length of the rectangle axis that is vertical when <see cref="P:NationalInstruments.Vision.RotatedRectangleContour.Angle" crefType="Unqualified"/> equals 0. 
            </param>
            <param name="angle">
            The rotation angle, in degrees, of the rectangle.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.RotatedRectangleContour.#ctor(NationalInstruments.Vision.RectangleContour)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.RotatedRectangleContour" crefType="Unqualified"/> class. 
            </summary>
            <param name="rect">
            The rectangle to copy data from.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.RotatedRectangleContour.Clone">
            <summary>
            Copies all of the properties from the source rotated rectangle into the destination rotated rectangle.
            </summary>
            <returns>
            A new rotated rectangle with the same properties as the source rotated rectangle.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.RotatedRectangleContour.GetBoundingRectangle">
            <summary>
            Gets the bounding rectangle of the rotated rectangle.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.RotatedRectangleContour.Move(System.Double,System.Double)">
            <summary>
            Moves the rectangle horizontally or vertically.
            </summary>
            <param name="dx">
            Distance in pixels to move on the x-axis.</param>
            <param name="dy">
            Distance in pixels to move on the y-axis.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.RotatedRectangleContour.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.RotatedRectangleContour.Equals(NationalInstruments.Vision.RotatedRectangleContour)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance.
            </summary>
            <param name="other">
            A RotatedRectangleContour instance to compare to this instance.</param>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.RotatedRectangleContour.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.RotatedRectangleContour.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.RotatedRectangleContour.None">
            <summary>
            A rotated rectangle that includes the whole image.</summary>
            <value>
            Rotated rectangle that includes the whole image.
            </value>
            <remarks>
            If a method takes in a RotatedRectangleContour, you can pass <see cref="P:NationalInstruments.Vision.RotatedRectangleContour.None" crefType="Unqualified"/> to make the method process the whole image.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.RotatedRectangleContour.Angle">
            <summary>
            Gets or sets the rotation angle of the rectangle.
            </summary>
            <value>
            The rotation angle, in degrees, of the rectangle.
            The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.RotatedRectangleContour.Center">
            <summary>
            Gets or sets the center point of the rectangle.
            </summary>
            <value>
            The center point of the rectangle.
            The default value is (0,0).
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.RotatedRectangleContour.Width">
            <summary>
            Gets or sets the length of the rectangle axis that is horizontal when <see cref="P:NationalInstruments.Vision.RotatedRectangleContour.Angle" crefType="Unqualified"/> equals 0. 
            </summary>
            <value>
            The length of the rectangle axis that is horizontal when <see cref="P:NationalInstruments.Vision.RotatedRectangleContour.Angle" crefType="Unqualified"/> equals 0. 
            The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.RotatedRectangleContour.Height">
            <summary>
            Gets or sets the length of the rectangle axis that is vertical when <see cref="P:NationalInstruments.Vision.RotatedRectangleContour.Angle" crefType="Unqualified"/> equals 0. 
            </summary>
            <value>
            Length of the rectangle axis that is vertical when <see cref="P:NationalInstruments.Vision.RotatedRectangleContour.Angle" crefType="Unqualified"/> equals 0. 
            The default value is 0.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.OvalContour">
            <summary>
            Defines the x and y-coordinates and axes of an oval.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.OvalContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.OvalContour" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.OvalContour.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.OvalContour" crefType="Unqualified"/> class.
            </summary>
            <param name="left">
            The leftmost x-coordinate of the oval.
            </param>
            <param name="top">
            The topmost y-coordinate of the oval.
            </param>
            <param name="width">
            The length of the horizontal axis of the oval.
            </param>
            <param name="height">
            The length of the vertical axis of the oval.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.OvalContour.Initialize(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets all the properties of the oval.
            </summary>
            <param name="left">
            The leftmost x-coordinate of the oval.
            </param>
            <param name="top">
            The topmost y-coordinate of the oval.
            </param>
            <param name="width">
            The length of the horizontal axis of the oval.
            </param>
            <param name="height">
            The length of the vertical axis of the oval.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.OvalContour.Clone">
            <summary>
            Copies all of the properties from the source oval into the destination oval.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.OvalContour.Move(System.Double,System.Double)">
            <summary>
            Moves the contour horizontally or vertically.
            </summary>
            <param name="dx">
            Distance in pixels to move on the x-axis.</param>
            <param name="dy">
            Distance in pixels to move on the y-axis.</param>
        </member>
        <member name="M:NationalInstruments.Vision.OvalContour.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.OvalContour.Equals(NationalInstruments.Vision.OvalContour)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An OvalContour instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.OvalContour.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.OvalContour.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.OvalContour.Width">
            <summary>
            Length of the horizontal axis of the oval.
            </summary>
            <value>
            Length of the horizontal axis of the oval.
            The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.OvalContour.Height">
            <summary>
            Length of the vertical axis of the oval.
            </summary>
            <value>
            Length of the vertical axis.
            The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.OvalContour.Left">
            <summary>
            Leftmost x-coordinate of the oval.
            </summary>
            <value>
            Leftmost x-coordinate of the oval. The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.OvalContour.Top">
            <summary>
            Topmost y-coordinate of the oval.
            </summary>
            <value>
            Topmost y-coordinate of the oval.
            The default value is 0.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.AnnulusContour">
            <summary>
            Defines the location and size that specify an annulus, a ring-shaped geometric figure.
            </summary>
            <remarks>
            </remarks>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.Vision.AnnulusContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.AnnulusContour" crefType="Unqualified"/> class. 
            </summary>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.Vision.AnnulusContour.#ctor(NationalInstruments.Vision.PointContour,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.AnnulusContour" crefType="Unqualified"/> class with the specified center, radii, and angles. 
            </summary>
            <param name="center">
            The x-coordinate and y-coordinate of the center point.
            </param>
            <param name="innerRadius">
            The internal radius.
            </param>
            <param name="outerRadius">
            The external radius.
            </param>
            <param name="startAngle">
            The start angle, in degrees.
            </param>
            <param name="endAngle">
            The end angle, in degrees.
            </param>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.Vision.AnnulusContour.Clone">
            <summary>
            Creates a copy of the source annulus.
            </summary>
            <returns>
            A new annulus with the same properties as the source annulus.
            </returns>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.Vision.AnnulusContour.Move(System.Double,System.Double)">
            <summary>
            Moves the contour horizontally or vertically.
            </summary>
            <param name="dx">
            Distance in pixels to move the contour on the x-axis.</param>
            <param name="dy">
            Distance in pixels to move the contour on the y-axis.</param>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.Vision.AnnulusContour.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.Vision.AnnulusContour.Equals(NationalInstruments.Vision.AnnulusContour)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            </param>
            <returns>
            	An <see cref="T:NationalInstruments.Vision.AnnulusContour" crefType="Unqualified"/> instance to compare to this instance.
            </returns>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.Vision.AnnulusContour.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is instance of <see cref="T:NationalInstruments.Vision.AnnulusContour" crefType="Unqualified"/> and equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
            <approved>True</approved>
        </member>
        <member name="M:NationalInstruments.Vision.AnnulusContour.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
            <approved>True</approved>
        </member>
        <member name="P:NationalInstruments.Vision.AnnulusContour.Center">
            <summary> 
            Gets or sets  the center point of the annulus.
            </summary>
            <value>
            The value is an x and y-coordinate pair. The default value is (0,0).
            </value>
            <remarks>
            The following figure illustrates an annulus.
            <image src="annulus.gif"/>
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.AnnulusContour.InnerRadius">
            <summary>
            Gets or sets the internal radius of the annulus.
            </summary>
            <value>
            The internal radius of the annulus.
            The default value is 0.
            </value>
            <remarks>
            The following figure illustrates an annulus.
            <image src="annulus.gif"/>
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.AnnulusContour.OuterRadius">
            <summary>
            Gets or sets the external radius of the annulus.
            </summary>
            <value>
            The external radius of the annulus.
            The default value is 0.
            </value>
            <remarks>
            The following figure illustrates an annulus.
            <image src="annulus.gif"/>
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.AnnulusContour.StartAngle">
            <summary>
            Gets or sets the start angle, in degrees, of the annulus.
            </summary>
            <value>
            The start angle, in degrees, of the annulus.
            The default value is 0.
            </value>
            <remarks>
            The following figure illustrates an annulus.
            <image src="annulus.gif"/>
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.AnnulusContour.EndAngle">
            <summary>
            Gets or sets the end angle, in degrees, of the annulus.
            </summary>
            <value>
            The end angle, in degrees, of the annulus.
            The default value is 0.
            </value>
            <remarks>
            The following figure illustrates an annulus.
            <image src="annulus.gif"/>
            </remarks>
        </member>
        <member name="T:NationalInstruments.Vision.OpenClosedContour">
            <summary>
            Defines a general contour, either open or closed, that contains a collection of points.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.OpenClosedContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.OpenClosedContour" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.OpenClosedContour.#ctor(System.Collections.Generic.IList{NationalInstruments.Vision.PointContour})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.OpenClosedContour" crefType="Unqualified"/> class.
            </summary>
            <param name="points">
            The points this <see cref="T:NationalInstruments.Vision.OpenClosedContour" crefType="Unqualified"/> will contain.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.OpenClosedContour.Move(System.Double,System.Double)">
            <summary>
            Moves the contour horizontally or vertically.
            </summary>
            <param name="dx">
            Distance in pixels to move on the x-axis.
            </param>
            <param name="dy">
            Distance in pixels to move on the y-axis.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.OpenClosedContour.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.OpenClosedContour.Points">
            <summary>
            Gets the points that this OpenClosedContour contains.
            </summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.ClosedContour">
            <summary>
            Defines the location and size of a closed contour, which is a series of connected points where the last point connects to the first.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.ClosedContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.ClosedContour" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.ClosedContour.#ctor(System.Collections.Generic.IList{NationalInstruments.Vision.PointContour})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.ClosedContour" crefType="Unqualified"/> class with the specified points.
            </summary>
            <param name="points">
            The points that make up the closed contour.
            </param>
        </member>
        <member name="T:NationalInstruments.Vision.OpenContour">
            <summary>
            Defines the location and size of an open contour, which is a series of connected points where the last point does not connect to the first.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.OpenContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.OpenContour" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.OpenContour.#ctor(System.Collections.Generic.IList{NationalInstruments.Vision.PointContour})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.OpenContour" crefType="Unqualified"/> class with the specified points.
            </summary>
            <param name="points">
            The points that make up the open contour.
            </param>
        </member>
        <member name="T:NationalInstruments.Vision.PolygonContour">
            <summary>
            Defines a polygon.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.PolygonContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PolygonContour" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.PolygonContour.#ctor(System.Collections.Generic.IList{NationalInstruments.Vision.PointContour})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PolygonContour" crefType="Unqualified"/> class.
            </summary>
            <param name="points">
            The points this PolygonContour will contain.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PolygonContour.Clone">
            <summary>
            Creates a copy of the source polygon.</summary>
            <returns>
            A new polygon with the same properties as the source polygon.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.PolygonContour.Equals(NationalInstruments.Vision.PolygonContour)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A PolygonContour instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PolygonContour.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PolygonContour.GetHashCode">
            <summary>
            Returns a hash code for this object.</summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="T:NationalInstruments.Vision.FreehandRegionContour">
            <summary>
            Defines the points of a free-form region. This shape is similar to a polygon, but individual points are not draggable.</summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.FreehandRegionContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.FreehandRegionContour" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.FreehandRegionContour.#ctor(System.Collections.Generic.IList{NationalInstruments.Vision.PointContour})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.FreehandRegionContour" crefType="Unqualified"/> class with the specified points.
            </summary>
            <param name="points">
            The points that this FreehandRegionContour will contain.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.FreehandRegionContour.Clone">
            <summary>
            Creates a copy of the source freehand region.
            </summary>
            <returns>
            A new freehand region with the same properties as the source freehand region.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.FreehandRegionContour.Equals(NationalInstruments.Vision.FreehandRegionContour)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.FreehandRegionContour.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.FreehandRegionContour.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="T:NationalInstruments.Vision.FreehandLineContour">
            <summary>
            Contains the points of a free-form line shape. This shape is similar to a polyline, but individual points can not be dragged.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.FreehandLineContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.FreehandLineContour" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.FreehandLineContour.#ctor(System.Collections.Generic.IList{NationalInstruments.Vision.PointContour})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.FreehandLineContour" crefType="Unqualified"/> class with the specified points.
            </summary>
            <param name="points">
            The points that this FreehandLineContour will contain.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.FreehandLineContour.Clone">
            <summary>
            Creates a copy of the source freehand line.
            </summary>
            <returns>
            A new freehand line with the same properties as the source freehand line.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.FreehandLineContour.Equals(NationalInstruments.Vision.FreehandLineContour)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance.
            </summary>
            <param name="other">
            A FreehandLineContour instance to compare to this instance.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.FreehandLineContour.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.FreehandLineContour.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="T:NationalInstruments.Vision.PolylineContour">
            <summary>
            Defines a polyline shape. This shape is similar to a polygon, but is not closed.</summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.PolylineContour.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PolylineContour" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.PolylineContour.#ctor(System.Collections.Generic.IList{NationalInstruments.Vision.PointContour})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PolylineContour" crefType="Unqualified"/> class.
            </summary>
            <param name="points">
            The points this PolygonContour will contain.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PolylineContour.Clone">
            <summary>
            Creates a copy of the source polyline.
            </summary>
            <returns>
            A new polyline with the same properties as the source polyline.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PolylineContour.Equals(NationalInstruments.Vision.PolylineContour)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance.
            </summary>
            <param name="other">
            A PolylineContour instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="other"/> is a object that represents the same as the current; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.PolylineContour.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PolylineContour.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="T:NationalInstruments.Vision.Rgb32Value">
            <summary>
            Defines a color in the RGB (Red, Green, Blue) color space.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Rgb32Value.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Rgb32Value" crefType="Unqualified"/> class.
            </summary>
            <param name="red">
            </param>
            <param name="green">
            </param>
            <param name="blue">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Rgb32Value.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Rgb32Value" crefType="Unqualified"/> class.
            </summary>
            <param name="red">
            </param>
            <param name="green">
            </param>
            <param name="blue">
            </param>
            <param name="alpha">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Rgb32Value.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Rgb32Value" crefType="Unqualified"/> class.
            </summary>
            <param name="color">
            The color to initialize this Rgb32Value to.</param>
        </member>
        <member name="M:NationalInstruments.Vision.Rgb32Value.Equals(NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An Rgb32Value instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Rgb32Value.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Rgb32Value.op_Equality(NationalInstruments.Vision.Rgb32Value,NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Returns whether the two colors are equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            Whether the two values are equal.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Rgb32Value.op_Inequality(NationalInstruments.Vision.Rgb32Value,NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Returns whether the two colors are not equal.
            </summary>
            <param name="val1">
            The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            Whether the two values are not equal.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Rgb32Value.GetHashCode">
            <summary>
            Returns a hash code for this object.</summary>
            <returns>
            A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Rgb32Value.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="F:NationalInstruments.Vision.Rgb32Value.TransparentColor">
            <summary>
            A color that represents transparency.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.Rgb32Value.RedColor">
            <summary>
            A color that represents red.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.Rgb32Value.BlueColor">
            <summary>
            A color that represents blue.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.Rgb32Value.GreenColor">
            <summary>
            A color that represents green.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.Rgb32Value.YellowColor">
            <summary>
            A color that represents yellow.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.Rgb32Value.WhiteColor">
            <summary>
            A color that represents white.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.Rgb32Value.BlackColor">
            <summary>
            A color that represents black.
            </summary>
        </member>
        <member name="P:NationalInstruments.Vision.Rgb32Value.Color">
            <summary>
            Gets  the <see cref="T:NationalInstruments.Vision.Rgb32Value" crefType="Unqualified"/> as a Windows color.
            </summary>
            <value>
            	<see cref="T:NationalInstruments.Vision.Rgb32Value" crefType="Unqualified"/> as a Windows color.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Rgb32Value.Blue">
            <summary>
            Gets the blue value of the color.
            </summary>
            <value>
            The blue value of the color.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Rgb32Value.Green">
            <summary>
            Gets the green value of the color.
            </summary>
            <value>
            The green value of the color.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Rgb32Value.Red">
            <summary>
            Gets the red value of the color.
            </summary>
            <value>The red value of the color.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Rgb32Value.Alpha">
            <summary>
            Gets the alpha value of the color, which represents extra information about a color image, such as gamma correction. 
            </summary>
            <value>
            The alpha value of the color, which represents extra information about a color image, such as gamma correction. 
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.Hsl32Value">
            <summary>
            Defines a color in the HSL (Hue, Saturation, and Luminance) color space.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Hsl32Value.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Hsl32Value" crefType="Unqualified"/> class.
            </summary>
            <param name="hue">
            </param>
            <param name="saturation">
            </param>
            <param name="luminance">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Hsl32Value.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Hsl32Value" crefType="Unqualified"/> class.
            </summary>
            <param name="hue">
            </param>
            <param name="saturation">
            </param>
            <param name="luminance">
            </param>
            <param name="alpha">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Hsl32Value.Equals(NationalInstruments.Vision.Hsl32Value)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An Hsl32Value instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsl32Value.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsl32Value.op_Equality(NationalInstruments.Vision.Hsl32Value,NationalInstruments.Vision.Hsl32Value)">
            <summary>
            Returns whether the two colors are equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            Whether the two values are equal.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsl32Value.op_Inequality(NationalInstruments.Vision.Hsl32Value,NationalInstruments.Vision.Hsl32Value)">
            <summary>
            Returns whether the two colors are not equal.
            </summary>
            <param name="val1">
            The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            Whether the two values are not equal.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsl32Value.GetHashCode">
            <summary>
            Returns a hash code for this object.</summary>
            <returns>
            A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsl32Value.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.Hsl32Value.Luminance">
            <summary>
            Gets the color luminance. 
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Hsl32Value.Saturation">
            <summary>
            Gets the color saturation. 
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Hsl32Value.Hue">
            <summary>
            Gets the color hue. 
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Hsl32Value.Alpha">
            <summary>
            Gets the alpha value of the color, which represents extra information about a color image, such as gamma correction.
            </summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.Complex">
            <summary>
            Represents a complex value.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Complex.#ctor(System.Single,System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Complex" crefType="Unqualified"/> class.
            </summary>
            <param name="real">
            The real part of the value.
            </param>
            <param name="imaginary">
            The imaginary part of the value.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Complex.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Complex.Equals(NationalInstruments.Vision.Complex)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A Complex instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Complex.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Complex.op_Equality(NationalInstruments.Vision.Complex,NationalInstruments.Vision.Complex)">
            <summary>
            Returns whether the two colors are equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            	<see langword="true"/> if the two values are equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Complex.op_Inequality(NationalInstruments.Vision.Complex,NationalInstruments.Vision.Complex)">
            <summary>
            Returns whether the two colors are not equal.
            </summary>
            <param name="val1">
            The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            	<see langword="true"/> if the two values are not equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Complex.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.Complex.Real">
            <summary>
            Gets the real part of the value.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Complex.Imaginary">
            <summary>
            Gets the imaginary part of the value.
            </summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.RgbU64Value">
            <summary>
            Defines color in the RGB (Red, Green, Blue) color space where each channel has 16 bits.</summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.RgbU64Value.#ctor(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.RgbU64Value" crefType="Unqualified"/> class.
            </summary>
            <param name="red">
            </param>
            <param name="green">
            </param>
            <param name="blue">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.RgbU64Value.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.RgbU64Value" crefType="Unqualified"/> class.
            </summary>
            <param name="red">
            </param>
            <param name="green">
            </param>
            <param name="blue">
            </param>
            <param name="alpha">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.RgbU64Value.Equals(NationalInstruments.Vision.RgbU64Value)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An RgbU64Value instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.RgbU64Value.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.RgbU64Value.op_Equality(NationalInstruments.Vision.RgbU64Value,NationalInstruments.Vision.RgbU64Value)">
            <summary>
            Returns whether the two colors are equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            Whether the two values are equal.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.RgbU64Value.op_Inequality(NationalInstruments.Vision.RgbU64Value,NationalInstruments.Vision.RgbU64Value)">
            <summary>
            Returns whether the two colors are not equal.
            </summary>
            <param name="val1">
            The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            Whether the two values are not equal.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.RgbU64Value.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.RgbU64Value.GetHashCode">
            <summary>
            Returns a hash code for this object.</summary>
            <returns>
            A 32-bit signed integer hash code.</returns>
        </member>
        <member name="P:NationalInstruments.Vision.RgbU64Value.Blue">
            <summary>
            Gets the blue value of the color.
            </summary>
            <value>
            The blue value of the color.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.RgbU64Value.Green">
            <summary>
            Gets the green value of the color.
            </summary>
            <value>
            The green value of the color.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.RgbU64Value.Red">
            <summary>
            Gets the red value of the color.
            </summary>
            <value>
            The red value of the color.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.RgbU64Value.Alpha">
            <summary>
            Gets the alpha value of the color, which represents extra information about a color image, such as gamma correction. 
            </summary>
            <value>
            The alpha value of the color, which represents extra information about a color image, such as gamma correction. 
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.PixelValue">
            <summary>
            A value representing a pixel in an image.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue.#ctor(System.Single)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue" crefType="Unqualified"/> class  for images of type U8, I16, U16, and Single.
            </summary>
            <param name="value">
            The value of this pixel.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue.#ctor(NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue" crefType="Unqualified"/> class for images of type Rgb32Value.
            </summary>
            <param name="value">
            The value of this pixel.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue.#ctor(NationalInstruments.Vision.RgbU64Value)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue" crefType="Unqualified"/> class for images of type RgbU64Value.
            </summary>
            <param name="value">
            The value of this pixel.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue.#ctor(NationalInstruments.Vision.Hsl32Value)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue" crefType="Unqualified"/> class for images of type Hsl32Value.
            </summary>
            <param name="value">
            The value of this pixel.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue.#ctor(NationalInstruments.Vision.Complex)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue" crefType="Unqualified"/> class for images of type Complex. 
            </summary>
            <param name="value">
            The value of this pixel.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue.#ctor(NationalInstruments.Vision.ImageType)">
            <summary>
            </summary>
            <param name="imageType">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue.Equals(NationalInstruments.Vision.PixelValue)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A PixelValue instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue.op_Equality(NationalInstruments.Vision.PixelValue,NationalInstruments.Vision.PixelValue)">
            <summary>
            Returns whether the two colors are equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            Whether the two values are equal.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue.op_Inequality(NationalInstruments.Vision.PixelValue,NationalInstruments.Vision.PixelValue)">
            <summary>
            Returns whether the two colors are not equal.
            </summary>
            <param name="val1">
            The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            Whether the two values are not equal.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue.Grayscale">
            <summary>
            </summary>
            <value>
            </value>
            <remarks>
            This property can only be used with images of type U8, I16, U16, and Single.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue.Rgb32">
            <summary>
            </summary>
            <value>
            </value>
            <remarks>
            This property can only be used with images of type Rgb32.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue.RgbU64">
            <summary>
            </summary>
            <value>
            </value>
            <remarks>
            This property can only be used with images of type RgbU64.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue.Hsl32">
            <summary>
            </summary>
            <value>
            </value>
            <remarks>
            This property can only be used with images of type Hsl32.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue.Complex">
            <summary>
            </summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.PixelValue1D">
            <summary>
            Defines an array of pixel values in an image.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue1D.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue1D" crefType="Unqualified"/> class  for images of type U8.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue1D.#ctor(System.UInt16[])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue1D" crefType="Unqualified"/> class for images of type U16.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue1D.#ctor(System.Int16[])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue1D" crefType="Unqualified"/> class for images of type I16.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue1D.#ctor(System.Single[])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue1D" crefType="Unqualified"/> class for images of type Single.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue1D.#ctor(NationalInstruments.Vision.Rgb32Value[])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue1D" crefType="Unqualified"/> class for images of type Rgb32.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue1D.#ctor(NationalInstruments.Vision.RgbU64Value[])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue1D" crefType="Unqualified"/> class for images of type RgbU64.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue1D.#ctor(NationalInstruments.Vision.Hsl32Value[])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue1D" crefType="Unqualified"/> class for images of type Hsl32.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue1D.#ctor(NationalInstruments.Vision.Complex[])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue1D" crefType="Unqualified"/> class for images of type Complex.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue1D.Equals(NationalInstruments.Vision.PixelValue1D)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A PixelValue1D instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue1D.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue1D.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue1D.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue1D.U8">
            <summary>
            Gets the pixel values for images of type U8.
            </summary>
            <value>
            The pixel values for images of type U8.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue1D.I16">
            <summary>
            Gets the pixel values for images of type I16.
            </summary>
            <value>
            The pixel values for images of type I16.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue1D.U16">
            <summary>
            Gets the pixel values for images of type U16.
            </summary>
            <value>
            The pixel values for images of type U16.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue1D.Single">
            <summary>
            Gets the pixel values for images of type Single.
            </summary>
            <value>
            The pixel values for images of type Single.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue1D.Rgb32">
            <summary>
            Gets the pixel values for images of type Rgb32.
            </summary>
            <value>
            The pixel values for images of type Rgb32.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue1D.RgbU64">
            <summary>
            Gets the pixel values for images of type RgbU64.
            </summary>
            <value>
            The pixel values for images of type RgbU64.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue1D.Hsl32">
            <summary>
            Gets the pixel values for images of type Hsl32.</summary>
            <value>
            The pixel values for images of type Hsl32.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue1D.Complex">
            <summary>
            Gets the pixel values for images of type Complex.
            </summary>
            <value>
            The pixel values for images of type Complex.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.PixelValue2D">
            <summary>
            Defines a 2D array of pixel values in an image.</summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue2D.#ctor(System.Byte[0:,0:])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue2D" crefType="Unqualified"/> class for images of type U8.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue2D.#ctor(System.UInt16[0:,0:])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue2D" crefType="Unqualified"/> class for images of type U16.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue2D.#ctor(System.Int16[0:,0:])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue2D" crefType="Unqualified"/> class for images of type I16.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue2D.#ctor(System.Single[0:,0:])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue2D" crefType="Unqualified"/> class for images of type Single.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue2D.#ctor(NationalInstruments.Vision.Rgb32Value[0:,0:])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue2D" crefType="Unqualified"/> class for images of type Rgb32.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue2D.#ctor(NationalInstruments.Vision.RgbU64Value[0:,0:])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue2D" crefType="Unqualified"/> class for images of type RgbU64.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue2D.#ctor(NationalInstruments.Vision.Hsl32Value[0:,0:])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue2D" crefType="Unqualified"/> class for images of type Hsl32.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue2D.#ctor(NationalInstruments.Vision.Complex[0:,0:])">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.PixelValue2D" crefType="Unqualified"/> class for images of type Complex.
            </summary>
            <param name="value">
            The value of these pixels.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue2D.Equals(NationalInstruments.Vision.PixelValue2D)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue2D.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue2D.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PixelValue2D.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue2D.U8">
            <summary>
            Gets the pixel values for images of type U8.
            </summary>
            <value>
            The pixel values for images of type U8.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue2D.I16">
            <summary>
            Gets the pixel values for images of type I16.
            </summary>
            <value>
            The pixel values for images of type I16.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue2D.U16">
            <summary>
            Gets the pixel values for images of type U16.
            </summary>
            <value>
            The pixel values for images of type U16.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue2D.Single">
            <summary>
            Gets the pixel values for images of type Single.
            </summary>
            <value>
            The pixel values for images of type Single.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue2D.Rgb32">
            <summary>
            Gets the pixel values for images of type Rgb32.
            </summary>
            <value>
            The pixel values for images of type Rgb32.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue2D.RgbU64">
            <summary>
            Gets the pixel values for images of type RgbU64.
            </summary>
            <value>
            The pixel values for images of type RgbU64.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue2D.Hsl32">
            <summary>
            Gets the pixel values for images of type Hsl32.</summary>
            <value>
            The pixel values for images of type Hsl32.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.PixelValue2D.Complex">
            <summary>
            Gets the pixel values for images of type Complex.
            </summary>
            <value>
            The pixel values for images of type Complex.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.ImageViewer">
            <summary>
            Represents a National Instruments Windows Forms image viewer control to display images.
            </summary>
            <remarks>
            At design time, you can drag and drop the image viewer control from the Toolbox onto your form.
            </remarks>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ImageViewer.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageViewer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.WindowsForms.ImageViewer" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageViewer.ShouldSerializePalette">
            <summary>
            Returns whether <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Palette" crefType="Unqualified"/> is different from its default value.
            </summary>
            <returns>
            	<see langword="true"/> if <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Palette" crefType="Unqualified"/>   is different from its default value; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageViewer.ResetPalette">
            <summary>
            Resets <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Palette" crefType="Unqualified"/> to its default value.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageViewer.ShouldSerializeImageInfoTextColor">
            <summary>
            Returns whether the <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageInfoTextColor" crefType="Unqualified"/>  is different from its default value.
            </summary>
            <returns>
            	<see langword="true"/> if <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageInfoTextColor" crefType="Unqualified"/>  is different from its default value; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageViewer.ResetImageInfoTextColor">
            <summary>
            Resets <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageInfoTextColor" crefType="Unqualified"/> to its default value.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageViewer.Attach(NationalInstruments.Vision.VisionImage)">
            <summary>
            Attaches an image object to the viewer.
            </summary>
            <param name="image">
            The image to attach to the viewer.
            </param>
            <remarks>
            After calling this method, you can manipulate the image with the <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Image" crefType="Unqualified"/> property.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageViewer.RefreshImage">
            <summary>
            Redraws the <see cref="T:NationalInstruments.Vision.WindowsForms.ImageViewer" crefType="Unqualified"/> control immediately.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageViewer.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ActiveToolChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ActiveTool" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageMouseDown">
            <summary>
            Occurs when a mouse button is pressed over the viewer.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageMouseUp">
            <summary>
            Occurs when a mouse button is released over the viewer.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageMouseMove">
            <summary>
            Occurs when the mouse is moved over the viewer.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImagePanned">
            <summary>
            Occurs when the image is panned with the pan viewer tool.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageZoomed">
            <summary>
            Occurs when the image is zoomed with the zoom in or zoom out viewer tool.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.RoiChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Roi" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.DisplayMappingChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.DisplayMapping" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ZoomToFitChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ZoomToFit" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ShowImageInfoChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ShowImageInfo" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.PaletteChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Palette" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ContextSensitiveToolsChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ContextSensitiveTools" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.CenterChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Center" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.OriginChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Origin" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.BackgroundOptionsChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.BackgroundOptions" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImmediateUpdatesChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ImmediateUpdates" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ShowToolbarChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ShowToolbar" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ShowScrollbarsChanged">
            <summary>
            Occurs when  <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ShowScrollbars" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ToolsShownChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ToolsShown" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.NonTearingDisplayChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.NonTearingDisplay" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.AutoDeleteChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.AutoDelete" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageInfoTextColorChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageInfoTextColor" crefType="Unqualified"/> changes.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageChanged">
            <summary>
            Occurs when <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Image" crefType="Unqualified"/> changes.
            </summary>
            <remarks>
            This event occurs when either the data in the <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Image" crefType="Unqualified"/> changes, 
            or a new <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Image" crefType="Unqualified"/> attached with the <see cref="M:NationalInstruments.Vision.WindowsForms.ImageViewer.Attach(NationalInstruments.Vision.VisionImage)" crefType="Unqualified"/> method.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Roi">
            <summary>
            Gets the collection of region objects that specify regions on the viewer.
            </summary>
            <value>
            The collection of region objects that specify regions on the viewer.
            </value>
            <remarks>
            If you specify a region through the image viewer control, the region is automatically added to this collection.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.BackgroundOptions">
            <summary>
            Gets the background style and color information for the viewer.
            </summary>
            <value>
            The background style and color information for the <see cref="T:NationalInstruments.Vision.WindowsForms.ImageViewer" crefType="Unqualified"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.DisplayMapping">
            <summary>
            Gets the mapping technique used when displaying a 16-bit grayscale image. 
            </summary>
            <value>
            The mapping technique used when displaying a 16-bit grayscale image. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ZoomInfo">
            <summary>
            Gets the zoom factor.
            </summary>
            <value>
            The zoom factor.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Image">
            <summary>
            Gets the image object that the viewer displays.
            </summary>
            <value>
            The image object that the viewer displays.
            </value>
            <remarks>
            When you create an <see cref="T:NationalInstruments.Vision.WindowsForms.ImageViewer" crefType="Unqualified"/>, the <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Image" crefType="Unqualified"/> property contains a new VisionImage. You can manipulate this image like any other, or you can display a new image by calling <see cref="M:NationalInstruments.Vision.WindowsForms.ImageViewer.Attach(NationalInstruments.Vision.VisionImage)" crefType="Unqualified"/>. 
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ShowScrollbars">
            <summary>
            Gets or sets whether the viewer displays scrollbars.
            </summary>
            <value>
            	<see langword="true"/> if the viewer displays scrollbars; otherwise, <see langword="false"/>. The default value is <see langword="false"/>. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ShowImageInfo">
            <summary>
            Gets or sets whether the viewer displays image information on the status bar.
            </summary>
            <value>
            	<see langword="true"/> if the viewer displays image information on the status bar; otherwise, <see langword="false"/>. The default value is <see langword="false"/>. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ShowToolbar">
            <summary>
            Gets or sets whether the viewer displays a toolbar.
            </summary>
            <value>
            	<see langword="true"/> if the viewer displays a toolbar; otherwise, <see langword="false"/>. The default value is <see langword="false"/>. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ActiveTool">
            <summary>
            Gets or sets the currently selected tool.
            </summary>
            <value>
            The currently selected tool.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ToolsShown">
            <summary>
            Gets or sets which tools are shown on the toolbar.
            </summary>
            <value>
            	<see cref="T:NationalInstruments.Vision.WindowsForms.ViewerTools" crefType="Unqualified"/> information on the status bar. The default value is <see cref="F:NationalInstruments.Vision.WindowsForms.ViewerTools.All" crefType="Unqualified"/>.
            </value>
            <remarks>
            This property is only valid if <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ShowToolbar" crefType="Unqualified"/> is set to <see langword="true"/>.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.NonTearingDisplay">
            <summary>
            Gets or sets whether the display should be in nontearing mode.
            </summary>
            <value>
            	<see langword="true"/> if the display is in nontearing mode; otherwise, <see langword="false"/>. The default value is <see langword="false"/>. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ZoomToFit">
            <summary>
            Gets or sets whether the display should automatically resize the image to fit in the viewer.
            </summary>
            <value>
            	<see langword="true"/> if the display automatically resizes the image to fit in the viewer; otherwise, <see langword="false"/>. The default value is <see langword="false"/>.  
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ImmediateUpdates">
            <summary>
            Gets or sets whether the viewer draws new data as soon as it is available, or if the form refreshes the viewer when it draws other controls.
            </summary>
            <value>
            	<see langword="true"/> if the viewer draws new data as soon as it is available; otherwise, <see langword="false"/>. The default value is <see langword="false"/>. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Palette">
            <summary>
            Gets or sets the palette that the viewer uses to display the image.
            </summary>
            <value>
            The palette that the viewer uses to display the image.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Origin">
            <summary>
            Gets the x-coordinate and y-coordinate of the image in the upper left corner of the viewer when the image is larger than the viewer.
            </summary>
            <value>
            The x-coordinate and y-coordinate of the image in the upper left corner of the viewer when the image is larger than the viewer.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.Center">
            <summary>
            Gets the x-coordinate and y-coordinate of the image in the center of the viewer when the image is larger than the viewer.
            </summary>
            <value>
            The x-coordinate and y-coordinate of the image. 
            </value>
            <remarks>
            If the width of the image is less than the width of the viewer, the viewer ignores this property and centers the image horizontally.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.AutoDelete">
            <summary>
            Gets or sets whether existing regions are removed from the collection when you add a new region from the image viewer.
            </summary>
            <value>
            	<see langword="true"/> if existing regions are removed from the collection when you add a new region from the <see cref="T:NationalInstruments.Vision.WindowsForms.ImageViewer" crefType="Unqualified"/>; otherwise, <see langword="false"/>. The default value is <see langword="true"/>. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ContextSensitiveTools">
            <summary>
            Gets or sets whether context sensitive tool selection is enabled or disabled.
            </summary>
            <value>
            	<see langword="true"/> if the context sensitive tool selection is enabled; otherwise, <see langword="false"/>. The default value is <see langword="true"/>. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageInfoTextColor">
            <summary>
            Gets or sets the color of the image information text, if <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ShowImageInfo" crefType="Unqualified"/> is set to <see langword="true"/>.
            </summary>
            <value>
            the color of the image information text, if <see cref="P:NationalInstruments.Vision.WindowsForms.ImageViewer.ShowImageInfo" crefType="Unqualified"/> is set to <see langword="true"/>.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.InfoTypes">
            <summary>
            Specifies options for interacting with and removing extra vision information.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.InfoTypes.None">
            <summary>
            No vision information.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.InfoTypes.Calibration">
            <summary>
            Calibration information
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.InfoTypes.Overlay">
            <summary>
            Overlay information.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.InfoTypes.GrayTemplate">
            <summary>
            Grayscale template information.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.InfoTypes.ColorTemplate">
            <summary>
            Color template information.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.InfoTypes.GeometricTemplate">
            <summary>
            Geometric template information.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.InfoTypes.CustomData">
            <summary>
            Custom data information.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.InfoTypes.GoldenTemplate">
            <summary>
            Golden template information.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.ComplexPlane">
            <summary>
            Specifies a complex plane.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ComplexPlane.Real">
            <summary>
            Real plane.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ComplexPlane.Imaginary">
            <summary>
            Imaginary plane.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ComplexPlane.Magnitude">
            <summary>
            Magnitude plane.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ComplexPlane.Phase">
            <summary>
            Phase plane.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.WaveletTransformMode">
            <summary>
            Specifies the wavelet transform modes to use when writing the file.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WaveletTransformMode.Integer">
            <summary>
            Uses a 5-3 reversible integer transform. This transform is generally faster than the floating-point transform, but produces less accurate results.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WaveletTransformMode.FloatingPoint">
            <summary>
            Performs a 9-7 irreversible floating-point transform. This transform is generally more accurate than the integer transform, but is slower.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.PhotometricMode">
            <summary>
            Specifies the photometric interpretation options for use with the <see cref="P:NationalInstruments.Vision.TiffOptions.PhotometricMode" crefType="Unqualified"/> property.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.PhotometricMode.WhiteIsZero">
            <summary>
            Pixels with a 0 value are considered white.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.PhotometricMode.BlackIsZero">
            <summary>
            Pixels with a 0 value are considered black.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.TiffCompressionType">
            <summary>
            Specifies the compression type for TIFF files.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.TiffCompressionType.None">
            <summary>
            Does not apply compression when <see cref="M:NationalInstruments.Vision.VisionImage.WriteTiffFile(System.String)" crefType="Unqualified"/> writes the TIFF file.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.TiffCompressionType.Jpeg">
            <summary>
            Applies JPEG compression when <see cref="M:NationalInstruments.Vision.VisionImage.WriteTiffFile(System.String)" crefType="Unqualified"/> writes the TIFF file. JPEG compression is not a valid value for signed 16-bit or unsigned 64-bit RGB images.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.TiffCompressionType.RunLength">
            <summary>
            Uses Run Length encoding when <see cref="M:NationalInstruments.Vision.VisionImage.WriteTiffFile(System.String)" crefType="Unqualified"/> writes the TIFF file.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.TiffCompressionType.Zip">
            <summary>
            Applies Zip compression when <see cref="M:NationalInstruments.Vision.VisionImage.WriteTiffFile(System.String)" crefType="Unqualified"/>  writes the TIFF file.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.FlattenType">
            <summary>
            Indicates what parts of the image to flatten.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.FlattenType.Image">
            <summary>
            Flattens only the image data.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.FlattenType.ImageAndVisionInfo">
            <summary>
            Flattens the image data and any Vision information associated with the image.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.CompressionType">
            <summary>
            Specifies the type of compression to use.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CompressionType.None">
            <summary>
            No compression.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CompressionType.Jpeg">
            <summary>
            JPEG compression. 
            This compression may cause data degradation.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CompressionType.PackedBinary">
            <summary>
            Lossless binary packing compression. This setting is ideal for preserving data integrity when flattening binary images. Do not use this setting for nonbinary images.</summary>
        </member>
        <member name="T:NationalInstruments.Vision.BorderMethod">
            <summary>
            Specifies operations that you can apply to the border of the image.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.BorderMethod.Mirror">
            <summary>
            Symmetrically copies pixel values from the image into the border.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.BorderMethod.Copy">
            <summary>
            Copies the value of the pixel closest to the edge of the image into the border.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.BorderMethod.Clear">
            <summary>
            Sets all pixels in the border to 0.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.DrawingMode">
            <summary>
            Specifies how to draw a contour.</summary>
        </member>
        <member name="F:NationalInstruments.Vision.DrawingMode.DrawValue">
            <summary>
            Draws the contour of the shape using the color specified.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.DrawingMode.DrawInvert">
            <summary>
            Draws the contour of the shape using the inverse of the pixel values.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.DrawingMode.PaintValue">
            <summary>
            Draws the contour and interior of the shape using the color specified.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.DrawingMode.PaintInvert">
            <summary>
            Draws the contour and interior of the shape using the inverse of the pixel values.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.DrawingMode.HighlightValue">
            <summary>
            Fills the contour by highlighting the enclosed pixels with the color of the object.  The highlighting allows features of an image to persist inside a filled object.  This value is only valid when passed to <see cref="M:NationalInstruments.Vision.Overlay.AddRectangle(NationalInstruments.Vision.RectangleContour)" crefType="Unqualified"/>.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.GroupBehavior">
            <summary>
            Specifies the behavior for an overlay group.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.GroupBehavior.Clear">
            <summary>
            Clears the current overlay group when an image is transformed.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.GroupBehavior.Keep">
            <summary>
            Keeps the current overlay group in place when an image is transformed.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.GroupBehavior.Transform">
            <summary>
            Transforms the current overlay group with the image when an image is transformed.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.PointSymbolType">
            <summary>
            Specifies the symbol to represent a point in an overlay.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.PointSymbolType.Pixel">
            <summary>
            A single pixel represents a point in the overlay.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.PointSymbolType.Cross">
            <summary>
            A cross represents a point in the overlay.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.PointSymbolType.UserDefined">
            <summary>
            The pattern supplied by the user with <see cref="M:NationalInstruments.Vision.PointSymbol.SetUserDefined(System.Boolean[0:,0:])" crefType="Unqualified"/> represents a point in the overlay.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.HorizontalTextAlignment">
            <summary>
            Specifies the horizontal alignment of text.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.HorizontalTextAlignment.Left">
            <summary>
            Left aligns the text at the reference point.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.HorizontalTextAlignment.Center">
            <summary>
            Centers the text around the reference point.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.HorizontalTextAlignment.Right">
            <summary>
            Right aligns the text at the reference point.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.VerticalTextAlignment">
            <summary>
            Specifies where the origin of the text is in relation to the baseline of the text.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.VerticalTextAlignment.Bottom">
            <summary>
            Indicates that the origin point is below the baseline (i.e. the text is above the origin).
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.VerticalTextAlignment.Top">
            <summary>
            Indicates that the origin point is above the baseline (i.e. the text is below the origin).
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.VerticalTextAlignment.Baseline">
            <summary>
            Indicates that the origin point is on the baseline.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.CalibrationMethod">
            <summary>
            Specifies the type of distortion for which the calibration information is learned.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationMethod.Perspective">
            <summary>
            Perspective calibration. This is a valid input to the <format type="monospace">NationalInstruments.Vision.Analysis.Algorithms.LearnCalibrationGrid</format> class 
            and the <format type="monospace">NationalInstruments.Vision.Analysis.Algorithms.LearnCalibrationPoints</format> class. Use this method when lens distortion is negligible.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationMethod.Nonlinear">
            <summary>
            Nonlinear calibration. 
            This is a valid input to the <format type="monospace">NationalInstruments.Vision.Analysis.Algorithms.LearnCalibrationGrid</format> class 
            and the <format type="monospace">NationalInstruments.Vision.Analysis.Algorithms.LearnCalibrationPoints</format> class. Use this method if the image contains lens distortion.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationMethod.SimpleCalibration">
            <summary>
            Simple calibration. 
            The <format type="monospace">NationalInstruments.Vision.Analysis.VisionImage.GetCalibrationInfo</format> 
            returns this value for images calibrated by the <format type="monospace">NationalInstruments.Vision.Analysis.Algorithms.SetSimpleCalibration</format>  method.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationMethod.CorrectedImage">
            <summary>
            Corrected. <see cref="M:NationalInstruments.Vision.VisionImage.GetCalibrationInfo" crefType="Unqualified"/> returns this for a corrected image.
            A corrected image contains information about the calibration unit and scaling factor.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.CalibrationMethod2">
            <summary>
            Specifies the calibration method for which information is learned.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationMethod2.Perspective">
            <summary>
            Perspective calibration is used when lens distortion is negligible.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationMethod2.Microplane">
            <summary>
            Microplane calibration is used when the image contains lens distortion.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationMethod2.SimpleCalibration">
            <summary>
            Simple calibration. 
            The <format type="monospace">NationalInstruments.Vision.Algorithms.CalibrationGetCalibrationInfo</format> 
            returns this value for images calibrated using Simple calibration.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationMethod2.CorrectedImage">
            <summary>
            Corrected. A corrected image contains information about the calibration unit and scaling factor.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationMethod2.NoCalibration">
            <summary>
            Image with no calibration.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.ScalingMethod">
            <summary>
            Specifies the aspect scaling to be used in the corrected image.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ScalingMethod.ScaleToPreserveArea">
            <summary>
            The corrected image is scaled such that the features in the image have the same size as the input image.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ScalingMethod.ScaleToFit">
            <summary>
            The corrected image is scaled to be the same size as the input image.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.CalibrationCorrectionMode">
            <summary>
            Specifies the regions you can use when correcting an image.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationCorrectionMode.FullImage">
            <summary>
            The whole image is always corrected, regardless of the user-defined or calibration-defined regions.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationCorrectionMode.CalibrationRoi">
            <summary>
            The area defined by the CalibrationRegions is corrected. The CalibrationRegions is computed by the algorithm and corresponds to the area of the calibration template containing dots.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationCorrectionMode.UserRoi">
            <summary>
            The area defined by the user-defined regions is corrected. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationCorrectionMode.CalibrationAndUserRoi">
            <summary>
            The area defined by the intersection of the user-defined regions and calibration regions is corrected.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationCorrectionMode.CalibrationOrUserRoi">
            <summary>
            The area defined by the union of the user-defined regions and calibration regions is corrected.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.AxisOrientation">
            <summary>
            Specifies direction of the coordinate system.
            </summary>
            <remarks>
            As shown in the following illustration, direct axis orientation indicates that the y-axis direction is 90 degrees counter-clockwise from the x-axis direction. Indirect axis orientation indicates that the y-axis direction is 90 degrees clockwise from the x-axis direction. 
            <image src="axis.gif"/>
            </remarks>
        </member>
        <member name="F:NationalInstruments.Vision.AxisOrientation.Direct">
            <summary>
            Direct axis orientation. Indicates that the y-axis direction is 90 degrees counter-clockwise from the x-axis direction.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.AxisOrientation.Indirect">
            <summary>
            Indirect axis orientation. Indicates that the y-axis direction is 90 degrees clockwise from the x-axis direction.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.CalibrationUnit">
            <summary>
            Specifies the units in which the real world coordinates are expressed.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.Undefined">
            <summary>
            Undefined.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.Angstrom">
            <summary>
            Angstrom
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.Micrometer">
            <summary>
            Micrometer
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.Millimeter">
            <summary>
            Millimeter
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.Centimeter">
            <summary>
            Centimeter
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.Meter">
            <summary>
            Meter
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.Kilometer">
            <summary>
            Kilometer.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.Microinch">
            <summary>
            Microinch
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.Inch">
            <summary>
            Inch.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.Foot">
            <summary>
            Foot
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.NauticalMile">
            <summary>
            Nautical mile
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.GroundMile">
            <summary>
            Ground mile.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.CalibrationUnit.Step">
            <summary>
            Step
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.ColorMode">
            <summary>
            Specifies the color mode.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ColorMode.Rgb">
            <summary>
            RGB (Red, Green, Blue).
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ColorMode.Hsl">
            <summary>
            HSL (Hue, Saturation, Luminance).
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ColorMode.Hsv">
            <summary>
            HSV (Hue, Saturation, Value).
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ColorMode.Hsi">
            <summary>
            HSI (Hue, Saturation, Intensity)
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ColorMode.CieLab">
            <summary>
            CIE L*a*b*
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ColorMode.CieXyz">
            <summary>
            CIE XYZ
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.Jpeg2000AdvancedOptions">
            <summary>
            Provides advanced options to use when writing a JPEG2000 file.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Jpeg2000AdvancedOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Jpeg2000AdvancedOptions" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.Jpeg2000AdvancedOptions.#ctor(NationalInstruments.Vision.WaveletTransformMode)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Jpeg2000AdvancedOptions" crefType="Unqualified"/> class with the specified <see cref="T:NationalInstruments.Vision.WaveletTransformMode" crefType="Unqualified"/>.
            </summary>
            <param name="waveletTransformMode">
            The wavelet transform to use when writing the file.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Jpeg2000AdvancedOptions.Equals(NationalInstruments.Vision.Jpeg2000AdvancedOptions)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A Jpeg2000AdvancedOptions instance to compare to this instance.</param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Jpeg2000AdvancedOptions.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Jpeg2000AdvancedOptions.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Jpeg2000AdvancedOptions.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.Jpeg2000AdvancedOptions.QuantizationStepSize">
            <summary>
            Gets or sets the absolute base quantization step size for derived quantization mode.
            </summary>
            <value>
            The absolute base quantization step size for derived quantization mode.
            The default value is 0.
            </value>
            <remarks>
            This property has no effect when the <see cref="P:NationalInstruments.Vision.Jpeg2000AdvancedOptions.WaveletTransformMode" crefType="Unqualified"/> property is <see cref="F:NationalInstruments.Vision.WaveletTransformMode.Integer" crefType="Unqualified"/>.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.Jpeg2000AdvancedOptions.MaximumWaveletTransformLevel">
            <summary>
            Gets or sets the maximum allowed level of wavelet transform.
            </summary>
            <value>
            Values range from 0 to 255. The default value is 5.
            </value>
            <remarks>
            Increasing this value will result in a more accurate image, but will increase the time to write the image. 
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.Jpeg2000AdvancedOptions.UseMultipleComponentTransform">
            <summary>
            Gets or sets whether to use an additional transformation on RGB images.
            </summary>
            <value>
            The default value is <see langword="true"/>.
            </value>
            <remarks>
            Set this property to <see langword="true"/> to use an additional transform on RGB images. Set this property to <see langword="false"/> to not use an additional transform. This property has no effect when encoding grayscale images.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.Jpeg2000AdvancedOptions.WaveletTransformMode">
            <summary>
            Gets or sets the wavelet transform to use when writing the file.
            </summary>
            <value>
            The default value is <see cref="F:NationalInstruments.Vision.WaveletTransformMode.Integer" crefType="Unqualified"/>.
            </value>
            <remarks>
            	<see cref="F:NationalInstruments.Vision.WaveletTransformMode.FloatingPoint" crefType="Unqualified"/> performs a 9-7 irreversible floating-point transform. This transform is generally more accurate than the integer transform, but is slower.
            <see cref="F:NationalInstruments.Vision.WaveletTransformMode.Integer" crefType="Unqualified"/> uses a 5-3 reversible integer transform. This transform is generally faster than the floating-point transform, but produces less accurate results.
            </remarks>
        </member>
        <member name="T:NationalInstruments.Vision.TiffOptions">
            <summary>
            Provides the options to use when writing a TIFF file.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.TiffOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.TiffOptions" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.TiffOptions.#ctor(NationalInstruments.Vision.TiffCompressionType)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.TiffOptions" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.TiffOptions.CompressionType" crefType="Unqualified"/>.
            </summary>
            <param name="compressionType">
            The type of compression to use on the TIFF.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.TiffOptions.Equals(NationalInstruments.Vision.TiffOptions)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance.
            </summary>
            <param name="other">
            A TiffOptions instance to compare to this instance.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.TiffOptions.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.TiffOptions.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.TiffOptions.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.TiffOptions.CompressionType">
            <summary>
            Gets or sets the type of compression to use on the TIFF.
            </summary>
            <value>
            The type of compression to use on the TIFF.
            The default value is None. </value>
        </member>
        <member name="P:NationalInstruments.Vision.TiffOptions.PhotometricMode">
            <summary>
            Gets or sets the photometric interpretation to use.
            </summary>
            <value>
            The photometric interpretation to use.
            The default value is <see cref="F:NationalInstruments.Vision.PhotometricMode.BlackIsZero" crefType="Unqualified"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.TiffOptions.RowsPerStrip">
            <summary>
            Gets or sets the number of rows to write per strip.
            </summary>
            <value>
            The number of rows to write per strip.
            The default value is 0.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.CalibrationInfo">
            <summary>
            Provides information describing the calibration of an image.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.CalibrationInfo" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationInfo.Equals(NationalInstruments.Vision.CalibrationInfo)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A CalibrationInfo instance to compare to this instance.</param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationInfo.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationInfo.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationInfo.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationInfo.Dispose">
            <summary>
            Releases the resources used by <see cref="T:NationalInstruments.Vision.CalibrationInfo" crefType="Unqualified"/>. 
            </summary>
        </member>
        <member name="P:NationalInstruments.Vision.CalibrationInfo.Quality">
            <summary>
            Gets or sets the quality score of the learning process. 
            </summary>
            <value>
            Values are between 0-1000. 
            </value>
            <remarks>
            A quality of 1000 means that the feature points were well-learned by the chosen algorithm. It does not necessarily reflect the absolute accuracy of the estimated calibration mapping.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.CalibrationInfo.CalibrationGridOptions">
            <summary>
            Gets or sets the scaling constants used to calibrate the image.
            </summary>
            <value>
            The scaling constants used to calibrate the image.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CalibrationInfo.LearnCalibrationOptions">
            <summary>
            Gets or sets the settings used to determine how the algorithm calibrated your imaging setup.
            </summary>
            <value>
            The settings used to determine how the algorithm calibrated your imaging setup.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CalibrationInfo.CalibrationRoi">
            <summary>
            Gets or sets the regions that correspond to the region of the image where the calibration information is accurate.
            </summary>
            <value>
            The regions that correspond to the region of the image where the calibration information is accurate.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CalibrationInfo.UserRoi">
            <summary>
            Gets or sets the regions you specified at the time of calibration.
            </summary>
            <value>
            The regions you specified at the time of calibration.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CalibrationInfo.ErrorMap">
            <summary>
            Gets or sets the 2D error map, if it was determined by <see cref="T:NationalInstruments.Vision.LearnCalibrationOptions" crefType="Unqualified"/>.
            </summary>
            <value>
            A 2D error map.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.TransformBehaviors">
            <summary>
            Defines the behavior of overlays when an image is transformed.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.TransformBehaviors.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.TransformBehaviors" crefType="Unqualified"/> class. 
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.TransformBehaviors.#ctor(NationalInstruments.Vision.GroupBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.TransformBehaviors" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.TransformBehaviors.Shift" crefType="Unqualified"/>. 
            </summary>
            <param name="shift">
            The behavior of an overlay group when a shift operation is applied to an image. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.TransformBehaviors.#ctor(NationalInstruments.Vision.GroupBehavior,NationalInstruments.Vision.GroupBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.TransformBehaviors" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.TransformBehaviors.Shift" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.TransformBehaviors.Scale" crefType="Unqualified"/>. 
            </summary>
            <param name="shift">
            The behavior of an overlay group when a shift operation is applied to an image. 
            </param>
            <param name="scale">
            The behavior of an overlay group when a scale operation is applied to an image. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.TransformBehaviors.#ctor(NationalInstruments.Vision.GroupBehavior,NationalInstruments.Vision.GroupBehavior,NationalInstruments.Vision.GroupBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.TransformBehaviors" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.TransformBehaviors.Shift" crefType="Unqualified"/>, <see cref="P:NationalInstruments.Vision.TransformBehaviors.Scale" crefType="Unqualified"/>, and <see cref="P:NationalInstruments.Vision.TransformBehaviors.Rotate" crefType="Unqualified"/>.  
            </summary>
            <param name="shift">
            The behavior of an overlay group when a shift operation is applied to an image. 
            </param>
            <param name="scale">
            The behavior of an overlay group when a scale operation is applied to an image. 
            </param>
            <param name="rotate">
            The behavior of an overlay group when a rotate operation is applied to an image. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.TransformBehaviors.#ctor(NationalInstruments.Vision.GroupBehavior,NationalInstruments.Vision.GroupBehavior,NationalInstruments.Vision.GroupBehavior,NationalInstruments.Vision.GroupBehavior)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.TransformBehaviors" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.TransformBehaviors.Shift" crefType="Unqualified"/>, <see cref="P:NationalInstruments.Vision.TransformBehaviors.Scale" crefType="Unqualified"/>, <see cref="P:NationalInstruments.Vision.TransformBehaviors.Rotate" crefType="Unqualified"/>, and <see cref="P:NationalInstruments.Vision.TransformBehaviors.Symmetry" crefType="Unqualified"/>. 
            </summary>
            <param name="shift">
            The behavior of an overlay group when a shift operation is applied to an image. 
            </param>
            <param name="scale">
            The behavior of an overlay group when a scale operation is applied to an image. 
            </param>
            <param name="rotate">
            The behavior of an overlay group when a rotate operation is applied to an image. 
            </param>
            <param name="symmetry">
            The behavior of an overlay group when a symmetry operation is applied to an image. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.TransformBehaviors.Equals(NationalInstruments.Vision.TransformBehaviors)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance.
            </summary>
            <param name="other">
            A TransformBehaviors instance to compare to this instance.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.TransformBehaviors.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.TransformBehaviors.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.TransformBehaviors.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.TransformBehaviors.Symmetry">
            <summary>
            Gets or sets the behavior of an overlay group when a symmetry operation is applied to an image. 
            </summary>
            <value>
            The behavior of an overlay group when a symmetry operation is applied to an image. 
            The default value is <see cref="F:NationalInstruments.Vision.GroupBehavior.Clear" crefType="Unqualified"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.TransformBehaviors.Rotate">
            <summary>
            Gets or sets the behavior of an overlay group when a rotate operation is applied to an image. 
            </summary>
            <value>
            The behavior of an overlay group when a rotate operation is applied to an image. 
            The default value is <see cref="F:NationalInstruments.Vision.GroupBehavior.Clear" crefType="Unqualified"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.TransformBehaviors.Scale">
            <summary>
            Gets or sets the behavior of an overlay group when a scale operation is applied to an image. 
            </summary>
            <value>
            The behavior of an overlay group when a scale operation is applied to an image. 
            The default value is <see cref="F:NationalInstruments.Vision.GroupBehavior.Clear" crefType="Unqualified"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.TransformBehaviors.Shift">
            <summary>
            Gets or sets the behavior of an overlay group when a shift operation is applied to an image. 
            </summary>
            <value>
            The behavior of an overlay group when a shift operation is applied to an image. 
            The default value is <see cref="F:NationalInstruments.Vision.GroupBehavior.Clear" crefType="Unqualified"/>.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.Arc">
            <summary>
            Defines the angles and oval of an arc.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Arc.#ctor(NationalInstruments.Vision.PointContour,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Arc" crefType="Unqualified"/> class with the specified angles, radius, and center..
            </summary>
            <param name="center">
            Oval on which this arc lies.
            </param>
            <param name="radius">
            The radius of the arc.</param>
            <param name="startAngle">
            Start angle, in degrees, of the arc.
            </param>
            <param name="endAngle">
            End angle, in degrees, of the arc.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Arc.Equals(NationalInstruments.Vision.Arc)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An <see cref="T:NationalInstruments.Vision.Arc" crefType="Unqualified"/> instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Arc.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Arc.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Arc.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.Arc.EndAngle">
            <summary>
            Gets or sets the end angle, in degrees, of the arc.
            </summary>
            <value>
            The end angle of the arc.
            The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Arc.StartAngle">
            <summary>
            Gets or sets the start angle, in degrees, of the arc.
            </summary>
            <value>
            The start angle of the arc.
            The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Arc.Radius">
            <summary>
            Gets or sets the radius of the arc.
            </summary>
            <value>
            The radius of the arc.
            The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Arc.Center">
            <summary>
            Gets or sets the center of this arc.
            </summary>
            <value>
            The center of this arc.
            The default value is (0,0).
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.OverlayTextOptions">
            <summary>
            Defines how a method overlays text.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.OverlayTextOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.OverlayTextOptions" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.OverlayTextOptions.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.OverlayTextOptions" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.OverlayTextOptions.FontName" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.OverlayTextOptions.FontSize" crefType="Unqualified"/>.
            </summary>
            <param name="fontName">
            The name of the font to use.
            </param>
            <param name="fontSize">
            The size of the font. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.OverlayTextOptions.#ctor(System.String,System.Int32,NationalInstruments.Vision.HorizontalTextAlignment)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.OverlayTextOptions" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.OverlayTextOptions.FontName" crefType="Unqualified"/>, <see cref="P:NationalInstruments.Vision.OverlayTextOptions.FontSize" crefType="Unqualified"/>, and alignment.
            </summary>
            <param name="fontName">
            The name of the font to use.
            </param>
            <param name="fontSize">
            The size of the font. 
            </param>
            <param name="alignment">
            The horizontal alignment of the font.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.OverlayTextOptions.Equals(NationalInstruments.Vision.OverlayTextOptions)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An OverlayTextOptions instance to compare to this instance.</param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.OverlayTextOptions.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.OverlayTextOptions.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.OverlayTextOptions.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.OverlayTextOptions.Angle">
            <summary>
            Gets or sets the counterclockwise angle of the text relative to the x-axis. 
            </summary>
            <value>
            The counterclockwise angle, in degrees, of the text relative to the x-axis. 
            The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.OverlayTextOptions.BackgroundColor">
            <summary>
            Gets or sets the color for the text background pixels. 
            </summary>
            <value>
            The color for the text background pixels.
            The default value is R=0, G=0, and B=0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.OverlayTextOptions.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the text. 
            </summary>
            <value>
            The horizontal alignment of the text. 
            The default value is Left.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.OverlayTextOptions.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment for the text. 
            </summary>
            <value>
            The vertical alignment for the text. 
            The default value is Bottom.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.OverlayTextOptions.TextDecoration">
            <summary>
            Gets or sets the style of the font.
            </summary>
            <value>
            The style of the font.
            The default value is no text decoration.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.OverlayTextOptions.FontSize">
            <summary>
            Gets or sets the size of the font. 
            </summary>
            <value>
            The size of the font. 
            The default value is 12 pt.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.OverlayTextOptions.FontName">
            <summary>
            Gets or sets the name of the font to use.
            </summary>
            <value>
            The name of the font to use.
            The default value is Arial.
            </value>
            <remarks>
            This method processes only the first 32 characters.
            </remarks>
        </member>
        <member name="T:NationalInstruments.Vision.PointSymbol">
            <summary>
            Provides the symbol to use when overlaying a point on an image.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.PointSymbol.#ctor">
            <summary>
            Initializes a new instance of the PointSymbol class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.PointSymbol.#ctor(NationalInstruments.Vision.PointSymbolType)">
            <summary>
            Initializes a new instance of the PointSymbol class.
            </summary>
            <param name="type">
            The type of symbol to use.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PointSymbol.GetUserDefined">
            <summary>
            Gets the user-defined array defining which pixels will be turned on.</summary>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PointSymbol.SetUserDefined(System.Boolean[0:,0:])">
            <summary>
            Sets the user-defined array defining which pixels will be turned on.
            </summary>
            <param name="userDefined">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.PointSymbol.Equals(NationalInstruments.Vision.PointSymbol)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A PointSymbol instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PointSymbol.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PointSymbol.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.PointSymbol.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.PointSymbol.Type">
            <summary>
            Gets or sets the type of symbol to use.
            </summary>
            <value>
            The default value is Cross.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.IRange">
            <summary>
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.IRange.Initialize(System.Double,System.Double)">
            <summary>
            Sets the minimum and maximum value of the range.
            </summary>
            <param name="minimum">
            The minimum value of the range.
            </param>
            <param name="maximum">
            The maximum value of the range.
            </param>
        </member>
        <member name="P:NationalInstruments.Vision.IRange.Minimum">
            <summary>
            Gets or sets the minimum value of the range.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.IRange.Maximum">
            <summary>
            Gets or sets the maximum value of the range.
            </summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.Range">
            <summary>
            Represents a range of values.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Range.Initialize(System.Double,System.Double)">
            <summary>
            Sets the upper and lower bound of the range.</summary>
            <param name="minimum">The lower bound of the range.
            </param>
            <param name="maximum">
             The upper bound of the range.</param>
        </member>
        <member name="M:NationalInstruments.Vision.Range.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Range" crefType="Unqualified"/> class. 
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.Range.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Range" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.Range.Minimum" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.Range.Maximum" crefType="Unqualified"/>. 
            </summary>
            <param name="minimum">
            The lower bound of the range.
            </param>
            <param name="maximum">
            The upper bound of the range.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Range.Equals(NationalInstruments.Vision.Range)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A Range instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Range.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Range.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Range.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.Range.Minimum">
            <summary>
            Gets or sets the lower bound of the range.
            </summary>
            <value>
            The lower bound of the range.
            The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Range.Maximum">
            <summary>
            Gets or sets the upper bound of the range.
            </summary>
            <value>
            The upper bound of the range.
            The default value is 0.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.ReadOnlyRange">
            <summary>
            Represents a range of values that cannot be modified.</summary>
            <remarks>
            </remarks>
        </member>
        <member name="F:NationalInstruments.Vision.ReadOnlyRange.ReadOnlyMemberExceptionMessage">
            <summary>
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ReadOnlyRange.ReadOnlyObjectExceptionMessage">
            <summary>
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.ReadOnlyRange.NationalInstruments#Vision#IRange#Initialize(System.Double,System.Double)">
            <summary>
            Sets the upper and lower bound of the range.
            </summary>
            <param name="minimum">
            The lower bound of the range.
            </param>
            <param name="maximum">
            The upper bound of the range.
            </param>
            <remarks>
            This property will throw a NotSupportedException if it is called.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.ReadOnlyRange.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.ReadOnlyRange.NationalInstruments#Vision#IRange#Minimum">
            <summary>
            Gets the lower bound of the range.
            </summary>
            <value>
            The lower bound of the range.
            </value>
            <remarks>
            This property will throw a NotSupportedException if the set method is called.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.ReadOnlyRange.Minimum">
            <summary>
            Gets the lower bound of the range.
            </summary>
            <value>
            The lower bound of the range.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.ReadOnlyRange.NationalInstruments#Vision#IRange#Maximum">
            <summary>
            Gets the upper bound of the range.
            </summary>
            <value>
            The upper bound of the range.
            </value>
            <remarks>
             This property will throw a NotSupportedException if the set method is called.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.ReadOnlyRange.Maximum">
            <summary>
            Gets the upper bound of the range.
            </summary>
            <value>
            The upper bound of the range.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.LearnCalibrationOptions">
            <summary>
            Provides properties used by <see cref="T:NationalInstruments.Vision.LearnCalibrationOptions" crefType="Unqualified"/> to learn the calibration template.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.LearnCalibrationOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.LearnCalibrationOptions" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.LearnCalibrationOptions.#ctor(NationalInstruments.Vision.CoordinateSystem)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.LearnCalibrationOptions" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.LearnCalibrationOptions.AxisInfo" crefType="Unqualified"/>.
            </summary>
            <param name="axisInfo">
            Reference coordinate system for the real-world coordinates.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.LearnCalibrationOptions.#ctor(NationalInstruments.Vision.CoordinateSystem,NationalInstruments.Vision.CalibrationMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.LearnCalibrationOptions" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.LearnCalibrationOptions.AxisInfo" crefType="Unqualified"/> and mode.
            </summary>
            <param name="axisInfo">
            Reference coordinate system for the real-world coordinates.
            </param>
            <param name="mode">
            Type of algorithm to calibrate the image.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.LearnCalibrationOptions.#ctor(NationalInstruments.Vision.CoordinateSystem,NationalInstruments.Vision.CalibrationMethod,NationalInstruments.Vision.ScalingMethod)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.LearnCalibrationOptions" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.LearnCalibrationOptions.AxisInfo" crefType="Unqualified"/>, mode, and <see cref="P:NationalInstruments.Vision.LearnCalibrationOptions.CorrectionScalingMethod" crefType="Unqualified"/>.
            </summary>
            <param name="axisInfo">
            Reference coordinate system for the real-world coordinates.
            </param>
            <param name="mode">
            Type of algorithm to calibrate the image.
            </param>
            <param name="correctionScalingMethod">
            The aspect scaling to be used in the corrected image.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.LearnCalibrationOptions.#ctor(NationalInstruments.Vision.CoordinateSystem,NationalInstruments.Vision.CalibrationMethod,NationalInstruments.Vision.ScalingMethod,NationalInstruments.Vision.CalibrationCorrectionMode)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.LearnCalibrationOptions" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.LearnCalibrationOptions.AxisInfo" crefType="Unqualified"/>, mode, <see cref="P:NationalInstruments.Vision.LearnCalibrationOptions.CorrectionScalingMethod" crefType="Unqualified"/>, and <see cref="P:NationalInstruments.Vision.LearnCalibrationOptions.CorrectionMode" crefType="Unqualified"/>.
            </summary>
            <param name="axisInfo">
            Reference coordinate system for the real-world coordinates.
            </param>
            <param name="mode">
            Type of algorithm to calibrate the image.
            </param>
            <param name="correctionScalingMethod">
            The aspect scaling to be used in the corrected image.
            </param>
            <param name="correctionMode">
            The regions to be used when correcting an image.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.LearnCalibrationOptions.Equals(NationalInstruments.Vision.LearnCalibrationOptions)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A LearnCalibrationOptions instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.LearnCalibrationOptions.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.LearnCalibrationOptions.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.LearnCalibrationOptions.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.LearnCalibrationOptions.LearnErrorMap">
            <summary>
            Gets or sets whether the control calculates and stores an error map during the learning process. 
            </summary>
            <value>
            The default value is <see langword="false"/>.
            </value>
            <remarks>
            The image error map reflects error bounds on the calibration transformation. 
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.LearnCalibrationOptions.LearnCorrectionTable">
            <summary>
            Gets or sets whether the correction table is determined and stored. 
            </summary>
            <value>
            The default value is <see langword="false"/>.
            </value>
            <remarks>
            The correction table accelerates the process of correcting an image. Use the correction table if you want to correct several images.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.LearnCalibrationOptions.CorrectionMode">
            <summary>
            Gets or sets the regions to be used when correcting an image.
            </summary>
            <value>
            The regions to be used when correcting an image.
            The default value is <see cref="F:NationalInstruments.Vision.CalibrationCorrectionMode.UserRoi" crefType="Unqualified"/>.</value>
        </member>
        <member name="P:NationalInstruments.Vision.LearnCalibrationOptions.AxisInfo">
            <summary>
            Gets or sets the reference coordinate system for the real-world coordinates.
            </summary>
            <value>
            The coordinate system includes an origin, angle, and axis orientation. The default origin value is (0,0), the default angle value is 0,
            and the default axis orientation value is <see cref="F:NationalInstruments.Vision.AxisOrientation.Indirect" crefType="Unqualified"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.LearnCalibrationOptions.CorrectionScalingMethod">
            <summary>
            Gets or sets the aspect scaling to be used in the corrected image.
            </summary>
            <value>
            The aspect scaling to be used in the corrected image.
            The default value is <see cref="F:NationalInstruments.Vision.ScalingMethod.ScaleToPreserveArea" crefType="Unqualified"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.LearnCalibrationOptions.CalibrationMethod">
            <summary>
            Gets or sets the type of algorithm you want to use to calibrate your imaging setup.
            </summary>
            <value>
            The type of algorithm used to calibrate imaging setup.
            The default value is <see cref="F:NationalInstruments.Vision.CalibrationMethod.Perspective" crefType="Unqualified"/>.</value>
        </member>
        <member name="T:NationalInstruments.Vision.CalibrationGridOptions">
            <summary>
            Provides information about the calibration grid image used by the <format type="monospace">NationalInstruments.Vision.Analysis.Algorithms.LearnCalibrationGrid</format> class.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationGridOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.CalibrationGridOptions" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationGridOptions.#ctor(NationalInstruments.Vision.GridDescriptor)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.CalibrationGridOptions" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.CalibrationGridOptions.GridDescriptor" crefType="Unqualified"/>.
            </summary>
            <param name="gridDescriptor">
            The scaling constants for an image.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationGridOptions.#ctor(NationalInstruments.Vision.GridDescriptor,NationalInstruments.Vision.Range)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.CalibrationGridOptions" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.CalibrationGridOptions.GridDescriptor" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.CalibrationGridOptions.ThresholdRange" crefType="Unqualified"/>.
            </summary>
            <param name="gridDescriptor">
            The scaling constants for an image.
            </param>
            <param name="thresholdRange">
            Threshold range used to detect the circles in the grid image. The minimum and maximum values must be between 0 and 255.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationGridOptions.Equals(NationalInstruments.Vision.CalibrationGridOptions)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A CalibrationGridOptions instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationGridOptions.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationGridOptions.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CalibrationGridOptions.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.CalibrationGridOptions.ThresholdRange">
            <summary>
            Gets or sets the threshold range used to detect the circles in the grid image. 
            </summary>
            <value>
            An ordered pair of the minimum and maximum value of the threshold range.
            The default minimum value is 0, and the default maximum value is 128.
            </value>
            <remarks>
            The minimum and maximum values must be between 0 and 255.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.CalibrationGridOptions.GridDescriptor">
            <summary>
            Gets or sets the scaling constants for an image.
            </summary>
            <value>
            The default value for XStep is 1, the default value for YStep is 1, and the default value of Unit is undefined.
            </value>
            <remarks>
            XStep is the distance in the x direction between two adjacent pixels in units specified by <see cref="T:NationalInstruments.Vision.CalibrationUnit" crefType="Unqualified"/>.
            YStep is the distance in the y direction between two adjacent pixels in units specified by <see cref="T:NationalInstruments.Vision.CalibrationUnit" crefType="Unqualified"/>.
            Unit is the unit of measure for the image.
            </remarks>
        </member>
        <member name="T:NationalInstruments.Vision.GridDescriptor">
            <summary>
            Provides information about a grid image that is used to learn the calibration.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.GridDescriptor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.GridDescriptor" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.GridDescriptor.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.GridDescriptor" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.GridDescriptor.XStep" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.GridDescriptor.YStep" crefType="Unqualified"/>.
            </summary>
            <param name="xStep">
            Real-world distance between circle centers in the x-direction.
            </param>
            <param name="yStep">
            Real-world distance between circle centers in the y-direction. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.GridDescriptor.#ctor(System.Double,System.Double,NationalInstruments.Vision.CalibrationUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.GridDescriptor" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.GridDescriptor.XStep" crefType="Unqualified"/>, <see cref="P:NationalInstruments.Vision.GridDescriptor.YStep" crefType="Unqualified"/>, and <see cref="P:NationalInstruments.Vision.GridDescriptor.Unit" crefType="Unqualified"/>.
            </summary>
            <param name="xStep">
            Real-world distance between circle centers in the x-direction.
            </param>
            <param name="yStep">
            Real-world distance between circle centers in the y-direction. 
            </param>
            <param name="unit">
            Units of <paramref name="xStep"/> and <paramref name="yStep"/>.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.GridDescriptor.Equals(NationalInstruments.Vision.GridDescriptor)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A GridDescriptor instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.GridDescriptor.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.GridDescriptor.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.GridDescriptor.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.GridDescriptor.Unit">
            <summary>
            Gets or sets the units of <see cref="P:NationalInstruments.Vision.GridDescriptor.XStep" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.GridDescriptor.YStep" crefType="Unqualified"/>.
            </summary>
            <value>
            The units of <see cref="P:NationalInstruments.Vision.GridDescriptor.XStep" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.GridDescriptor.YStep" crefType="Unqualified"/>.
            The default value is undefined.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.GridDescriptor.XStep">
            <summary>
            Real-world distance between circle centers in the x-direction.
            </summary>
            <value>
            Distance between circle centers in the x-direction.
            The default value is 1.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.GridDescriptor.YStep">
            <summary>
            Real-world distance between circle centers in the y-direction. 
            </summary>
            <value>
            Distance between circle centers in the y-direction. 
            The default value is 1.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.TextDecoration">
            <summary>
            Defines the text style.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.TextDecoration.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.TextDecoration" crefType="Unqualified"/> class. 
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.TextDecoration.Equals(NationalInstruments.Vision.TextDecoration)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance.</summary>
            <param name="other">
            A TextDecoration instance to compare to this instance.
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.TextDecoration.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.TextDecoration.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.TextDecoration.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.TextDecoration.Strikeout">
            <summary>
            Gets or sets the text style as strikeout.
            </summary>
            <value>
            The text style is strikeout.
            The default value is <see langword="false"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.TextDecoration.Underline">
            <summary>
            Gets or sets the text style as underline.
            </summary>
            <value>
            The text style is underline.
            The default value is <see langword="false"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.TextDecoration.Italic">
            <summary>
            Gets or sets the text style as italic.
            </summary>
            <value>
            The text style is italic.
            The default value is <see langword="false"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.TextDecoration.Bold">
            <summary>
            Gets or sets the text style as bold.
            </summary>
            <value>
            The text style is bold.
            The default value is <see langword="false"/>.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.CoordinateSystem">
            <summary>
            Represents a reference for any arbitrary coordinate system with respect to the image plane.
            </summary>
            <remarks>
            The reference of the coordinate system is specified as the position of the origin of the coordinate system, the orientation of its x-axis with respect to that of the image plane, and the direction of the axis.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.CoordinateSystem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.CoordinateSystem" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.CoordinateSystem.#ctor(NationalInstruments.Vision.PointContour)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.CoordinateSystem" crefType="Unqualified"/> class.
            </summary>
            <param name="origin">
            The origin of the coordinate system.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CoordinateSystem.#ctor(NationalInstruments.Vision.PointContour,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.CoordinateSystem" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.CoordinateSystem.Origin" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.CoordinateSystem.Angle" crefType="Unqualified"/>.
            </summary>
            <param name="origin">
            The origin of the coordinate system.
            </param>
            <param name="angle">
            The angle, in degrees, of the x-axis of the coordinate system relative to the x-axis of an image.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CoordinateSystem.#ctor(NationalInstruments.Vision.PointContour,System.Double,NationalInstruments.Vision.AxisOrientation)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.CoordinateSystem" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.CoordinateSystem.Origin" crefType="Unqualified"/>, <see cref="P:NationalInstruments.Vision.CoordinateSystem.Angle" crefType="Unqualified"/>, and <see cref="P:NationalInstruments.Vision.CoordinateSystem.AxisOrientation" crefType="Unqualified"/>.
            </summary>
            <param name="origin">
            The origin of the coordinate system.
            </param>
            <param name="angle">
            The angle, in degrees, of the x-axis of the coordinate system relative to the x-axis of an image.
            </param>
            <param name="axisOrientation">
            The direction of the coordinate system. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CoordinateSystem.Equals(NationalInstruments.Vision.CoordinateSystem)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A CoordinateSystem instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CoordinateSystem.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CoordinateSystem.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CoordinateSystem.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.CoordinateSystem.AxisOrientation">
            <summary>
            Gets or sets the direction of the coordinate system. 
            </summary>
            <value>
            	<see cref="P:NationalInstruments.Vision.CoordinateSystem.AxisOrientation" crefType="Unqualified"/> can be <see cref="F:NationalInstruments.Vision.AxisOrientation.Direct" crefType="Unqualified"/> or <see cref="F:NationalInstruments.Vision.AxisOrientation.Indirect" crefType="Unqualified"/>. The default value is <see cref="F:NationalInstruments.Vision.AxisOrientation.Indirect" crefType="Unqualified"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CoordinateSystem.Angle">
            <summary>
            Gets or sets the angle, in degrees, of the x-axis of the coordinate system relative to the x-axis of an image.
            </summary>
            <value>
            The angle, in degrees, of the x-axis of the coordinate system relative to the x-axis of an image.
            The default value is 0.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CoordinateSystem.Origin">
            <summary>
            The origin of the coordinate system.
            </summary>
            <value>
            The origin of the coordinate system.
            The default value is (0,0).
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.Hsv32Value">
            <summary>
            Defnes a color in the HSV (Hue, Saturation, and Value) color space.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Hsv32Value.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the Hsv32Value class.
            </summary>
            <param name="hue">
            </param>
            <param name="saturation">
            </param>
            <param name="value">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Hsv32Value.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the Hsv32Value class.
            </summary>
            <param name="hue">
            </param>
            <param name="saturation">
            </param>
            <param name="value">
            </param>
            <param name="alpha">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Hsv32Value.Equals(NationalInstruments.Vision.Hsv32Value)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsv32Value.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsv32Value.op_Equality(NationalInstruments.Vision.Hsv32Value,NationalInstruments.Vision.Hsv32Value)">
            <summary>
            Returns whether the two colors are equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            Whether the two values are equal.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsv32Value.op_Inequality(NationalInstruments.Vision.Hsv32Value,NationalInstruments.Vision.Hsv32Value)">
            <summary>
            Returns whether the two colors are not equal.
            </summary>
            <param name="val1">
            The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            Whether the two values are not equal.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsv32Value.GetHashCode">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsv32Value.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.Hsv32Value.Value">
            <summary>
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Hsv32Value.Saturation">
            <summary>
            Gets the color saturation.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Hsv32Value.Hue">
            <summary>
            Gets the color hue.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Hsv32Value.Alpha">
            <summary>
            Gets the alpha value of the color, which represents extra information about a color image, such as gamma correction. 
            </summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.Hsi32Value">
            <summary>
            Defines a color in the HSI (Hue, Saturation, and Intensity) color space.</summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Hsi32Value.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Hsi32Value" crefType="Unqualified"/> structure.
            </summary>
            <param name="hue">
            </param>
            <param name="saturation">
            </param>
            <param name="intensity">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Hsi32Value.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.Hsi32Value" crefType="Unqualified"/> structure.
            </summary>
            <param name="hue">
            </param>
            <param name="saturation">
            </param>
            <param name="intensity">
            </param>
            <param name="alpha">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Hsi32Value.Equals(NationalInstruments.Vision.Hsi32Value)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An Hsi32Value instance to compare to this instance.</param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsi32Value.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsi32Value.op_Equality(NationalInstruments.Vision.Hsi32Value,NationalInstruments.Vision.Hsi32Value)">
            <summary>
            Returns whether the two colors are equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.</param>
            <returns>
            Whether the two values are equal.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsi32Value.op_Inequality(NationalInstruments.Vision.Hsi32Value,NationalInstruments.Vision.Hsi32Value)">
            <summary>
            Returns whether the two colors are not equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            Whether the two values are not equal.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsi32Value.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Hsi32Value.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.Hsi32Value.Intensity">
            <summary>
            Gets the color intensity.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Hsi32Value.Saturation">
            <summary>
            Gets the color saturation. 
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Hsi32Value.Hue">
            <summary>
            Gets the color hue. 
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Hsi32Value.Alpha">
            <summary>
            The alpha value of the color, which represents extra information about a color image, such as gamma correction. 
            </summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.CieLabValue">
            <summary>
            Represents a color in the CIE L*a*b* color space.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.CieLabValue.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.CieLabValue" crefType="Unqualified"/> structure. 
            </summary>
            <param name="l">
            The color lightness.
            </param>
            <param name="a">
            The red/green information of the color.
            </param>
            <param name="b">
            The yellow/blue information of the color.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CieLabValue.#ctor(System.Double,System.Double,System.Double,System.Byte)">
            <summary>
            </summary>
            <param name="l">
            The color lightness.
            </param>
            <param name="a">
            The red/green information of the color.
            </param>
            <param name="b">
            The yellow/blue information of the color.
            </param>
            <param name="alpha">
            The alpha value of the color, which represents extra information about a color image, such as gamma correction. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CieLabValue.Equals(NationalInstruments.Vision.CieLabValue)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A CieLabValue instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CieLabValue.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CieLabValue.op_Equality(NationalInstruments.Vision.CieLabValue,NationalInstruments.Vision.CieLabValue)">
            <summary>
            Returns whether the two colors are equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            	<see langword="true"/> if the two values are equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CieLabValue.op_Inequality(NationalInstruments.Vision.CieLabValue,NationalInstruments.Vision.CieLabValue)">
            <summary>
            Returns whether the two colors are not equal.
            </summary>
            <param name="val1">
            The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            	<see langword="true"/> if the two values are not equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CieLabValue.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CieLabValue.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.CieLabValue.B">
            <summary>
            Gets the yellow/blue information of the color.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CieLabValue.A">
            <summary>
            Gets the red/green information of the color.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CieLabValue.L">
            <summary>
            Gets the color lightness.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CieLabValue.Alpha">
            <summary>
            Gets the alpha value of the color, which represents extra information about a color image, such as gamma correction. 
            </summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.CieXyzValue">
            <summary>
            Represents a color in the CIE XYZ color space.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.CieXyzValue.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.CieXyzValue" crefType="Unqualified"/> structure. 
            </summary>
            <param name="x">
            The X color information.
            </param>
            <param name="y">
            The color luminance.
            </param>
            <param name="z">
            The Z color information.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CieXyzValue.#ctor(System.Double,System.Double,System.Double,System.Byte)">
            <summary>
            </summary>
            <param name="x">
            The X color information.
            </param>
            <param name="y">
            The color luminance.
            </param>
            <param name="z">
            The Z color information.
            </param>
            <param name="alpha">
            The alpha value of the color, which represents extra information about a color image, such as gamma correction. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CieXyzValue.Equals(NationalInstruments.Vision.CieXyzValue)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A CieXyzValue instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CieXyzValue.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CieXyzValue.op_Equality(NationalInstruments.Vision.CieXyzValue,NationalInstruments.Vision.CieXyzValue)">
            <summary>
            Returns whether the two colors are equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            	<see langword="true"/> if the two values are equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CieXyzValue.op_Inequality(NationalInstruments.Vision.CieXyzValue,NationalInstruments.Vision.CieXyzValue)">
            <summary>
            Returns whether the two colors are not equal.
            </summary>
            <param name="val1">
            The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            	<see langword="true"/> if the two values are not equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CieXyzValue.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CieXyzValue.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.CieXyzValue.Z">
            <summary>
            Gets the Z color information.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CieXyzValue.Y">
            <summary>
            Gets the color luminance.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CieXyzValue.X">
            <summary>
            Gets the X color information.</summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CieXyzValue.Alpha">
            <summary>
            Gets the alpha value of the color, which represents extra information about a color image, such as gamma correction. 
            </summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.ColorValue">
            <summary>
            Represents a color value in one of several different formats.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.ColorValue.#ctor(NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.ColorValue" crefType="Unqualified"/> class.
            </summary>
            <param name="value">The value this ColorValue will contain.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.ColorValue.#ctor(NationalInstruments.Vision.Hsl32Value)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.ColorValue" crefType="Unqualified"/> class.
            </summary>
            <param name="value">The value this ColorValue will contain.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.ColorValue.#ctor(NationalInstruments.Vision.Hsv32Value)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.ColorValue" crefType="Unqualified"/> class.
            </summary>
            <param name="value">The value this ColorValue will contain.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.ColorValue.#ctor(NationalInstruments.Vision.Hsi32Value)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.ColorValue" crefType="Unqualified"/> class.
            </summary>
            <param name="value">The value this ColorValue will contain.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.ColorValue.#ctor(NationalInstruments.Vision.CieXyzValue)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.ColorValue" crefType="Unqualified"/> class.
            </summary>
            <param name="value">The value this ColorValue will contain.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.ColorValue.#ctor(NationalInstruments.Vision.CieLabValue)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.ColorValue" crefType="Unqualified"/> class.
            </summary>
            <param name="value">The value this ColorValue will contain.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.ColorValue.Equals(NationalInstruments.Vision.ColorValue)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A ColorValue instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.ColorValue.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.ColorValue.op_Equality(NationalInstruments.Vision.ColorValue,NationalInstruments.Vision.ColorValue)">
            <summary>
            Returns whether the two colors are equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            	<see langword="true"/> if the two values are equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.ColorValue.op_Inequality(NationalInstruments.Vision.ColorValue,NationalInstruments.Vision.ColorValue)">
            <summary>
            Returns whether the two colors are not equal.
            </summary>
            <param name="val1">
            The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            	<see langword="true"/> if the two values are not equal; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.ColorValue.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.ColorValue.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.ColorValue.Rgb32">
            <summary>
            Gets a color in the RGB color space.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.ColorValue.Hsl32">
            <summary>
            Gets a color in the HSL color space.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.ColorValue.Hsv32">
            <summary>
            Gets a color in the HSV color space.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.ColorValue.Hsi32">
            <summary>
            Gets a color in the HSI color space.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.ColorValue.CieXyz">
            <summary>
            Gets a color in the CIE XYZ color space.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.ColorValue.CieLab">
            <summary>
            Gets a color in the CIE L*a*b* color space.</summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.FileInformation">
            <summary>
            Provides information regarding the contents of the file that was passed to the <format type="monospace">NationalInstruments.Vision.Analysis.Algorithms.GetFileInformation</format> class. 
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.FileInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.FileInformation" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.FileInformation.Equals(NationalInstruments.Vision.FileInformation)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A FileInformation instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.FileInformation.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.FileInformation.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.FileInformation.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.FileInformation.CalibrationGrid">
            <summary>
            Gets or sets the calibration grid stored in the file.
            </summary>
            <value>
            The default value for XStep is 1, for YStep is 1, and unit is undefined. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.FileInformation.ImageType">
            <summary>
            Type of image that best fits the pixel size defined in the header of the file.
            </summary>
            <value>
            Type of image.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.FileInformation.Height">
            <summary>
            Vertical resolution, in pixels, of the image file.
            </summary>
            <value>
            Vertical resolution of the image file.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.FileInformation.Width">
            <summary>
            Horizontal resolution, in pixels, of the image file.
            </summary>
            <value>
            Horizontal resolution of the image file.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.ImagePreviewFileDialog">
            <summary>
            Represents a file selection dialog box that previews images and waits for the user to select an image file(s) or click <format type="bold">Cancel</format>.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.ImagePreviewFileDialog.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.ImagePreviewFileDialog" crefType="Unqualified"/> class. 
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.ImagePreviewFileDialog.ShowDialog">
            <summary>
            Runs the <see cref="T:NationalInstruments.Vision.ImagePreviewFileDialog" crefType="Unqualified"/> with a default owner.
            </summary>
            <returns>
            	<see cref="F:System.Windows.Forms.DialogResult.OK" crefType="PartiallyQualified"/> if the user clicks OK in the dialog box; otherwise, <see cref="F:System.Windows.Forms.DialogResult.Cancel" crefType="PartiallyQualified"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.ImagePreviewFileDialog.Equals(NationalInstruments.Vision.ImagePreviewFileDialog)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An ImagePreviewFileDialog instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.ImagePreviewFileDialog.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.ImagePreviewFileDialog.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.ImagePreviewFileDialog.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.ImagePreviewFileDialog.AllowChangeDirectory">
            <summary>
            Gets or sets whether the user can change the directory from within the dialog box.
            </summary>
            <value>
            The default value is <see langword="true"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.ImagePreviewFileDialog.DefaultExt">
            <summary>
            Gets or sets the files to display.
            </summary>
            <value>
            The files to display.
            </value>
            <remarks>
            For example, value of <format type="monospace">*.bmp </format>displays all files with the <format type="monospace">.bmp </format>extension.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.ImagePreviewFileDialog.Title">
            <summary>
            Gets or sets the title of the dialog box. 
            </summary>
            <value>
            The title of the dialog box. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.ImagePreviewFileDialog.Multiselect">
            <summary>
            Gets or sets whether the user can select multiple image files.
            </summary>
            <value>
            The default value is <see langword="false"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.ImagePreviewFileDialog.InitialDirectory">
            <summary>
            The directory that the dialog box opens to.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.ImagePreviewFileDialog.FilterIndex">
            <summary>
            The default filter for the dialog box.
            </summary>
            <value>
            The default value is 1.
            </value>
            <remarks>
            This property specifies the default filter when you use the <see cref="P:NationalInstruments.Vision.ImagePreviewFileDialog.Filter" crefType="Unqualified"/> property to specify filters for the dialog box.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.ImagePreviewFileDialog.Filter">
            <summary>
            Gets or sets the filters that display in the type listbox of a dialog box.
            </summary>
            <value>
            </value>
            <remarks>
            	<para>Use the pipe ( | ) symbol (ASCII 124) to separate the description and filter values. Do not include spaces before or after the pipe symbol, because these spaces will be displayed with the description and filter values.
            The following code shows an example of a filter that enables the user to select bitmap files or JPEG files.</para>
            	<code>
            Bitmaps (*.bmp)|*.bmp|JPEGs (*.jpg)|*.jpg</code>
            When you specify more than one filter for a dialog box, use the <see cref="P:NationalInstruments.Vision.ImagePreviewFileDialog.FilterIndex" crefType="Unqualified"/> property to determine which filter is displayed as the default.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.ImagePreviewFileDialog.FileNames">
            <summary>
            Gets the names of the image files chosen.
            </summary>
            <value>
            The names of the image files chosen.
            </value>
            <remarks>
             This property is only populated if the <see cref="P:NationalInstruments.Vision.ImagePreviewFileDialog.Multiselect" crefType="Unqualified"/> property is set to <see langword="true"/>.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.ImagePreviewFileDialog.FileName">
            <summary>
            Gets or sets the name of the image file.
            </summary>
            <value>
            The name of the image file.
            </value>
            <remarks>
             This property is only populated if the <see cref="P:NationalInstruments.Vision.ImagePreviewFileDialog.Multiselect" crefType="Unqualified"/> property is set to <see langword="false"/>.
            </remarks>
        </member>
        <member name="T:NationalInstruments.Vision.CommonAlgorithms">
            <summary>
            Defines commonly used algorithms to manipulate an image.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.CommonAlgorithms.Cast(NationalInstruments.Vision.VisionImage,NationalInstruments.Vision.VisionImage,NationalInstruments.Vision.ImageType)">
            <summary>
            Changes the type of an image with the specified source, destination, and type.
            </summary>
            <param name="source">
            The source image.
            </param>
            <param name="destination">
            The destination image. Set this parameter equal to source or <see langword="null"/> to perform the change directly on the source image. 
            </param>
            <param name="type">
            The new type for the image. <paramref name="type"/> is the new type for the <paramref name="destination"/> image if it is being used, otherwise it is the new type for <paramref name="source"/>. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CommonAlgorithms.Cast(NationalInstruments.Vision.VisionImage,NationalInstruments.Vision.VisionImage,NationalInstruments.Vision.ImageType,System.Collections.ObjectModel.Collection{System.Single})">
            <summary>
            Changes the type of an image with the specified source, destination, type, and lookup table.
            </summary>
            <param name="source">
            The source image.
            </param>
            <param name="destination">
            The destination image. Set this parameter equal to source or <see langword="null"/> to perform the change directly on the source image. 
            </param>
            <param name="type">
            The new type for the image. <paramref name="type"/> is the new type for the <paramref name="destination"/> image if it is being used, otherwise it is the new type for <paramref name="source"/>. 
            </param>
            <param name="lookupTable">
            An optional lookup table. If you do not want  to use a lookup table, this parameter may be <see keyword="" keywordType="mstudio"/>.  
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CommonAlgorithms.Cast(NationalInstruments.Vision.VisionImage,NationalInstruments.Vision.VisionImage,NationalInstruments.Vision.ImageType,System.Int32)">
            <summary>
            Changes the type of an image with the specified source, destination, type, and shifts.
            </summary>
            <param name="source">
            The source image.
            </param>
            <param name="destination">
            The destination image. Set this parameter equal to source or <see langword="null"/> to perform the change directly on the source image. 
            </param>
            <param name="type">
            The new type for the image. <paramref name="type"/> is the new type for the <paramref name="destination"/> image if it is being used, otherwise it is the new type for <paramref name="source"/>. 
            </param>
            <param name="numberOfShifts">
            The shift value for converting 16-bit images to 8-bit images. The method executes this conversion by shifting the 16-bit pixel values to the right by the specified number of shift operations, up to a maximum of 8 shift operations, and then truncating to get an 8-bit value. Enter a value of –1 to ignore the bit depth and shift 0. Enter a value of 0 to use the bit depth to cast the image.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CommonAlgorithms.Copy(NationalInstruments.Vision.VisionImage,NationalInstruments.Vision.VisionImage)">
            <summary>
            Copies the source image to the destination image, including the border size and calibration information. 
            </summary>
            <param name="source">
            The source image to copy.
            </param>
            <param name="destination">
            The resulting image.
            </param>
            <remarks>
            Use this method with all image types.
            <para>
            To copy an area of one image to an area of another image, use the Extract2 method with xSubsample and ySubsample set to 1.
            </para>
            	<para>
            The <paramref name="source"/> and <paramref name="destination"/> images must be the same type of image. The method copies the complete definition of the source image and its pixel data to the destination image. The method also modifies the border of the destination image so that it becomes the same size as the border of the source image.
            </para>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.CommonAlgorithms.GetFileInformation(System.String)">
            <summary>
            Returns information regarding the contents of an image file. You can retrieve information from the following image file formats only: AIPD, BMP, JPEG, JPEG2000, PNG, and TIFF.
            </summary>
            <param name="fileName">
            The name of the file from which the method gets information.
            </param>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.Internal.PictureBoxChildWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.Internal.PictureBoxChildWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.Internal.PictureBoxChildWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.ContoursChangedAction">
            <summary>
            Specifies how the ViewerRoi changed.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ContoursChangedAction.Add">
            <summary>
            Adds a contour to the image.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ContoursChangedAction.Remove">
            <summary>
            Removes a contour on the image.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ContoursChangedAction.Change">
            <summary>
            Changes a contour on the image.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ContoursChangedAction.Clear">
            <summary>
            Clears a contour on the image.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.ViewerTools">
            <summary>
            Specifies the available tools for creating a region of interest (ROI) in the viewer.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.None">
            <summary>
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.Selection">
            <summary>
            Selects an existing ROI in an image.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.Point">
            <summary>
            Draws a point on the image. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.Line">
            <summary>
            Draws a line on the image. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.Rectangle">
            <summary>
            Draws a rectangle on the image. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.Oval">
            <summary>
            Draws an oval on the image. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.Polygon">
            <summary>
            Draws a polygon on the image. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.ClosedFreehand">
            <summary>
            Draws closed freehand shapes on the image. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.Annulus">
            <summary>
            Draws annuluses on the image. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.ZoomIn">
            <summary>
            Zooms in on the image.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.ZoomOut">
            <summary>
            Zooms out on the image.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.Pan">
            <summary>
            Shifts the view of the image. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.Polyline">
            <summary>
            Draws a series of connected straight lines on the image.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.Freehand">
            <summary>
            Draws freehand lines on the image.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.RotatedRectangle">
            <summary>
            Draws rotated rectangles on the image. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.ViewerTools.All">
            <summary>
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.PaletteType">
            <summary>
            Specifies a predefined palette type.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.PaletteType.Gray">
            <summary>
            A gradual gray-level variation from black to white. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.PaletteType.Binary">
            <summary>
            Contains 16 cycles of 16 different colors. This periodic palette is appropriate for the display of binary and labeled images.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.PaletteType.Gradient">
            <summary>
            A gradation from red to white with a prominent range of light blue in the upper value range.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.PaletteType.Rainbow">
            <summary>
            A gradation from blue to red with a prominent range of greens in the middle value range.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.PaletteType.Temperature">
            <summary>
            A gradation of brown.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.PaletteType.UserDefined">
            <summary>
            A user-defined palette.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.BackgroundFillStyle">
            <summary>
            Specifies the fill style to use when filling the background of the image viewer.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.BackgroundFillStyle.Solid">
            <summary>
            Fill the image viewer with a solid color. 
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.BackgroundFillStyle.Hatch">
            <summary>
            Fill the image viewer with a pattern defined by <see cref="P:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.HatchStyle" crefType="Unqualified"/>.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.BackgroundFillStyle.Default">
            <summary>
            Fill the image viewer with the NI Vision default pattern. 
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.BackgroundHatchStyle">
            <summary>
            Specifies the hatch styles to use when filling the background of the image viewer.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.BackgroundHatchStyle.Horizontal">
            <summary>
            The background of the display window is horizontal bars.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.BackgroundHatchStyle.Vertical">
            <summary>
            The background of the display window is vertical bars.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.BackgroundHatchStyle.ForwardDiagonal">
            <summary>
            The background of the display window is diagonal bars, starting in the lower-left corner and ending in the upper-right corner.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.BackgroundHatchStyle.BackwardDiagonal">
            <summary>
            The background of the display window is diagonal bars, starting in the upper-left corner and ending in the lower-right corner.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.BackgroundHatchStyle.Cross">
            <summary>
            The background of the display window is intersecting horizontal and vertical bars.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.BackgroundHatchStyle.CrossHatch">
            <summary>
            The background of the display window is intersecting forward and backward diagonal bars.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy">
            <summary>
            Specifies the policy used to perform the display mapping.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapFullDynamicRange">
            <summary>
            (Obsolete) When image bit depth is 0, maps the full dynamic range to 8 bits.
            </summary>
            <remarks>
            This value has been deprecated.
            Use MapDefault instead to preserve this existing behavior. 
            This method only maps the image values when the image bit depth is 0. Otherwise, the 8 most significant bits of the image are displayed. 
            Use <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapFullDynamicRangeAlways" crefType="Unqualified"/> instead to have the mapping applied regardless of the image bit depth. 
            Use <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.UseMostSignificantBits" crefType="Unqualified"/> instead to display the 8 most significant bits regardless of the image bit depth.
            </remarks>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.Downshift">
            <summary>
            (Obsolete) When image bit depth is 0, applies a given number of right shifts to the 16-bit pixels.
            </summary>
            <remarks>
            This value has been deprecated. 
            This method only maps the image values when the image bit depth is 0. Otherwise, the 8 most significant bits of the image are displayed. 
            Use <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.DownshiftAlways" crefType="Unqualified"/> instead to have the mapping applied regardless of the image bit depth. 
            Use <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.UseMostSignificantBits" crefType="Unqualified"/> instead to display the 8 most significant bits regardless of the image bit depth.
            </remarks>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapGivenRange">
            <summary>
            (Obsolete) When image bit depth is 0, maps the pixel values in a specified range to an 8-bit scale.
            </summary>
            <remarks>
            This value has been deprecated. 
            This method only maps the image values when the image bit depth is 0. Otherwise, the 8 most significant bits of the image are displayed. 
            Use <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapGivenRangeAlways" crefType="Unqualified"/> instead to have the mapping applied regardless of the image bit depth. 
            Use <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.UseMostSignificantBits" crefType="Unqualified"/> instead to display the 8 most significant bits regardless of the image bit depth.
            </remarks>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.Map90PercentDynamicRange">
            <summary>
            (Obsolete) When image bit depth is 0, maps the range corresponding to the center 90 percent of the cumulative histogram to 8 bits.
            </summary>
            <remarks>
            This value has been deprecated. 
            This method only maps the image values when the image bit depth is 0. Otherwise, the 8 most significant bits of the image are displayed. 
            Use <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.Map90PercentDynamicRangeAlways" crefType="Unqualified"/> instead to have the mapping applied regardless of the image bit depth. 
            Use <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.UseMostSignificantBits" crefType="Unqualified"/> instead to display the 8 most significant bits regardless of the image bit depth.
            </remarks>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapGivenPercentRange">
            <summary>
            (Obsolete) When image bit depth is 0, maps the pixel values in the relative percentage range (0 to 100) of the cumulated histogram to an 8-bit scale.
            </summary>
            <remarks>
            This value has been deprecated. 
            This method only maps the image values when the image bit depth is 0. Otherwise, the 8 most significant bits of the image are displayed. 
            Use <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapGivenPercentRangeAlways" crefType="Unqualified"/> instead to have the mapping applied regardless of the image bit depth. 
            Use <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.UseMostSignificantBits" crefType="Unqualified"/> instead to display the 8 most significant bits regardless of the image bit depth.
            </remarks>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapDefault">
            <summary>
            When image bit depth is 0, maps the full dynamic to 8 bits; otherwise, right shifts until the 8 most significant bits of the image are displayed.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.UseMostSignificantBits">
            <summary>
            Right shifts until the 8 most significant bits of the image are displayed as specified by the image bit depth.
            </summary>
            <remarks>
            When image bit depth is 0, shifts to the right 7 times for signed 16-bit images and 8 times for unsigned 16-bit images. Otherwise, the number of shifts is calculated by subtracting 8 from the image bit depth.
            </remarks>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapFullDynamicRangeAlways">
            <summary>
            Maps the full dynamic range to 8 bits.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.DownshiftAlways">
            <summary>
            Applies a given number of right shifts to the 16-bit pixels.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapGivenRangeAlways">
            <summary>
            Maps the pixel values in a specified range to an 8-bit scale.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.Map90PercentDynamicRangeAlways">
            <summary>
            Maps the range corresponding to the center 90 percent of the cumulative histogram to 8 bits.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapGivenPercentRangeAlways">
            <summary>
            Maps the pixel values in the relative percentage range (0 to 100) of the cumulated histogram to an 8-bit scale.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.PaletteEntry">
            <summary>
            An entry in a palette which contains R, G, and B representations.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.PaletteEntry.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new <see cref="T:NationalInstruments.Vision.WindowsForms.PaletteEntry" crefType="Unqualified"/>.
            </summary>
            <param name="red">
            The red value of the color.
            </param>
            <param name="green">
            The green value of the color.
            </param>
            <param name="blue">
            The blue value of the color.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.PaletteEntry.#ctor(NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Creates a new <see cref="T:NationalInstruments.Vision.WindowsForms.PaletteEntry" crefType="Unqualified"/> from an existing Rgb32Value.
            </summary>
            <param name="rgbValue">
            The Rgb32Value from which to copy the R, G, and B members.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.PaletteEntry.Equals(NationalInstruments.Vision.WindowsForms.PaletteEntry)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A <see cref="T:NationalInstruments.Vision.WindowsForms.PaletteEntry" crefType="Unqualified"/> instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.PaletteEntry.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.PaletteEntry.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.PaletteEntry.op_Equality(NationalInstruments.Vision.WindowsForms.PaletteEntry,NationalInstruments.Vision.WindowsForms.PaletteEntry)">
            <summary>
            Returns whether the two colors are equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.</param>
            <returns>
            Whether the two values are equal.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.PaletteEntry.op_Inequality(NationalInstruments.Vision.WindowsForms.PaletteEntry,NationalInstruments.Vision.WindowsForms.PaletteEntry)">
            <summary>
            Returns whether the two colors are not equal.
            </summary>
            <param name="val1">
             The first value to compare.
            </param>
            <param name="val2">
            The second value to compare.
            </param>
            <returns>
            Whether the two values are not equal.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.PaletteEntry.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.PaletteEntry.Red">
            <summary>
            Gets the red value of the color. </summary>
            <value>
            The red value of the color.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.PaletteEntry.Green">
            <summary>
            Gets the green value of the color. </summary>
            <value>
            The green value of the color.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.PaletteEntry.Blue">
            <summary>
            Gets the blue value of the color. 
            </summary>
            <value>
            The blue value of the color. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.PaletteEntry.Rgb32Value">
            <summary>
            Gets the <see cref="T:NationalInstruments.Vision.WindowsForms.PaletteEntry" crefType="Unqualified"/> as an Rgb32Value.</summary>
            <value>
            The <see cref="T:NationalInstruments.Vision.WindowsForms.PaletteEntry" crefType="Unqualified"/> as an Rgb32Value.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.PaletteEntriesCollection">
            <summary>
            Creates a collection of palette entries.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.PaletteEntriesCollection.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.PaletteEntriesCollection.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.PaletteEntriesCollection.Dispose">
            <summary>
            Releases the resources used by <see cref="T:NationalInstruments.Vision.WindowsForms.PaletteEntriesCollection" crefType="Unqualified"/>.
            </summary>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.PaletteEntriesCollection.Changed">
            <summary>
            Occurs when a palette entry changes.</summary>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.PaletteEntriesCollection.SynchronizeCallbacks">
            <summary>
            Gets or sets a value that indicates how events and callback delegates are invoked. 
            </summary>
            <value>
            	<see langword="true"/> if events and callbacks are invoked through the Send or Post methods; otherwise events and callbacks are invoked directly. The default value is <see langword="true"/>. 
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.Palette">
            <summary>
            Represents palette data that you can configure on a per palette basis.</summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.Palette.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.WindowsForms.Palette" crefType="Unqualified"/> class.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.Palette.#ctor(NationalInstruments.Vision.WindowsForms.PaletteType)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.WindowsForms.Palette" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.WindowsForms.Palette.Type" crefType="Unqualified"/>.
            </summary>
            <param name="type">
            The <see cref="P:NationalInstruments.Vision.WindowsForms.Palette.Type" crefType="Unqualified"/> of palette.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.Palette.#ctor(System.Collections.ObjectModel.Collection{NationalInstruments.Vision.Rgb32Value})">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.WindowsForms.Palette" crefType="Unqualified"/> class with the specified <see cref="P:NationalInstruments.Vision.WindowsForms.Palette.Entries" crefType="Unqualified"/>.
            </summary>
            <param name="entries">
            The <see cref="P:NationalInstruments.Vision.WindowsForms.Palette.Entries" crefType="Unqualified"/> of the palette.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.Palette.Equals(NationalInstruments.Vision.WindowsForms.Palette)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A <see cref="T:NationalInstruments.Vision.WindowsForms.Palette" crefType="Unqualified"/> instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.Palette.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.Palette.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.Palette.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.Palette.Dispose">
            <summary>
            Releases the resources used by <see cref="T:NationalInstruments.Vision.WindowsForms.Palette" crefType="Unqualified"/>.
            </summary>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.Palette.Entries">
            <summary>Gets the palette values.
            </summary>
            <value>
            The entries of the palette, which contain the R, G, and B components of color values.
            </value>
            <remarks>
            After setting this property, <see cref="P:NationalInstruments.Vision.WindowsForms.Palette.Type" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.PaletteType.UserDefined" crefType="Unqualified"/>.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.Palette.Type">
            <summary>
            Gets or sets one of the five predefined palettes, or a user-defined color table.
            </summary>
            <value>
            One of the predefined <see cref="T:NationalInstruments.Vision.WindowsForms.PaletteType" crefType="Unqualified"/> values or a user-defined color table.
            </value>
            <remarks>
            Changing this property does not affect user-defined palette entries. To change them, use <see cref="P:NationalInstruments.Vision.WindowsForms.Palette.Entries" crefType="Unqualified"/>.
            </remarks>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.ImageMouseEventArgs">
            <summary>
            Provides data for the <see cref="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageMouseDown" crefType="Unqualified"/>, <see cref="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageMouseMove" crefType="Unqualified"/>, and <see cref="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageMouseUp" crefType="Unqualified"/> events.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageMouseEventArgs.#ctor(System.Windows.Forms.MouseButtons,NationalInstruments.Vision.PointContour)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.WindowsForms.ImageMouseEventArgs" crefType="Unqualified"/> class. 
            </summary>
            <param name="button">
            The state of the mouse buttons.
            </param>
            <param name="point">
            The coordinates on the image.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageMouseEventArgs.Equals(NationalInstruments.Vision.WindowsForms.ImageMouseEventArgs)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An <see cref="T:NationalInstruments.Vision.WindowsForms.ImageMouseEventArgs" crefType="Unqualified"/> instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageMouseEventArgs.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageMouseEventArgs.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageMouseEventArgs.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageMouseEventArgs.Point">
            <summary>
            Gets the coordinates on the image.
            </summary>
            <value>
            The coordinates on the image.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageMouseEventArgs.Button">
            <summary>
            Gets the state of the mouse buttons.
            </summary>
            <value>
            The following are valid values: 1 for the left button, 2 for the right button, or 4 for the middle button. For example, if both the left and right mouse buttons are pressed, value is 3 (1 + 2).
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.ImageZoomedEventArgs">
            <summary>
            Provides data for the <see cref="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImageZoomed" crefType="Unqualified"/> event.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageZoomedEventArgs.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.WindowsForms.ImageZoomedEventArgs" crefType="Unqualified"/> class. 
            </summary>
            <param name="xZoom">
            The x data value of the image to zoom.
            </param>
            <param name="yZoom">
            The y data value of the image to zoom.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageZoomedEventArgs.Equals(NationalInstruments.Vision.WindowsForms.ImageZoomedEventArgs)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An <see cref="T:NationalInstruments.Vision.WindowsForms.ImageZoomedEventArgs" crefType="Unqualified"/> to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageZoomedEventArgs.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageZoomedEventArgs.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImageZoomedEventArgs.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageZoomedEventArgs.XZoom">
            <summary>
            Gets the x data value of the image to zoom.
            </summary>
            <value>
            The x data value of the image to zoom.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImageZoomedEventArgs.YZoom">
            <summary>
            Gets the y data value of the image to zoom.
            </summary>
            <value>
            The y data value of the image to zoom.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.ImagePannedEventArgs">
            <summary>
            Provides data for the <see cref="E:NationalInstruments.Vision.WindowsForms.ImageViewer.ImagePanned" crefType="Unqualified"/> event.</summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImagePannedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.WindowsForms.ImagePannedEventArgs" crefType="Unqualified"/> class. 
            </summary>
            <param name="dx">
            The distance in pixels to move on the x-axis.
            </param>
            <param name="dy">
            The distance in pixels to move on the y-axis.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImagePannedEventArgs.Equals(NationalInstruments.Vision.WindowsForms.ImagePannedEventArgs)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An <see cref="T:NationalInstruments.Vision.WindowsForms.ImagePannedEventArgs" crefType="Unqualified"/> instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImagePannedEventArgs.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImagePannedEventArgs.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ImagePannedEventArgs.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImagePannedEventArgs.Dx">
            <summary>
            Gets the distance in pixels to move on the x-axis.</summary>
            <value>
            The distance in pixels to move on the x-axis.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ImagePannedEventArgs.Dy">
            <summary>
            Gets the distance in pixels to move on the y-axis.</summary>
            <value>
            The distance in pixels to move on the y-axis.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs">
            <summary>
            Provides data for the RoiChanged event. 
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs.#ctor(NationalInstruments.Vision.WindowsForms.ContoursChangedAction,System.Collections.ObjectModel.Collection{NationalInstruments.Vision.Contour},System.Int32,System.Collections.ObjectModel.Collection{NationalInstruments.Vision.Contour},System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs" crefType="Unqualified"/> class.
            </summary>
            <param name="action">
            The <see cref="T:NationalInstruments.Vision.WindowsForms.ContoursChangedAction" crefType="Unqualified"/> that changed the contour.
            </param>
            <param name="newItems">
            The new contours that were added to the ViewerRoi.
            </param>
            <param name="newStartingIndex">
            The index in the ViewerRoi where the new contours are added.
            </param>
            <param name="oldItems">
            The old contours that were removed from the ViewerRoi.
            </param>
            <param name="oldStartingIndex">
            The index where the contours were removed from the ViewerRoi.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs.Equals(NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A <see cref="T:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs" crefType="Unqualified"/> instance to compare to this instance.
            </param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs.Action">
            <summary>
            Gets the <see cref="T:NationalInstruments.Vision.WindowsForms.ContoursChangedAction" crefType="Unqualified"/> that changed the that changed the ViewerRoi.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.Vision.WindowsForms.ContoursChangedAction" crefType="Unqualified"/> that changed the ViewerRoi.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs.NewItems">
            <summary>
            Gets the new contours that were added to the ViewerRoi.
            </summary>
            <value>
            The new contours that were added to the ViewerRoi.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs.NewStartingIndex">
            <summary>
            Gets the index in the ViewerRoi where the new contours are added.
            </summary>
            <value>
            The index in the ViewerRoi where the new contours are added.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs.OldItems">
            <summary>
            Gets the old contours that were removed from the ViewerRoi.
            </summary>
            <value>
            The old contours that were removed from the ViewerRoi.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ContoursChangedEventArgs.OldStartingIndex">
            <summary>
            Gets the index where the contours were removed from the ViewerRoi.
            </summary>
            <value>
            The index where the contours were removed from the ViewerRoi.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.ViewerRoi">
            <summary>
            A region of interest (ROI) that is visible on an <see cref="T:NationalInstruments.Vision.WindowsForms.ImageViewer" crefType="Unqualified"/>.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ViewerRoi.ClearItems">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ViewerRoi.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ViewerRoi.Dispose(System.Boolean)">
            <summary>
            Releases the resources used by <see cref="T:NationalInstruments.Vision.WindowsForms.ViewerRoi" crefType="Unqualified"/>.
            </summary>
            <param name="disposing">
            </param>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ViewerRoi.SynchronizeCallbacks">
            <summary>
            Gets or sets how events and callback delegates are invoked. 
            </summary>
            <value><see langword="true"/> if events and callbacks are invoked through the <see cref="M:System.Threading.SynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)"/> or <see cref="M:System.Threading.SynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)"/> methods; otherwise, events and callbacks are invoked directly. The default value is <see langword="true"/>. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ViewerRoi.MaximumContours">
            <summary>
            Gets or sets the maximum number of contours the viewer can have in its ROI.
            </summary>
            <value>
            The maximum number of contours the viewer can have in its ROI. The default value is -1.
            </value>
            <remarks>
            If this property is negative, it indicates there is no limit on the maximum number of contours.</remarks>
        </member>
        <member name="E:NationalInstruments.Vision.WindowsForms.ViewerRoi.ContoursChanged">
            <summary>
            Occurs when the contours of this <see cref="T:NationalInstruments.Vision.WindowsForms.ViewerRoi" crefType="Unqualified"/> are changed.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.DisplayMapping">
            <summary>
            Defines the pixel mapping policy for displaying 16-bit images.
            </summary>
            <remarks>
            Because 16-bit grayscale images (65,536 grayscale values) 
             cannot be displayed with their full resolution on 32-bit color displays using common video adapters limited to 8-bit resolution per color plane, 16-bit images must be mapped to the 8-bit range (0 to 255). 
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapDefault">
            <summary>
            When image bit depth is 0, maps the full dynamic to 8 bits; otherwise, right shifts until the 8 most significant bits of the image are displayed.
            </summary>
            <remarks>
            After the execution of this method, the following hold true:
            	<list type="bullet">
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapDefault" crefType="Unqualified"/>.
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Shifts" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range" crefType="Unqualified"/> are undefined.
            			</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.UseMostSignificantBits">
            <summary>
            Right shifts until the 8 most significant bits of the image are displayed as specified by the image bit depth.
            </summary>
            <remarks>
            When image bit depth is 0, shifts to the right 7 times for signed 16-bit images and 8 times for unsigned 16-bit images. Otherwise, the number of shifts is calculated by subtracting 8 from the image bit depth.
            After the execution of this method, the following hold true:
            	<list type="bullet">
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.UseMostSignificantBits" crefType="Unqualified"/>.
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Shifts" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range" crefType="Unqualified"/> are undefined.
            			</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapFullDynamicRangeAlways">
            <summary>
            Maps the full dynamic range to 8 bits.
            </summary>
            <remarks>
            After the execution of this method, the following hold true:
            	<list type="bullet">
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapFullDynamicRangeAlways" crefType="Unqualified"/>.
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Shifts" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range" crefType="Unqualified"/> are undefined.
            			</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.Map90PercentDynamicRangeAlways">
            <summary>
            Maps the range corresponding to the center 90 percent of the cumulative histogram to 8 bits.
            </summary>
            <remarks>
            After the execution of this method, the following hold true:
            <list type="bullet">
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.Map90PercentDynamicRangeAlways" crefType="Unqualified"/>.
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Shifts" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range" crefType="Unqualified"/> are undefined.
            			</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapGivenRangeAlways(System.Int32,System.Int32)">
            <summary>
            Maps the pixel values in a specified range to an 8-bit scale.
            </summary>
            <param name="minimum">
            Specifies the minimum value of the range to map.
            </param>
            <param name="maximum">
            Specifies the maximum value of the range to map.
            </param>
            <remarks>
            After the execution of this method, the following hold true:
            	<list type="bullet">
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapGivenRangeAlways" crefType="Unqualified"/>.
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range" crefType="Unqualified"/> is the specified range. 
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Shifts" crefType="Unqualified"/> is undefined.
            			</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapGivenPercentRangeAlways(System.Int32,System.Int32)">
            <summary>
            Maps the pixel values in the relative percentage range (0 to 100) of the cumulated histogram to an 8-bit scale.
            </summary>
            <param name="minimum">
            Specifies the minimum value of the relative percentage range of the cumulated histogram.
            </param>
            <param name="maximum">
            Specifies the maximum value of the relative percentage range of the cumulated histogram.
            </param>
            <remarks>
            After the execution of this method, the following hold true:
            	<list type="bullet">
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapGivenPercentRangeAlways" crefType="Unqualified"/>.
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range" crefType="Unqualified"/> is the relative percentage range (0 to 100) of the cumulated histogram. 
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Shifts" crefType="Unqualified"/> is undefined.
            			</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.DownshiftAlways(System.Int32)">
            <summary>
            Applies a given number of right shifts to the 16-bit pixels.
            </summary>
            <param name="shifts">
            Number of right shifts to apply.
            </param>
            <remarks>
            After the execution of this method, the following hold true:
            <list type="bullet">
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.DownshiftAlways" crefType="Unqualified"/>.
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range" crefType="Unqualified"/> is set to undefined.
            </description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapFullDynamicRange">
            <summary>
            (Obsolete) When image bit depth is 0, maps the full dynamic range to 8 bits.
            </summary>
            <remarks>
            This method has been deprecated. 
            This method only maps the image values when the image bit depth is 0. Otherwise, the 8 most significant bits of the image are displayed.
            Use <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapDefault" crefType="Unqualified"/> instead to preserve this existing behavior. 
            Use <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapFullDynamicRangeAlways" crefType="Unqualified"/> instead to have the mapping applied regardless of the image bit depth. 
            Use <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.UseMostSignificantBits" crefType="Unqualified"/> instead to display the 8 most significant bits regardless of the image bit depth.
            After the execution of this method, the following hold true:
            	<list type="bullet">
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapFullDynamicRange" crefType="Unqualified"/>.
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Shifts" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range" crefType="Unqualified"/> are undefined.
            			</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.Map90PercentDynamicRange">
            <summary>
            (Obsolete) When image bit depth is 0, maps the range corresponding to the center 90 percent of the cumulative histogram to 8 bits.
            </summary>
            <remarks>
            This method has been deprecated. 
            This method only maps the image values when the image bit depth is 0. Otherwise, the 8 most significant bits of the image are displayed.
            Use <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.Map90PercentDynamicRangeAlways" crefType="Unqualified"/> instead to have the mapping applied regardless of the image bit depth. 
            Use <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.UseMostSignificantBits" crefType="Unqualified"/> instead to display the 8 most significant bits regardless of the image bit depth.
            After the execution of this method, the following hold true:
            <list type="bullet">
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.Map90PercentDynamicRange" crefType="Unqualified"/>.
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Shifts" crefType="Unqualified"/> and <see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range" crefType="Unqualified"/> are undefined.
            			</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapGivenRange(System.Int32,System.Int32)">
            <summary>
            (Obsolete) When image bit depth is 0, maps the pixel values in a specified range to an 8-bit scale.
            </summary>
            <param name="minimum">
            Specifies the minimum value of the range to map.
            </param>
            <param name="maximum">
            Specifies the maximum value of the range to map.
            </param>
            <remarks>
            This method has been deprecated. 
            This method only maps the image values when the image bit depth is 0. Otherwise, the 8 most significant bits of the image are displayed.
            Use <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapGivenRangeAlways(System.Int32,System.Int32)" crefType="Unqualified"/> instead to have the mapping applied regardless of the image bit depth. 
            Use <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.UseMostSignificantBits" crefType="Unqualified"/> instead to display the 8 most significant bits regardless of the image bit depth.
            After the execution of this method, the following hold true:
            	<list type="bullet">
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapGivenRange" crefType="Unqualified"/>.
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range" crefType="Unqualified"/> is the specified range. 
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Shifts" crefType="Unqualified"/> is undefined.
            			</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapGivenPercentRange(System.Int32,System.Int32)">
            <summary>
            (Obsolete) When image bit depth is 0, maps the pixel values in the relative percentage range (0 to 100) of the cumulated histogram to an 8-bit scale.
            </summary>
            <param name="minimum">
            Specifies the minimum value of the relative percentage range of the cumulated histogram.
            </param>
            <param name="maximum">
            Specifies the maximum value of the relative percentage range of the cumulated histogram.
            </param>
            <remarks>
            This method has been deprecated. 
            This method only maps the image values when the image bit depth is 0. Otherwise, the 8 most significant bits of the image are displayed.
            Use <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapGivenPercentRangeAlways(System.Int32,System.Int32)" crefType="Unqualified"/> instead to have the mapping applied regardless of the image bit depth. 
            Use <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.UseMostSignificantBits" crefType="Unqualified"/> instead to display the 8 most significant bits regardless of the image bit depth.
            After the execution of this method, the following hold true:
            	<list type="bullet">
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.MapGivenPercentRange" crefType="Unqualified"/>.
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range" crefType="Unqualified"/> is the relative percentage range (0 to 100) of the cumulated histogram. 
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Shifts" crefType="Unqualified"/> is undefined.
            			</description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.Downshift(System.Int32)">
            <summary>
            (Obsolete) When image bit depth is 0, applies a given number of right shifts to the 16-bit pixels.
            </summary>
            <param name="shifts">
            Number of right shifts to apply.
            </param>
            <remarks>
            This method has been deprecated. 
            This method only maps the image values when the image bit depth is 0. Otherwise, the 8 most significant bits of the image are displayed.
            Use <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.DownshiftAlways(System.Int32)" crefType="Unqualified"/> instead to have the mapping applied regardless of the image bit depth. 
            Use <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.UseMostSignificantBits" crefType="Unqualified"/> instead to display the 8 most significant bits regardless of the image bit depth.
            After the execution of this method, the following hold true:
            <list type="bullet">
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy" crefType="Unqualified"/> is set to <see cref="F:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy.Downshift" crefType="Unqualified"/>.
            </description>
            		</item>
            		<item>
            			<description>
            				<see cref="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range" crefType="Unqualified"/> is set to undefined.
            </description>
            		</item>
            	</list>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Shifts">
            <summary>
            Gets the number of bits to right-shift the pixel values for the <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.Downshift(System.Int32)" crefType="Unqualified"/> method.
            </summary>
            <value>
            The number of bits to right-shift the pixel values for the <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.Downshift(System.Int32)" crefType="Unqualified"/> method.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Policy">
            <summary>
            Gets the policy used to perform the display mapping.
            </summary>
            <value>
            The <see cref="T:NationalInstruments.Vision.WindowsForms.DisplayMappingPolicy" crefType="Unqualified"/> used to perform the display mapping.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.DisplayMapping.Range">
            <summary>
            Gets the range used when the display mapping policy is <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapGivenRange(System.Int32,System.Int32)" crefType="Unqualified"/> or <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapGivenPercentRange(System.Int32,System.Int32)" crefType="Unqualified"/>.
            </summary>
            <value>
            The range used when the display mapping policy is <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapGivenRange(System.Int32,System.Int32)" crefType="Unqualified"/> or <see cref="M:NationalInstruments.Vision.WindowsForms.DisplayMapping.MapGivenPercentRange(System.Int32,System.Int32)" crefType="Unqualified"/>.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions">
            <summary>
            Defines the options you can use to change the viewer background.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.DefaultBackground">
            <summary>
            Sets the background to the default.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.SolidBackground(NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Sets the background to a solid color with the specified <see cref="P:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.FillColor" crefType="Unqualified"/>.
            </summary>
            <param name="fillColor">
            The RGB fill color of the image viewer.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.HatchBackground(NationalInstruments.Vision.Rgb32Value,NationalInstruments.Vision.Rgb32Value,NationalInstruments.Vision.WindowsForms.BackgroundHatchStyle)">
            <summary>
            Sets the background to a hatched pattern with the specified <see cref="P:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.FillColor" crefType="Unqualified"/>, <see cref="P:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.BackgroundColor" crefType="Unqualified"/>, and <see cref="P:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.HatchStyle" crefType="Unqualified"/>.
            </summary>
            <param name="fillColor">
            The RGB fill color of the image viewer.
            </param>
            <param name="backgroundColor">
            The RGB background color of the image viewer.
            </param>
            <param name="hatchStyle">
            The <see cref="T:NationalInstruments.Vision.WindowsForms.BackgroundHatchStyle" crefType="Unqualified"/> of the image viewer.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.BackgroundColor">
            <summary>
            Gets or sets the background color of the image viewer. 
            </summary>
            <value>
            The RGB background color of the image viewer.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.FillColor">
            <summary>
            Gets or sets the fill color of the image viewer.
            </summary>
            <value>
            The RGB fill color of the image viewer.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.HatchStyle">
            <summary>
            Gets or sets the hatch style of the image viewer.</summary>
            <value>
            The <see cref="T:NationalInstruments.Vision.WindowsForms.BackgroundHatchStyle" crefType="Unqualified"/> of the image viewer.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ViewerBackgroundOptions.FillStyle">
            <summary>
            Gets or sets the fill style of the image viewer. 
            </summary>
            <value>
            The <see cref="T:NationalInstruments.Vision.WindowsForms.BackgroundFillStyle" crefType="Unqualified"/> of the image viewer. 
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.ZoomInfo">
            <summary>
            Represents the x and y zoom information on an <see cref="T:NationalInstruments.Vision.WindowsForms.ImageViewer" crefType="Unqualified"/>.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ZoomInfo.Initialize(System.Double,System.Double)">
            <summary>
            Sets the x and y zoom factors.</summary>
            <param name="x">
            The amount to zoom in the x direction.
            </param>
            <param name="y">
            The amount to zoom in the y direction.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.WindowsForms.ZoomInfo.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ZoomInfo.X">
            <summary>
            Gets or sets the amount of zoom in the x direction.
            </summary>
            <value>
            The amount of zoom in the x direction.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.WindowsForms.ZoomInfo.Y">
            <summary>
            Gets or sets the amount of zoom in the y direction.
            </summary>
            <value>
            The amount of zoom in the y direction.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.Internal.VisionDllCommon">
            <summary>
            Contains the imports from the Vision DLL(s).
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.WindowsForms.Internal.ViewerMessage">
            <summary>
            These are messages that we receive from the Vision DLL.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.AviInputSession">
            <summary>
            Defines an object used to read Audio Video Interleave (AVI) files.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.AviInputSession.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.AviInputSession" crefType="Unqualified"/> class with the specified filename. 
            </summary>
            <param name="fileName">
            The name of the AVI file.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.AviInputSession.ReadFrame(NationalInstruments.Vision.VisionImage,System.UInt32)">
            <summary>
            Reads a frame from the currently open Audio Video Interleave (AVI).
            </summary>
            <param name="image">
            The image into which the method stores the frame of the AVI.
            </param>
            <param name="frame">
            Frame number to read. The frame number is zero-based.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.AviInputSession.ReadFrame(NationalInstruments.Vision.VisionImage,System.UInt32,System.Boolean)">
            <summary>
            Reads a frame from the currently open Audio Video Interleave (AVI).
            </summary>
            <param name="image">
            The image into which the method stores the frame of the AVI.
            </param>
            <param name="frame">
            Frame number to read. The frame number is zero-based.
            </param>
            <param name="readData">
            Whether to read the data attached to this frame, if any.
            </param>
            <returns>
            If <paramref name="readData"/> is <see langword="true"/>, the data attached to this frame, if any.  If <paramref name="readData"/> is <see langword="false"/>, the method returns <see langword="null"/>.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.AviInputSession.Equals(NationalInstruments.Vision.AviInputSession)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An AviInputSession instance to compare to this instance.</param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.AviInputSession.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.AviInputSession.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.AviInputSession.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.AviInputSession.Dispose">
            <summary>
            Releases the resources used by <see cref="T:NationalInstruments.Vision.AviInputSession" crefType="Unqualified"/>.
            </summary>
        </member>
        <member name="P:NationalInstruments.Vision.AviInputSession.Width">
            <summary>
            Gets the width of the images in the Audio Video Interleave (AVI) file.
            </summary>
            <value>
            Width of the images in the AVI.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.AviInputSession.Height">
            <summary>
            Gets the height of the images in the Audio Video Interleave (AVI) file. 
            </summary>
            <value>
             Height of the images in the Audio Video Interleave (AVI) file. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.AviInputSession.ImageType">
            <summary>
            Gets the type of the images of the Audio Video Interleave (AVI) file.
            </summary>
            <value>
            Type of the images of the AVI file.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.AviInputSession.Frames">
            <summary>
            Gets the number of frames in the Audio Video Interleave (AVI) file. 
            </summary>
            <value>
            Number of frames in the Audio Video Interleave (AVI) file. 
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.AviInputSession.FramesPerSecond">
            <summary>
            Gets the number of frames per second this Audio Video Interleave (AVI) file should be shown at. 
            </summary>
            <value>
            Number of frames per second this Audio Video Interleave (AVI) file should be shown at. 
            </value>
            <remarks>
            The AVI may play at a slower rate, depending on the performance of the system on which it plays. 
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.AviInputSession.FilterName">
            <summary>
            Gets the name of the decompression filter used to read this Audio Video Interleave (AVI) file.
            </summary>
            <value>
            Name of the decompression filter used to read this Audio Video Interleave (AVI) file.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.AviInputSession.HasData">
            <summary>
            Gets whether this Audio Video Interleave (AVI) file has data attached to its frames.
            </summary>
            <value>
            If this property is <see langword="true"/>, you can read the data by calling <see cref="M:NationalInstruments.Vision.AviInputSession.ReadFrame(NationalInstruments.Vision.VisionImage,System.UInt32)" crefType="PartiallyQualified"/> and passing <see langword="true"/> to <format type="italics">readData</format>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.AviInputSession.MaximumDataSize">
            <summary>
            Gets the maximum size of the data attached to the frames of this Audio Video Interleave (AVI) file.
            </summary>
            <value>
             Maximum size of the data attached to the frames of this AVI file.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.AviOutputSession">
            <summary>
            Defines an object used to write Audio Video Interleave (AVI) files.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.AviOutputSession" crefType="Unqualified"/> class with the specified filename. 
            </summary>
            <param name="fileName">
            The name of the Audio Video Interleave (AVI) file to write.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.#ctor(System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.AviOutputSession" crefType="Unqualified"/> class with the specified file name and <see cref="P:NationalInstruments.Vision.AviInputSession.FramesPerSecond" crefType="Unqualified"/>. 
            </summary>
            <param name="fileName">
            The name of the Audio Video Interleave (AVI) file to write.
            </param>
            <param name="framesPerSecond">
            The number of frames per second of this AVI. <paramref name="framesPerSecond"/> indicates the playback rate you want to use for the AVI you create. The AVI may play at a slower rate depending on the performance of the system it plays on. 
            The default value is 30.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.#ctor(System.String,System.UInt32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.AviOutputSession" crefType="Unqualified"/> class with the specified file name, compression filter, and <see cref="P:NationalInstruments.Vision.AviInputSession.FramesPerSecond" crefType="Unqualified"/>. 
            </summary>
            <param name="fileName">
            The name of the Audio Video Interleave (AVI) file to write.
            </param>
            <param name="framesPerSecond">
            The number of frames per second of this AVI. <paramref name="framesPerSecond"/> indicates the playback rate you want to use for the AVI you create. The AVI may play at a slower rate depending on the performance of the system it plays on. 
            The default value is 30.
            </param>
            <param name="compressionFilter">
            The name of the compression filter to use. To get a list of valid compression filters on your system, call <see cref="M:NationalInstruments.Vision.AviOutputSession.GetCompressionFilters" crefType="Unqualified"/>. By default, this parameter indicates that the method uses no compression.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.#ctor(System.String,System.UInt32,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.AviOutputSession" crefType="Unqualified"/> class with the specified file name, compression filter, quality, and <see cref="P:NationalInstruments.Vision.AviInputSession.FramesPerSecond" crefType="Unqualified"/>. 
            </summary>
            <param name="fileName">
            The name of the Audio Video Interleave (AVI) file to write.
            </param>
            <param name="framesPerSecond">
            The number of frames per second of this AVI. <paramref name="framesPerSecond"/> indicates the playback rate you want to use for the AVI you create. The AVI may play at a slower rate depending on the performance of the system it plays on. 
            The default value is 30.
            </param>
            <param name="compressionFilter">
            The name of the compression filter to use. To get a list of valid compression filters on your system, call <see cref="M:NationalInstruments.Vision.AviOutputSession.GetCompressionFilters" crefType="Unqualified"/>. By default, this parameter indicates that the method uses no compression.
            </param>
            <param name="quality">
            The quality to use for the compression filter, from 0 to 1000. The default value is 1000.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.#ctor(System.String,System.UInt32,System.String,System.Int32,System.Boolean,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:NationalInstruments.Vision.AviOutputSession" crefType="Unqualified"/> class with the specified file name, compression filter, quality, <see cref="P:NationalInstruments.Vision.AviInputSession.FramesPerSecond" crefType="Unqualified"/>, <see cref="P:NationalInstruments.Vision.AviInputSession.HasData" crefType="Unqualified"/>, and <see cref="P:NationalInstruments.Vision.AviInputSession.MaximumDataSize" crefType="Unqualified"/>. 
            </summary>
            <param name="fileName">
            The name of the Audio Video Interleave (AVI) file to write.
            </param>
            <param name="framesPerSecond">
            The number of frames per second of this AVI. <paramref name="framesPerSecond"/> indicates the playback rate you want to use for the AVI you create. The AVI may play at a slower rate depending on the performance of the system it plays on. 
            The default value is 30.
            </param>
            <param name="compressionFilter">
            The name of the compression filter to use. To get a list of valid compression filters on your system, call <see cref="M:NationalInstruments.Vision.AviOutputSession.GetCompressionFilters" crefType="Unqualified"/>. By default, this parameter indicates that the method uses no compression.
            </param>
            <param name="quality">
            The quality to use for the compression filter, from 0 to 1000. The default value is 1000.
            </param>
            <param name="hasData">
            Whether this AVI has data associated with each frame.  The default value is <see langword="false"/>.
            </param>
            <param name="maxDataSize">
            The maximum size of data that can be attached to each frame. If you do not want to attach data to this AVI, set this to 0.
            The default value is 10000.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.GetCompressionFilters">
            <summary>
            Returns an array of the compression filters on this system available to be used to create Audio Video Interleave (AVI) files. 
            </summary>
            <returns>
            On success, this method returns a collection of names of compression filters that are available to compress AVI files on this system. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.WriteFrame(NationalInstruments.Vision.VisionImage)">
            <summary>
            Writes a frame to the currently open Audio Video Interleave (AVI) file with the specified image.
            </summary>
            <param name="image">
            The image to write to the frame of the AVI.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.WriteFrame(NationalInstruments.Vision.VisionImage,System.Byte[])">
            <summary>
            Writes a frame to the currently open Audio Video Interleave (AVI) file with the specified image and data.
            </summary>
            <param name="image">
            The image to write to the frame of the AVI.
            </param>
            <param name="data">
            The data to attach to this frame, if any.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.Equals(NationalInstruments.Vision.AviOutputSession)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            An AviOutputSession instance to compare to this instance.</param>
            <returns>
            	<see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
            	<see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.GetHashCode">
            <summary>
            Returns a hash code for this object. 
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.AviOutputSession.Dispose">
            <summary>
            Releases the resources used by <see cref="T:NationalInstruments.Vision.AviOutputSession" crefType="Unqualified"/>.
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.ImageType">
            <summary>
            Specifies the type of image data the <see cref="T:NationalInstruments.Vision.VisionImage" crefType="Unqualified"/> holds.
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ImageType.U8">
            <summary>
            Unsigned 8-bit
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ImageType.I16">
            <summary>
            Signed 16-bit
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ImageType.Single">
            <summary>
            Single precision
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ImageType.Complex">
            <summary>
            Complex
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ImageType.Rgb32">
            <summary>
            32-bit RGB
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ImageType.Hsl32">
            <summary>
            32-bit HSL
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ImageType.RgbU64">
            <summary>
            64-bit unsigned RGB
            </summary>
        </member>
        <member name="F:NationalInstruments.Vision.ImageType.U16">
            <summary>
            Unsigned 16-bit
            </summary>
        </member>
        <member name="T:NationalInstruments.Vision.VisionImage">
            <summary>
            Represents image data and properties that you can configure on a per image basis.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ThrowIfWrongType(NationalInstruments.Vision.ImageType)">
            <summary>
            A helper method to throw an "Incompatible image type" exception if we're not
            of this type.  We should only need to do this for cases where CVI can't tell
            we're the wrong type. (e.g. trying to call imaqArrayToImage() with the wrong
            kind of array)
            </summary>
            <param name="allowedType"></param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.SetMaskOffset">
            <summary>
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.#ctor">
            <summary>
            Creates a new image.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.#ctor(NationalInstruments.Vision.ImageType)">
            <summary>
            Creates a new image.
            </summary>
            <param name="type">The <see cref="T:NationalInstruments.Vision.ImageType"/> of the image.</param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.#ctor(NationalInstruments.Vision.ImageType,System.Int32)">
            <summary>
            Creates a new image.
            </summary>
            <param name="type">The <see cref="T:NationalInstruments.Vision.ImageType"/> of the image.</param>
            <param name="borderSize">The size of the border.</param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.RemoveVisionInfo(NationalInstruments.Vision.InfoTypes)">
            <summary>
            Removes the specified vision information types from an image.
            </summary>
            <param name="infoTypes">
            The vision information types to remove from this image.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.SetSize(System.Int32,System.Int32)">
            <summary>
            Sets the size of the image.
            </summary>
            <param name="width">The new width of the image.</param>
            <param name="height">The new height of the image.</param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ArrayToImage(NationalInstruments.Vision.PixelValue2D)">
            <summary>
            Sets the pixels of an image to the values in a given array.  This function resizes the
            image to the size of the array.
            </summary>
            <param name="array">The new pixels of the image in row-major order. These pixels must be
            of the same type as the image.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.SetLinePixels(NationalInstruments.Vision.Roi,NationalInstruments.Vision.PixelValue1D)">
            <summary>
            Changes the intensity values in a line of pixels of an image.</summary>
            <param name="line">
            The coordinates of the line to change.  Any pixels designated by <format type="italics">line</format> found outside the actual image are not replaced. This Roi must contain exactly one <see cref="T:NationalInstruments.Vision.LineContour" crefType="Unqualified"/>.</param>
            <param name="pixels">
            The pixel values that the method uses to replace the values in the line.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.SetLinePixels(NationalInstruments.Vision.LineContour,NationalInstruments.Vision.PixelValue1D)">
            <summary>
            Changes the intensity values in a line of pixels of an image.
            </summary>
            <param name="line">
            The coordinates of the line to change.  Any pixels designated by <format type="italics">line </format>found outside the actual image are not replaced.</param>
            <param name="pixels">
            The pixel values that the method uses to replace the values in the line.</param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ImageToArray">
            <summary>
            Returns an array representation of the pixels in the image.
            </summary>
            <returns>
            The array representation of the pixels in the image in row-major order.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ImageToArray(NationalInstruments.Vision.Roi)">
            <summary>
            Returns an array representation of the pixels in the region of interest.
            </summary>
            <param name="rectangle">
            The part of the image to extract. This Roi must either be empty or contain exactly one <see cref="T:NationalInstruments.Vision.RectangleContour" crefType="Unqualified"/>.
            </param>
            <returns>
            The array representation of the pixels in the region of interest in row-major order.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ImageToArray(NationalInstruments.Vision.RectangleContour)">
            <summary>
            Returns an array representation of the pixels in the rectangle.
            </summary>
            <param name="rectangle">
            The part of the image to extract.
            </param>
            <returns>
            The array representation of the pixels in the rectangle in row-major order.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.GetLinePixels(NationalInstruments.Vision.Roi)">
            <summary>
            Returns the pixel values along a given line in an image.</summary>
            <param name="line">
            The line of pixels to extract.  This Roi must be either empty or contain one LineContour.
            </param>
            <returns>
            The pixel values extracted from the image.</returns>
            <remarks>
             If the starting or ending point of the line is outside the image, the line clips at the last visible pixel.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.GetLinePixels(NationalInstruments.Vision.LineContour)">
            <summary>
            Returns the pixel values along a given line in an image.</summary>
            <param name="line">
            The line of pixels to extract.</param>
            <returns>
            The pixel values extracted from the image.
            </returns>
            <remarks>
            If the starting or ending point of the line is outside the image, the line clips at the last visible pixel.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ComplexPlaneToArray">
            <summary>
            Extracts a complex plane from an image to a 2D array.</summary>
            <returns>
            </returns>
            <remarks>
            The <see cref="T:NationalInstruments.Vision.VisionImage" crefType="Unqualified"/> must be of type Complex.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ComplexPlaneToArray(NationalInstruments.Vision.ComplexPlane)">
            <summary>
            Extracts a complex plane from an image to a 2D array.
            </summary>
            <param name="plane">
            The plane to extract.  The default is Real.</param>
            <returns>
            </returns>
            <remarks>
            The <see cref="T:NationalInstruments.Vision.VisionImage" crefType="Unqualified"/> must be of type Complex.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ComplexPlaneToArray(NationalInstruments.Vision.ComplexPlane,NationalInstruments.Vision.Roi)">
            <summary>
            Extracts a complex plane from an image to a 2D array.
            </summary>
            <param name="plane">
            The plane to extract.  The default is Real.</param>
            <param name="rectangle">
            The part of the image to extract.
            </param>
            <returns>
            </returns>
            <remarks>
            The <see cref="T:NationalInstruments.Vision.VisionImage" crefType="Unqualified"/> must be of type Complex.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ComplexPlaneToArray(NationalInstruments.Vision.ComplexPlane,NationalInstruments.Vision.RectangleContour)">
            <summary>
            Extracts a complex plane from an image to a 2D array.
            </summary>
            <param name="plane">
            The plane to extract.  The default is Real.</param>
            <param name="rectangle">
            The part of the image to extract.
            </param>
            <returns>
            </returns>
            <remarks>
            The <see cref="T:NationalInstruments.Vision.VisionImage" crefType="Unqualified"/> must be of type Complex.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.Equals(NationalInstruments.Vision.VisionImage)">
            <summary>
            Returns a value indicating whether this instance is equal to the specified instance. 
            </summary>
            <param name="other">
            A VisionImage instance to compare to this instance.
            </param>
            <returns>
                <see langword="true"/> if the other parameter equals the value of this instance; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.Equals(System.Object)">
            <summary>
            Returns a value indicating whether this instance is equal to a specified object. 
            </summary>
            <param name="obj">
            An object to compare with this instance. 
            </param>
            <returns>
                <see langword="true"/> if <paramref name="obj"/> is a object that represents the same as the current; otherwise, <see langword="false"/>. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.GetHashCode">
            <summary>
            Returns a hash code for this object.
            </summary>
            <returns>
            A 32-bit signed integer hash code.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ReadFile(System.String)">
            <summary>
            Reads an image file.
            </summary>
            <param name="fileName">The path of the file to read.</param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ReadFile(System.String,System.Boolean)">
            <summary>
            Reads an image file.
            </summary>
            <param name="fileName">The path of the file to read.</param>
            <param name="readPalette">If <paramref name="readPalette"/> is <see langword="true"/>, the RGB palette used in the image; otherwise, <see langword="null"/>.</param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ReadVisionFile(System.String)">
            <summary>
            Reads an image file and any attached vision information.
            </summary>
            <param name="fileName">The path of the file to read.</param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ReadVisionFile(System.String,System.Boolean)">
            <summary>
            Reads an image file and any attached vision information.
            </summary>
            <param name="fileName">The path of the file to read.</param>
            <param name="readPalette">Whether to read the RGB palette used in the image.</param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteFile(System.String)">
            <summary>
            Writes this image to a file.</summary>
            <param name="fileName">
            The path of the file to write.</param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteFile(System.String,NationalInstruments.Vision.WindowsForms.Palette)">
            <summary>
            Writes this image to a file.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="palette">
            The palette to associate with 8-bit images. The default is a grayscale palette.
            </param>
            <remarks>
            This method does not write overlay information, calibration information, pattern matching template information, or custom data to the file. To write this data, use WriteVisionFile. (link to WriteVisionFile)
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteBmpFile(System.String)">
            <summary>
            Writes this image to file in BMP format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <remarks>
            Use this method with U8 and Rgb32 images.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteBmpFile(System.String,System.Boolean)">
            <summary>
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            &gt;
            <param name="compress">
                <see langword="true"/> to write a compressed BMP file; otherwise, <see langword="false"/>. The default value is <see langword="false"/>. 
            </param>
            <remarks>
            Use this method with U8 and Rgb32 images.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteBmpFile(System.String,System.Boolean,NationalInstruments.Vision.WindowsForms.Palette)">
            <summary>
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="compress">
                <see langword="true"/> to write a compressed BMP file; otherwise, <see langword="false"/>. The default value is <see langword="false"/>. 
            </param>
            <param name="palette">
            The palette to associate with U8 images.  The default is a grayscale image.
            </param>
            <remarks>
            Use this method with U8 and Rgb32 images.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteJpegFile(System.String)">
            <summary>
            Writes an image to a file in JPEG format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <remarks>
            Use this method with U8 and Rgb32 images. This method uses lossy compression even if you set the quality to 1,000.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteJpegFile(System.String,System.UInt32)">
            <summary>
            Writes an image to a file in JPEG format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="quality">
            The quality of the image to write. As quality increases, the method uses less lossy compression. Acceptable values range from 0 to 1,000. The default value is 750.</param>
            <remarks>
            Use this method with U8 and Rgb32 images. This method uses lossy compression even if you set the quality to 1,000.</remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteJpeg2000File(System.String)">
            <summary>
            Writes this image to a file in JPEG2000 format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <remarks>
            Use this method with U8, I16, U16, Rgb32, and RgbU64 images.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteJpeg2000File(System.String,System.Boolean)">
            <summary>
            Writes this image to a file in JPEG2000 format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="lossless">
                <see langword="true"/> to write the JPEG2000 file without loss of information; otherwise, <see langword="false"/>. The default value is <see langword="true"/>.
            </param>
            <remarks>
            Use this method with U8, I16, U16, Rgb32, and RgbU64 images.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteJpeg2000File(System.String,System.Boolean,System.Double)">
            <summary>
            Writes this image to a file in JPEG2000 format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="lossless">
                <see langword="true"/> to write the JPEG2000 file without loss of information; otherwise, <see langword="false"/>. The default value is <see langword="true"/>.
            </param>
            <param name="compressionRatio">
            The degree to which to compress the JPEG2000 file. For example, a <paramref name="compressionRatio"/> of 50 means that the resulting JPEG2000 file will be 50 times smaller than the size of the image in memory. This parameter is ignored if <paramref name="lossless"/> is <see langword="true"/>. This parameter has a default value of 50.
            </param>
            <remarks>
            Use this method with U8, I16, U16, Rgb32, and RgbU64 images.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteJpeg2000File(System.String,System.Boolean,System.Double,NationalInstruments.Vision.Jpeg2000AdvancedOptions)">
            <summary>
            Writes this image to a file in JPEG2000 format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="lossless">
                <see langword="true"/> to write the JPEG2000 file without loss of information; otherwise, <see langword="false"/>. The default value is <see langword="true"/>.
            </param>
            <param name="compressionRatio">
            The degree to which to compress the JPEG2000 file. For example, a <paramref name="compressionRatio"/> of 50 means that the resulting JPEG2000 file will be 50 times smaller than the size of the image in memory. This parameter is ignored if <paramref name="lossless"/> is <see langword="true"/>. This parameter has a default value of 50.
            </param>
            <param name="advancedOptions">
            Advanced options to use when writing this file.
            </param>
            <remarks>
            Use this method with U8, I16, U16, Rgb32, and RgbU64 images.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteJpeg2000File(System.String,System.Boolean,System.Double,NationalInstruments.Vision.Jpeg2000AdvancedOptions,NationalInstruments.Vision.WindowsForms.Palette)">
            <summary>
            Writes this image to a file in JPEG2000 format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="lossless">
                <see langword="true"/> to write the JPEG2000 file without loss of information; otherwise, <see langword="false"/>. The default value is <see langword="true"/>.
            </param>
            <param name="compressionRatio">
            The degree to which to compress the JPEG2000 file. For example, a <paramref name="compressionRatio"/> of 50 means that the resulting JPEG2000 file will be 50 times smaller than the size of the image in memory. This parameter is ignored if <paramref name="lossless"/> is <see langword="true"/>. This parameter has a default value of 50.
            </param>
            <param name="advancedOptions">
            Advanced options to use when writing this file.
            </param>
            <param name="palette">
            The palette to associate with U8 images. The default is a grayscale palette.
            </param>
            <remarks>
            Use this method with U8, I16, U16, Rgb32, and RgbU64 images.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WritePngFile(System.String)">
            <summary>
            Writes this image to a file in PNG format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <remarks>
            Use this method with U8, U16, I16, Rgb32, and RgbU64 images. PNG format always stores images in a lossless manner.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WritePngFile(System.String,System.UInt32)">
            <summary>
            Writes this image to a file in PNG format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="compressionSpeed">
            The compression speed to use. Acceptable values range from 0 to 1,000. The default value is 750.
            </param>
            <remarks>
            Use this method with U8, U16, I16, Rgb32, and RgbU64 images. PNG format always stores images in a lossless manner.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WritePngFile(System.String,System.UInt32,System.Boolean)">
            <summary>
            Writes this image to a file in PNG format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="compressionSpeed">
            The compression speed to use. Acceptable values range from 0 to 1,000. The default value is 750.
            </param>
            <param name="useBitDepth">
                <see langword="true"/> if the bit depth is written with the image; otherwise, <see langword="false"/>. This parameter has an effect only when writing U16, I16, or RgbU64 images. The default is <see langword="false"/>.
            </param>
            <remarks>
            Use this method with U8, U16, I16, Rgb32, and RgbU64 images. PNG format always stores images in a lossless manner.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WritePngFile(System.String,System.UInt32,System.Boolean,NationalInstruments.Vision.WindowsForms.Palette)">
            <summary>
            Writes this image to a file in PNG format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="compressionSpeed">
            The compression speed to use. Acceptable values range from 0 to 1,000. The default value is 750.
            </param>
            <param name="useBitDepth">
                <see langword="true"/> if the bit depth is written with the image; otherwise, <see langword="false"/>. This parameter has an effect only when writing U16, I16, or RgbU64 images. The default is <see langword="false"/>.
            </param>
            <param name="palette">
            The palette to associate with U8 images. The default is a grayscale palette.</param>
            <remarks>
            Use this method with U8, U16, I16, Rgb32, and RgbU64 images. PNG format always stores images in a lossless manner.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteTiffFile(System.String)">
            <summary>
            Writes an image to file in TIFF format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <remarks>
            Use this method with U8, U16, I16, Rgb32, and RgbU64 images.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteTiffFile(System.String,NationalInstruments.Vision.TiffOptions)">
            <summary>
            Writes an image to file in TIFF format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="options">
            The options to use when writing the file.</param>
            <remarks>
            Use this method with U8, U16, I16, Rgb32, and RgbU64 images.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteTiffFile(System.String,NationalInstruments.Vision.TiffOptions,NationalInstruments.Vision.WindowsForms.Palette)">
            <summary>
            Writes an image to file in TIFF format.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="options">
            The options to use when writing the file.</param>
            <param name="palette">
            The palette to associate with U8 images. The default is a grayscale palette.
            </param>
            <remarks>
            Use this method with U8, U16, I16, Rgb32, and RgbU64 images.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteVisionFile(System.String)">
            <summary>
            Writes this image, along with extra vision information associated with the image, to a PNG file. This extra vision information includes overlay, pattern matching template, calibration information, and custom data.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.WriteVisionFile(System.String,NationalInstruments.Vision.WindowsForms.Palette)">
            <summary>
            Writes this image, along with extra vision information associated with the image, to a PNG file. This extra vision information includes overlay, pattern matching template, calibration information, and custom data.
            </summary>
            <param name="fileName">
            The path of the file to write.</param>
            <param name="palette">
            The palette to associate with U8 images. The default is a grayscale palette.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.FillImage(NationalInstruments.Vision.PixelValue)">
            <summary>
            Sets each pixel in the image to a specified value.</summary>
            <param name="value">
            The value the method uses to fill the image pixels.  This <paramref name="value"/> must be of the same type as this <see cref="T:NationalInstruments.Vision.VisionImage" crefType="Unqualified"/>.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.FillImage(NationalInstruments.Vision.PixelValue,NationalInstruments.Vision.VisionImage)">
            <summary>
            Sets each pixel in the image to a specified value.</summary>
            <param name="value">
            The value the method uses to fill the image pixels.  This <paramref name="value"/> must be of the same type as this <see cref="T:NationalInstruments.Vision.VisionImage" crefType="Unqualified"/>.
            </param>
            <param name="mask">
            The method processes only those pixels in the image whose corresponding pixels in the mask are non-zero.  Set this parameter to <see langword="null"/> if you want to fill the entire image with pixel values.</param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.GetPixel(NationalInstruments.Vision.PointContour)">
            <summary>
            Reads a pixel value from an image.</summary>
            <param name="point">
            The coordinate of the pixel to read.</param>
            <returns>
            The pixel value.</returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.GetPixel(NationalInstruments.Vision.Roi)">
            <summary>
            Reads a pixel value from an image.
            </summary>
            <param name="roi">
            The coordinate of the pixel to read. This Roi must contain exactly one <see cref="T:NationalInstruments.Vision.PointContour" crefType="Unqualified"/>.
            </param>
            <returns>
            The pixel value.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.SetPixel(NationalInstruments.Vision.PointContour,NationalInstruments.Vision.PixelValue)">
            <summary>
            Changes a pixel value in an image.
            </summary>
            <param name="point">
            The coordinate of the pixel to set.</param>
            <param name="value">
            The pixel replacement value.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.SetPixel(NationalInstruments.Vision.Roi,NationalInstruments.Vision.PixelValue)">
            <summary>
            Changes a pixel value in an image.
            </summary>
            <param name="roi">
            The coordinate of the pixel to set. This Roi must contain exactly one <see cref="T:NationalInstruments.Vision.PointContour" crefType="Unqualified"/>.</param>
            <param name="value">
            The pixel replacement value.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.GetCalibrationInfo">
            <summary>
            Returns calibration information associated with the image.
            </summary>
            <returns>
            The calibration information associated with the image.
            </returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:NationalInstruments.Vision.VisionImage.GetCalibrationInfo(System.Boolean)" -->
        <member name="M:NationalInstruments.Vision.VisionImage.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a SerializationInfo with the data needed to serialize the target object. </summary>
            <param name="info">
            The SerializationInfo to populate with data. </param>
            <param name="context">
            The destination (see StreamingContext) for this serialization. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.Flatten">
            <summary>
            Flattens an image and stores its data.
            </summary>
            <returns>
            The flattened representation of the image.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.Flatten(NationalInstruments.Vision.FlattenType)">
            <summary>
            Flattens an image and stores its data.
            </summary>
            <param name="type">
            </param>
            <returns>
            The flattened representation of the image.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.Flatten(NationalInstruments.Vision.FlattenType,NationalInstruments.Vision.CompressionType)">
            <summary>
            Flattens an image and stores its data.
            </summary>
            <param name="type">
            The parts of the image to flatten.  The default is <see cref="F:NationalInstruments.Vision.FlattenType.ImageAndVisionInfo" crefType="Unqualified"/>.
            </param>
            <param name="compression">
            The type of compression to use on the image pixel data.  The default is <see cref="F:NationalInstruments.Vision.CompressionType.None" crefType="Unqualified"/>.
            </param>
            <returns>
            The flattened representation of the image.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.Flatten(NationalInstruments.Vision.FlattenType,NationalInstruments.Vision.CompressionType,System.Int32)">
            <summary>
            Flattens an image and stores its data.
            </summary>
            <param name="type">
            The parts of the image to flatten.  The default is <see cref="F:NationalInstruments.Vision.FlattenType.ImageAndVisionInfo" crefType="Unqualified"/>.
            </param>
            <param name="compression">
            The type of compression to use on the image pixel data.  The default is <see cref="F:NationalInstruments.Vision.CompressionType.None" crefType="Unqualified"/>.
            </param>
            <param name="quality">
            The quality of the compressed image pixel data.  Values range from 0 to 1000.  The default is 750.
            </param>
            <returns>
            The flattened representation of the image.
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.Unflatten(System.Byte[])">
            <summary>
            Takes the data returned from <see cref="M:NationalInstruments.Vision.VisionImage.Flatten" crefType="Unqualified"/> and stores it in an image.
            </summary>
            <param name="data">
            The data returned from <see cref="M:NationalInstruments.Vision.VisionImage.Flatten" crefType="Unqualified"/>.
            </param>
            <remarks>
            This method changes the type of this image to match the type in <paramref name="data"/>.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.BorderOperation(NationalInstruments.Vision.BorderMethod)">
            <summary>
            Modifies the border of an image.</summary>
            <param name="method">
            The method used to fill the border of the image.</param>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.VisionImage.Dispose">
            <summary>
            Releases the resources used by <see cref="T:NationalInstruments.Vision.VisionImage" crefType="Unqualified"/>.
            </summary>
        </member>
        <member name="P:NationalInstruments.Vision.VisionImage.BitDepth">
            <summary>
            Gets or sets the bit depth of the image.
            </summary>
            <value>
            This property applies only to U16, I16 and RGBU64 images. The value must be from 8 to 16 for U16 images, from 8 to 15 for I16 images, and from 8 to 16 for RGBU64 images, or 0. A value of 0 indicates that NI Vision should use the entire range of the image datatype.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.VisionImage.Type">
            <summary>
            Gets or sets the pixel type of the image.</summary>
            <value>
            The pixel type of the image.
            </value>
            <remarks>
            You can set this property to change the image type and convert the image data to the specified format.  For more options when converting the image, use <see cref="M:NationalInstruments.Vision.CommonAlgorithms.Cast(NationalInstruments.Vision.VisionImage,NationalInstruments.Vision.VisionImage,NationalInstruments.Vision.ImageType)" crefType="Unqualified"/>.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.VisionImage.Width">
            <summary>
            Gets the width of the image in pixels.</summary>
            <value>
            The width of the image in pixels.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.VisionImage.Height">
            <summary>
            Gets the height of the image in pixels.</summary>
            <value>
            The height of the image in pixels.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.VisionImage.BorderWidth">
            <summary>
            Gets or sets the width, in pixels, of the border created around an image.
            </summary>
            <value>
            The default value is 3. Only specific NI Vision methods related to morphology or filtering use border information. With a border width of 3, you can use 7x7 kernels with no change.  If you plan to use kernels larger than 7x7 in your process, specify a larger border width.</value>
        </member>
        <member name="P:NationalInstruments.Vision.VisionImage.MaskOffset">
            <summary>
            Gets or sets the offset of the mask image if this image is a mask.</summary>
            <value>
            The offset of the mask image if this image is a mask.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.VisionImage.InfoTypes">
            <summary>
            Gets the types of extra vision information associated with the image.
            </summary>
            <value>
            The types of extra vision information associated with the image.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.VisionImage.IsEmpty">
            <summary>
            Gets whether the image is empty.
            </summary>
            <value>
                <see langword="true"/> if all image pixels are 0; otherwise, <see langword="false"/>.
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.VisionImage.CustomData">
            <summary>
            Gets the custom user data associated with this image.
            </summary>
            <value>
            The custom user data associated with this image.
            </value>
            <remarks>
            Use the <see cref="M:NationalInstruments.Vision.VisionImage.SetSize(System.Int32,System.Int32)" crefType="Unqualified"/> method to change the size of the image.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.VisionImage.Overlays">
            <summary>
            Gets the overlay groups associated with this image.</summary>
            <value>
            The overlay groups associated with this image.
            </value>
            <remarks>
             Use <see cref="P:NationalInstruments.Vision.Overlays.Default" crefType="Unqualified"/> to access the default overlay group.
            </remarks>
        </member>
        <member name="T:NationalInstruments.Vision.Overlays">
            <summary>
            Represents the set of all overlay groups on a <see cref="T:NationalInstruments.Vision.VisionImage" crefType="Unqualified"/>.</summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Overlays.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.Overlays.Default">
            <summary>
            Gets the default overlay group.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Overlays.Item(System.String)">
            <summary>
            Gets the overlay group specified by the given name.</summary>
            <value>
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.Overlay">
            <summary>
            Provides methods that draw shapes onto the overlay. These shapes are displayed on top of a <see cref="T:NationalInstruments.Vision.VisionImage" crefType="Unqualified"/>.
            </summary>
            <remarks>
            Overlays do not modify the actual image pixels and are deleted when the image is resized. To save overlay information along with an image, use <see cref="M:NationalInstruments.Vision.VisionImage.WriteVisionFile(System.String)" crefType="Unqualified"/>.
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddLine(NationalInstruments.Vision.LineContour)">
            <summary>
            Overlays a line onto an image. 
            </summary>
            <param name="line">
            The location of the line.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddLine(NationalInstruments.Vision.LineContour,NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Overlays a line onto an image with the specified line and color. 
            </summary>
            <param name="line">
            The location of the line.
            </param>
            <param name="color">
            The color of the line. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddArc(NationalInstruments.Vision.Arc)">
            <summary>
            Overlays an arc onto an image with the specified arc. 
            </summary>
            <param name="arc">
            The location and size of the arc. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddArc(NationalInstruments.Vision.Arc,NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Overlays an arc onto an image with the specified arc and color. 
            </summary>
            <param name="arc">
            The location and size of the arc. 
            </param>
            <param name="color">
            The color of the arc. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddArc(NationalInstruments.Vision.Arc,NationalInstruments.Vision.Rgb32Value,NationalInstruments.Vision.DrawingMode)">
            <summary>
            Overlays an arc onto an image with the specified arc, color, and <see cref="T:NationalInstruments.Vision.DrawingMode" crefType="Unqualified"/>. 
            </summary>
            <param name="arc">
            The location and size of the arc. 
            </param>
            <param name="color">
            The color of the arc. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black. 
            </param>
            <param name="drawMode">
            The mode by which to draw the overlay. Valid options are <see cref="F:NationalInstruments.Vision.DrawingMode.DrawValue" crefType="Unqualified"/> and <see cref="F:NationalInstruments.Vision.DrawingMode.PaintValue" crefType="Unqualified"/>. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddRectangle(NationalInstruments.Vision.RectangleContour)">
            <summary>
            Overlays a rectangle onto an image with the specified coordinate location. 
            </summary>
            <param name="rect">
            The coordinate location of the rectangle. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddRectangle(NationalInstruments.Vision.RectangleContour,NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Overlays a rectangle onto an image with the specified coordinate location and color.  
            </summary>
            <param name="rect">
            The coordinate location of the rectangle. 
            </param>
            <param name="color">
            The color of the rectangle. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddRectangle(NationalInstruments.Vision.RectangleContour,NationalInstruments.Vision.Rgb32Value,NationalInstruments.Vision.DrawingMode)">
            <summary>
            Overlays a rectangle onto an image with the specified coordinate location, color, and drawing mode.  
            </summary>
            <param name="rect">
            The coordinate location of the rectangle. 
            </param>
            <param name="color">
            The color of the rectangle. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black.
            </param>
            <param name="drawMode">
            The mode by which to draw the overlay. Valid modes are <see cref="F:NationalInstruments.Vision.DrawingMode.DrawValue" crefType="Unqualified"/>, <see cref="F:NationalInstruments.Vision.DrawingMode.PaintValue" crefType="Unqualified"/>, and <see cref="F:NationalInstruments.Vision.DrawingMode.HighlightValue" crefType="Unqualified"/>.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddOval(NationalInstruments.Vision.OvalContour)">
            <summary>Overlays an oval onto an image. 
            </summary>
            <param name="oval">
            The location of the oval.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddOval(NationalInstruments.Vision.OvalContour,NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Overlays an oval onto an image with the specified oval and color. 
            </summary>
            <param name="oval">
            The location of the oval.
            </param>
            <param name="color">
            The color of the oval. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddOval(NationalInstruments.Vision.OvalContour,NationalInstruments.Vision.Rgb32Value,NationalInstruments.Vision.DrawingMode)">
            <summary>
            Overlays an oval onto an image with the specified oval and color. 
            </summary>
            <param name="oval">
            The location of the oval.
            </param>
            <param name="color">
            The color of the oval. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black. 
            </param>
            <param name="drawMode">
            The mode by which to draw the overlay. Valid options are <see cref="F:NationalInstruments.Vision.DrawingMode.DrawValue" crefType="Unqualified"/> and <see cref="F:NationalInstruments.Vision.DrawingMode.PaintValue" crefType="Unqualified"/>.  
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddBitmap(System.Drawing.Bitmap,NationalInstruments.Vision.PointContour)">
            <summary>
            Overlays a bitmap onto an image with the specified bitmap and origin. 
            </summary>
            <param name="bitmap">
            The two-dimensional array of bitmap values to overlay on the image.
            </param>
            <param name="origin">
            The top-left corner of where the bitmap will be drawn.</param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddBitmap(System.Drawing.Bitmap,NationalInstruments.Vision.PointContour,System.Int32,System.Int32)">
            <summary>
            Overlays a bitmap onto an image with the specified bitmap, origin, width, and height. 
            </summary>
            <param name="bitmap">
            The two-dimensional array of bitmap values to overlay on the image.
            </param>
            <param name="origin">
            The top-left corner of where the bitmap will be drawn.
            </param>
            <param name="width">
            The width of the bitmap.
            </param>
            <param name="height">
            The height of the bitmap.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddMetafile(System.Drawing.Imaging.Metafile)">
            <summary>
            Overlays a metafile onto an image. 
            </summary>
            <param name="metafile">
            The Windows handle to the metafile that you want to convert into an overlay. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddMetafile(System.Drawing.Imaging.Metafile,NationalInstruments.Vision.RectangleContour)">
            <summary>
            Overlays a metafile onto an image with the specified metafile and rectangle. 
            </summary>
            <param name="metafile">
            The Windows handle to the metafile that you want to convert into an overlay. 
            </param>
            <param name="rect">
            The location of rectangular region within the image that the function overlays the metafile. To use the bounding rectangle information stored in the metafile, set this parameter to <see cref="P:NationalInstruments.Vision.RectangleContour.None" crefType="Unqualified"/>.  
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddText(System.String,NationalInstruments.Vision.PointContour)">
            <summary>
            Overlays a string of text onto an image with the specified text and coordinate location. 
            </summary>
            <param name="text">
            The text that the method overlays. 
            </param>
            <param name="origin">
            The coordinate location of the text reference point. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddText(System.String,NationalInstruments.Vision.PointContour,NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Overlays a string of text onto an image  with the specified text, coordinate location, and color.  
            </summary>
            <param name="text">
            The text that the method overlays. 
            </param>
            <param name="origin">
            The coordinate location of the text reference point. 
            </param>
            <param name="color">
            The color of the text. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddText(System.String,NationalInstruments.Vision.PointContour,NationalInstruments.Vision.Rgb32Value,NationalInstruments.Vision.OverlayTextOptions)">
            <summary>
            Overlays a string of text onto an image with the specified text, coordinate location, color, and text style. 
            </summary>
            <param name="text">
            The text that the method overlays. 
            </param>
            <param name="origin">
            The coordinate location of the text reference point. 
            </param>
            <param name="color">
            The color of the text. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black. 
            </param>
            <param name="options">
            The <see cref="T:NationalInstruments.Vision.OverlayTextOptions" crefType="Unqualified"/> that the method uses to overlay text. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddPoint(NationalInstruments.Vision.PointContour)">
            <summary>
            Overlays a point onto an image. 
            </summary>
            <param name="point">
            The coordinate location of the point to overlay.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddPoint(NationalInstruments.Vision.PointContour,NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Overlays a point onto an image. 
            </summary>
            <param name="point">
            The coordinate location of the point to overlay.
            </param>
            <param name="color">
            The color of the point. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddPoint(NationalInstruments.Vision.PointContour,NationalInstruments.Vision.Rgb32Value,NationalInstruments.Vision.PointSymbol)">
            <summary>
            Overlays a point onto an image. 
            </summary>
            <param name="point">
            The coordinate location of the point to overlay.
            </param>
            <param name="color">
            The color of the point. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black.
            </param>
            <param name="symbol">
            The symbol the method uses to represent the point. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddPoints(System.Collections.ObjectModel.Collection{NationalInstruments.Vision.PointContour})">
            <summary>
            Overlays a series of points onto an image. 
            </summary>
            <param name="points">
            A collection describing the coordinate location of each point to overlay. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddPoints(System.Collections.ObjectModel.Collection{NationalInstruments.Vision.PointContour},NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Overlays a series of points onto an image. 
            </summary>
            <param name="points">
            A collection  describing the coordinate location of each point to overlay. 
            </param>
            <param name="color">
            "The color of the points to overlay. The alpha color channel is not supported. Setting the color to transparent has
            the same effect as selecting black.</param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddPoints(System.Collections.ObjectModel.Collection{NationalInstruments.Vision.PointContour},NationalInstruments.Vision.Rgb32Value,NationalInstruments.Vision.PointSymbol)">
            <summary>
            Overlays a series of points onto an image. 
            </summary>
            <param name="points">
            A collection describing the coordinate location of each point to overlay. 
            </param>
            <param name="color">
            "The color of the points to overlay. The alpha color channel is not supported. Setting the color to transparent has
            the same effect as selecting black.</param>
            <param name="symbol">
            The symbol the method uses to represent each point. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddRoi(NationalInstruments.Vision.Roi)">
            <summary>
            Overlays a region of interest onto an image with the specified region. 
            </summary>
            <param name="roi">
            The region of interest to overlay on to the image. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddRoi(NationalInstruments.Vision.Roi,NationalInstruments.Vision.PointSymbol)">
            <summary>
            Overlays a region of interest onto an image with the specified region and symbol. 
            </summary>
            <param name="roi">
            The region of interest to overlay on to the image. 
            </param>
            <param name="symbol">
            The symbol to represent a point contour in the overlay. 
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddPolyline(NationalInstruments.Vision.PolylineContour)">
            <summary>
            Overlays a polyline onto an image with the specified coordinate location.
            </summary>
            <param name="polyline">
            The coordinate location of the polyline.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddPolyline(NationalInstruments.Vision.PolylineContour,NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Overlays a polyline onto an image with the specified coordinate location and color.
            </summary>
            <param name="polyline">
            The coordinate location of the polyline.
            </param>
            <param name="color">
            The color of the polyline. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddPolygon(NationalInstruments.Vision.PolygonContour)">
            <summary>
            Overlays a polygon onto an image with the specified coordinate location.
            </summary>
            <param name="polygon">
            The coordinate location of the polygon.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddPolygon(NationalInstruments.Vision.PolygonContour,NationalInstruments.Vision.Rgb32Value)">
            <summary>
            Overlays a polygon onto an image with the specified coordinate location and color.
            </summary>
            <param name="polygon">
            The coordinate location of the polygon.
            </param>
            <param name="color">
            The color of the polygon. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.AddPolygon(NationalInstruments.Vision.PolygonContour,NationalInstruments.Vision.Rgb32Value,NationalInstruments.Vision.DrawingMode)">
            <summary>
            Overlays a polygon onto an image with the specified coordinate location, color, and drawing mode.
            </summary>
            <param name="polygon">
            The coordinate location of the polygon.
            </param>
            <param name="color">
            The color of the polygon. The alpha color channel is not supported. Setting the <paramref name="color"/> to transparent has the same effect as selecting black.
            </param>
            <param name="drawMode">
            The mode by which to draw the overlay. Valid modes are <see cref="F:NationalInstruments.Vision.DrawingMode.DrawValue" crefType="Unqualified"/> and <see cref="F:NationalInstruments.Vision.DrawingMode.PaintValue" crefType="Unqualified"/>.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.Clear">
            <summary>
            Removes all the shapes from this overlay group.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.Merge">
            <summary>
            Makes this overlay part of the image to which it is attached, and removes the Overlay object.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.Merge(NationalInstruments.Vision.WindowsForms.Palette)">
            <summary>
            Makes this overlay part of the image to which it is attached, and removes the Overlay object.
            </summary>
            <param name="palette">
            A palette to associate with 8-bit images.
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.Overlay.CopyTo(NationalInstruments.Vision.VisionImage)">
            <summary>
            Copies the shapes in this overlay group to another <see cref="T:NationalInstruments.Vision.VisionImage" crefType="Unqualified"/>.
            </summary>
            <param name="destination">
            The image to copy the shapes to.</param>
        </member>
        <member name="P:NationalInstruments.Vision.Overlay.Name">
            <summary>Gets the name of the overlay group.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Overlay.TransformBehaviors">
            <summary>
            Gets or sets the transformation behavior information for this overlay group.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.Overlay.DefaultColor">
            <summary>
            Gets or sets the default color for the overlay object.
            </summary>
            <value>
            The default value is <see cref="F:NationalInstruments.Vision.Rgb32Value.GreenColor" crefType="PartiallyQualified"/>.
            </value>
        </member>
        <member name="T:NationalInstruments.Vision.CustomDataDictionary">
            <summary>
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation. 
            </summary>
            <returns>
            A string representation of the value of this instance. 
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.Add(System.String,System.Object)">
            <summary>
            Adds the string key and associated custom data object to the <see cref="T:NationalInstruments.Vision.CustomDataDictionary" crefType="Unqualified"/>.</summary>
            <param name="key">
            </param>
            <param name="value">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
            <summary>
            Adds the string key and associated custom data object to the <see cref="T:NationalInstruments.Vision.CustomDataDictionary" crefType="Unqualified"/>.
            </summary>
            <param name="key">
            </param>
            <param name="value">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.ContainsKey(System.String)">
            <summary>
            Returns whether this <see cref="T:NationalInstruments.Vision.CustomDataDictionary" crefType="Unqualified"/> contains data associated with this key.
            </summary>
            <param name="key">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.System#Collections#IDictionary#Contains(System.Object)">
            <summary>
            Returns whether this <see cref="T:NationalInstruments.Vision.CustomDataDictionary" crefType="Unqualified"/> contains the key and associated data.
            </summary>
            <param name="key">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.Clear">
            <summary>
            Removes all keys and custom data from the <see cref="T:NationalInstruments.Vision.CustomDataDictionary" crefType="Unqualified"/>.
            </summary>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.Remove(System.String)">
            <summary>
            Removes the key and associated data from the <see cref="T:NationalInstruments.Vision.CustomDataDictionary" crefType="Unqualified"/>.
            </summary>
            <param name="key">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.System#Collections#IDictionary#Remove(System.Object)">
            <summary>
            Removes the key and associated data from the <see cref="T:NationalInstruments.Vision.CustomDataDictionary" crefType="Unqualified"/>.
            </summary>
            <param name="key">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the keys and associated data into an array.
            </summary>
            <param name="array">
            </param>
            <param name="index">
            </param>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.GetDataRawBytes(System.String)">
            <summary>
            Gets the raw data associated with this key.
            </summary>
            <param name="key">
            </param>
            <returns>
            </returns>
            <remarks>
            You can use this method to get custom data that can be seen in other Application Development Environments (ADEs).
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.SetDataRawBytes(System.String,System.Byte[])">
            <summary>
            Sets the raw data associated with this key.
            </summary>
            <param name="key">
            </param>
            <param name="value">
            </param>
            <remarks>
            You can use this method to set custom data that can be seen in other Application Development Environments (ADEs).
            </remarks>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.TryGetValue(System.String,System.Object@)">
            <summary>
            </summary>
            <param name="key">
            </param>
            <param name="value">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.System#Collections#IDictionary#GetEnumerator">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="M:NationalInstruments.Vision.CustomDataDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            </summary>
            <returns>
            </returns>
        </member>
        <member name="P:NationalInstruments.Vision.CustomDataDictionary.Count">
            <summary>
            Gets the number of custom keys.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CustomDataDictionary.System#Collections#IDictionary#IsReadOnly">
            <summary>
            Gets whether this <see cref="T:NationalInstruments.Vision.CustomDataDictionary" crefType="Unqualified"/> is not read only.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CustomDataDictionary.System#Collections#IDictionary#IsFixedSize">
            <summary>
            Gets whether this <see cref="T:NationalInstruments.Vision.CustomDataDictionary" crefType="Unqualified"/> is not of a fixed size.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CustomDataDictionary.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets the synchronizing object.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CustomDataDictionary.System#Collections#ICollection#IsSynchronized">
            <summary>
            Indicates if the <see cref="T:NationalInstruments.Vision.CustomDataDictionary" crefType="Unqualified"/> is not synchronized.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CustomDataDictionary.Item(System.String)">
            <summary>
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CustomDataDictionary.System#Collections#IDictionary#Item(System.Object)">
            <summary>
            Gets or sets the custom data associated with a key, which must be a string. 
            </summary>
            <value>
            </value>
            <remarks>
            Note that you can only get and set objects that are serializable, which includes most classes provided with NI Vision.
            </remarks>
        </member>
        <member name="P:NationalInstruments.Vision.CustomDataDictionary.Keys">
            <summary>
            Gets the set of valid string keys that have custom data associated with them.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CustomDataDictionary.System#Collections#IDictionary#Keys">
            <summary>
            Gets he set of valid string keys that have custom data associated with them.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CustomDataDictionary.Values">
            <summary>
            Gets the collection of objects that are custom data values.
            </summary>
            <value>
            </value>
        </member>
        <member name="P:NationalInstruments.Vision.CustomDataDictionary.System#Collections#IDictionary#Values">
            <summary>
            </summary>
            <value>
            </value>
        </member>
    </members>
</doc>
